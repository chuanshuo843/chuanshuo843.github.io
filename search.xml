<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>微信动物餐厅游戏辅助</title>
      <link href="/article/ecb6ef2b.html"/>
      <url>/article/ecb6ef2b.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近迷上了微信小游戏里面的动物餐厅,每次刷任务太麻烦了就用auto.js写了一个辅助工具</p><h1 id="源码-GitHub"><a href="#源码-GitHub" class="headerlink" title="源码 GitHub"></a>源码 <a href="https://github.com/chuanshuo843/WxAnimalTools" target="_blank" rel="noopener">GitHub</a></h1><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//餐厅颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_RESTAURANT = <span class="string">'#ffccb07c'</span>;</span><br><span class="line"><span class="comment">//花园颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_GARDEN = <span class="string">'#ffcfc169'</span>;</span><br><span class="line"><span class="comment">//厨房颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_KITCHEN = <span class="string">'#ffd3c088'</span>;</span><br><span class="line"><span class="comment">//提示确认颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_NOTICE = <span class="string">'#ffffd055'</span>;</span><br><span class="line"><span class="comment">//小费提示颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_GRATUITY = <span class="string">'#fff9f5e8'</span>;</span><br><span class="line"><span class="comment">//任务提示颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_TASK_NOTICE = <span class="string">"#ffd96a28"</span>;</span><br><span class="line"><span class="comment">//菜单被覆盖颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_MENU_COVER = <span class="string">'#ff876e2d'</span>;</span><br><span class="line"><span class="comment">//双倍按钮-&gt;直接领取</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_DOUBLE_NO = <span class="string">'#ffe9d2bf'</span>;</span><br><span class="line"><span class="comment">//歌手颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_SINGER = <span class="string">'#ffe89781'</span>;</span><br><span class="line"><span class="comment">//订单完成颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_ORDER_COMPLETE = <span class="string">'#ffa0bf7c'</span>;</span><br><span class="line"><span class="comment">//对话框颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_TALK = <span class="string">'#ffdd765a'</span>;</span><br><span class="line"><span class="comment">//种植花朵按钮颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_FLOWER_CULTIVATE = <span class="string">'#ffe2c36a'</span>;</span><br><span class="line"><span class="comment">//花1颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_FLOWER_1 = <span class="string">'#fff9f4e7'</span>;</span><br><span class="line"><span class="comment">//花2颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_FLOWER_2 = <span class="string">'#ffe7a72f'</span>;</span><br><span class="line"><span class="comment">//花3颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_FLOWER_3 = <span class="string">'#ffc56d3a'</span>;</span><br><span class="line"><span class="comment">//花4颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_FLOWER_4 = <span class="string">'#ff9d73cd'</span>;</span><br><span class="line"><span class="comment">//宣传按钮颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_PROPAGANDA = <span class="string">'#ffdaa238'</span>;</span><br><span class="line"><span class="comment">//星星颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_START = <span class="string">'#ffdba141'</span>;</span><br><span class="line"><span class="comment">//星星被覆盖颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_START_COVER = <span class="string">"#ff745522"</span>;</span><br><span class="line"><span class="comment">//切页按钮颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_SWITCH_BTN = <span class="string">"#ffd5b3aa"</span>;</span><br><span class="line"><span class="comment">//小鱼颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_FISH = <span class="string">"#ff929292"</span>;</span><br><span class="line"><span class="comment">//白色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_WHITE = <span class="string">'#ffffffff'</span>;</span><br><span class="line"><span class="comment">//黑色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_BLACK = <span class="string">'#000000'</span>;</span><br><span class="line"><span class="comment">//扑克颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_POKER = <span class="string">'#ff57a7b5'</span>;</span><br><span class="line"><span class="comment">//广告按钮颜色</span></span><br><span class="line"><span class="keyword">const</span> BG_COLOR_ADV_BTN = <span class="string">'#ff1aad19'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//手指1,2,3</span></span><br><span class="line"><span class="keyword">const</span> FINGER_1 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> FINGER_2 = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">const</span> FINGER_3 = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//按钮点击时间</span></span><br><span class="line"><span class="keyword">const</span> TIME_BTN_CLICK = <span class="number">200</span>;</span><br><span class="line"><span class="comment">//弹窗时间</span></span><br><span class="line"><span class="keyword">const</span> TIME_SHOW_CONFIRM = <span class="number">800</span>;</span><br><span class="line"><span class="comment">//广告播放时间</span></span><br><span class="line"><span class="keyword">const</span> TIME_ADV_LOCK = <span class="number">1000</span>*<span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Animal = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//当前所在页面颜色</span></span><br><span class="line">    <span class="keyword">this</span>.current_bg_color = <span class="string">''</span>;</span><br><span class="line">    <span class="comment">//脚本运行状态</span></span><br><span class="line">    <span class="keyword">this</span>.is_run = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//页面切换状态</span></span><br><span class="line">    <span class="keyword">this</span>.switch_page_status = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">//RootAutomator 手势处理对象</span></span><br><span class="line">    <span class="keyword">this</span>.ra = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">//范围颜色比对</span></span><br><span class="line">    <span class="keyword">this</span>.isColorRegion = <span class="function">(<span class="params">x,y,w,h,color,success,fail</span>) =&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> img = captureScreen();</span><br><span class="line">        <span class="keyword">var</span> point = <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//数组处理</span></span><br><span class="line">        <span class="keyword">if</span>(color.constructor == <span class="built_in">Array</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(color_index <span class="keyword">of</span> color)&#123;</span><br><span class="line">                point = images.findColor(img, color_index, &#123;<span class="attr">region</span>: [x, y, w, h]&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//字符串处理</span></span><br><span class="line">        <span class="keyword">if</span>(color.constructor == <span class="built_in">String</span>)&#123;</span><br><span class="line">            point = images.findColor(img, color, &#123;<span class="attr">region</span>: [x, y, w, h]&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(point != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(success != <span class="literal">undefined</span>)&#123;</span><br><span class="line">                success.call(<span class="keyword">this</span>,point);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(fail != <span class="literal">undefined</span>)&#123;</span><br><span class="line">                fail.call(<span class="keyword">this</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//检查颜色是否匹配</span></span><br><span class="line">    <span class="keyword">this</span>.isColor = <span class="function">(<span class="params">x,y,color,success,fail</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> img = captureScreen();</span><br><span class="line">        <span class="keyword">var</span> findColor = images.pixel(img, x, y);</span><br><span class="line">        <span class="keyword">var</span> check = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">//数组处理</span></span><br><span class="line">        <span class="keyword">if</span>(color.constructor == <span class="built_in">Array</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(color_index <span class="keyword">of</span> color)&#123;</span><br><span class="line">                <span class="keyword">if</span>(colors.isSimilar(colors.toString(findColor),color_index))&#123;</span><br><span class="line">                    check = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//字符串处理</span></span><br><span class="line">        <span class="keyword">if</span>(color.constructor == <span class="built_in">String</span>)&#123;</span><br><span class="line">            check = colors.isSimilar(colors.toString(findColor),color);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//回调函数处理</span></span><br><span class="line">        <span class="keyword">if</span>(check)&#123;</span><br><span class="line">            <span class="keyword">if</span>(success != <span class="literal">undefined</span>)&#123;</span><br><span class="line">                success.call(<span class="keyword">this</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(fail != <span class="literal">undefined</span>)&#123;</span><br><span class="line">                fail.call(<span class="keyword">this</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建测试点</span></span><br><span class="line">    <span class="keyword">this</span>.createTestDot = <span class="function"><span class="keyword">function</span>(<span class="params">x,y</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> dot = floaty.rawWindow(</span><br><span class="line">            &lt;frame h=<span class="string">"*"</span> w=<span class="string">"*"</span>&gt;</span><br><span class="line">                &lt;button h=<span class="string">"2"</span> w=<span class="string">"2"</span> id=<span class="string">"dot"</span> rotation=<span class="string">"45"</span> text=<span class="string">""</span> bg=<span class="string">"#FF3030"</span> /&gt;</span><br><span class="line">            &lt;<span class="regexp">/frame&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/设置悬浮窗位置</span></span><br><span class="line"><span class="regexp">        dot.setPosition(x, y);</span></span><br><span class="line"><span class="regexp">        /</span><span class="regexp">/5秒后移除</span></span><br><span class="line"><span class="regexp">        setTimeout(() =&gt; &#123;</span></span><br><span class="line"><span class="regexp">            dot.close();</span></span><br><span class="line"><span class="regexp">        &#125;, 5000);</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp">    /</span><span class="regexp">/创建一个正方形</span></span><br><span class="line"><span class="regexp">    this.createTestSquare = (x, y, w, h) =&gt; &#123;</span></span><br><span class="line"><span class="regexp">        var square = floaty.rawWindow(</span></span><br><span class="line"><span class="regexp">            &lt;frame h="*" w="*" bg="#FF3030" alpha="0.2"&gt;&lt;/</span>frame&gt;</span><br><span class="line">        );</span><br><span class="line">        square.setSize(w,h);</span><br><span class="line">        <span class="comment">//设置悬浮窗位置</span></span><br><span class="line">        square.setPosition(x, y);</span><br><span class="line">        <span class="comment">//5秒后移除</span></span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            square.close();</span><br><span class="line">        &#125;, <span class="number">5000</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//测试颜色显示(需要截图)</span></span><br><span class="line">    <span class="keyword">this</span>.showTestColor = <span class="function">(<span class="params">x, y</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> img = captureScreen();</span><br><span class="line">        <span class="keyword">var</span> color = images.pixel(img, x, y);</span><br><span class="line">        dialogs.build(&#123;</span><br><span class="line">            title: colors.toString(color)</span><br><span class="line">        &#125;).show();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//获取当前点击位置</span></span><br><span class="line">    <span class="keyword">this</span>.getCurrentClickPos = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $<span class="keyword">this</span> = <span class="keyword">this</span>;</span><br><span class="line">        toast(<span class="string">"进入屏幕点击监听事件"</span>);</span><br><span class="line">        events.observeTouch();</span><br><span class="line">        <span class="comment">//注册触摸监听器</span></span><br><span class="line">        events.onTouch(<span class="function"><span class="keyword">function</span>(<span class="params">p</span>)</span>&#123;</span><br><span class="line">            <span class="comment">//触摸事件发生时, 打印出触摸的点的坐标</span></span><br><span class="line">            toast(<span class="string">"当前点击位置:"</span>+p.x + <span class="string">","</span> + p.y);</span><br><span class="line">            $<span class="keyword">this</span>.createTestDot(p.x, p.y);</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//点击左边切换按钮</span></span><br><span class="line">    <span class="keyword">this</span>.clickLeft = <span class="function">(<span class="params">success</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> isOk = <span class="keyword">this</span>.isColorRegion(<span class="number">25</span>,<span class="number">1051</span>,<span class="number">50</span>,<span class="number">70</span>,BG_COLOR_SWITCH_BTN,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y,TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span>(isOk)&#123;</span><br><span class="line">            toast(<span class="string">"找到了左边按钮&amp;点击了"</span>)</span><br><span class="line">            sleep(TIME_SHOW_CONFIRM);</span><br><span class="line">            success.call(<span class="keyword">this</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            toast(<span class="string">"没有找到左边按钮"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> isOk;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//点击右边切换按钮</span></span><br><span class="line">    <span class="keyword">this</span>.clickRight = <span class="function">(<span class="params">success</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> isOk = <span class="keyword">this</span>.isColorRegion(<span class="number">998</span>,<span class="number">1051</span>,<span class="number">50</span>,<span class="number">70</span>,BG_COLOR_SWITCH_BTN,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y,TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span>(isOk)&#123;</span><br><span class="line">            toast(<span class="string">"找到了右边边按钮&amp;点击了"</span>)</span><br><span class="line">            sleep(TIME_SHOW_CONFIRM);</span><br><span class="line">            success.call(<span class="keyword">this</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            toast(<span class="string">"没有找到右边边按钮"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> isOk;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//切换页面</span></span><br><span class="line">    <span class="keyword">this</span>.switchPage = <span class="function"><span class="keyword">function</span>(<span class="params">target</span>)</span>&#123;</span><br><span class="line">        toast(<span class="string">"滑动页面 -&gt; "</span>+target);</span><br><span class="line">        <span class="comment">//当前页为花园</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.current_bg_color == BG_COLOR_GARDEN)&#123;</span><br><span class="line">            <span class="keyword">switch</span>(target)&#123;</span><br><span class="line">                <span class="keyword">case</span> BG_COLOR_KITCHEN:</span><br><span class="line">                        <span class="keyword">if</span>(<span class="keyword">this</span>.clickRight(<span class="keyword">this</span>.isRestaurant))&#123;</span><br><span class="line">                            <span class="keyword">this</span>.clickRight(<span class="keyword">this</span>.iskitchen);</span><br><span class="line">                        &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> BG_COLOR_RESTAURANT:</span><br><span class="line">                        <span class="keyword">this</span>.clickRight(<span class="keyword">this</span>.isRestaurant);</span><br><span class="line">                    <span class="keyword">break</span>;    </span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;    </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.current_bg_color == BG_COLOR_KITCHEN)&#123;</span><br><span class="line">            <span class="comment">//当前页为厨房</span></span><br><span class="line">            <span class="keyword">switch</span>(target)&#123;</span><br><span class="line">                <span class="keyword">case</span> BG_COLOR_GARDEN:</span><br><span class="line">                        <span class="keyword">if</span>(<span class="keyword">this</span>.clickLeft(<span class="keyword">this</span>.isRestaurant))&#123;</span><br><span class="line">                            <span class="keyword">this</span>.clickLeft(<span class="keyword">this</span>.isGarden);</span><br><span class="line">                        &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> BG_COLOR_RESTAURANT:</span><br><span class="line">                        <span class="keyword">this</span>.clickLeft(<span class="keyword">this</span>.isRestaurant);</span><br><span class="line">                    <span class="keyword">break</span>;   </span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;    </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>.current_bg_color == BG_COLOR_RESTAURANT)&#123;</span><br><span class="line">            <span class="comment">//当前页为餐厅</span></span><br><span class="line">            <span class="keyword">switch</span>(target)&#123;</span><br><span class="line">                <span class="keyword">case</span> BG_COLOR_GARDEN:</span><br><span class="line">                        <span class="keyword">this</span>.clickLeft(<span class="keyword">this</span>.isGarden);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> BG_COLOR_KITCHEN:</span><br><span class="line">                        <span class="keyword">this</span>.clickRight(<span class="keyword">this</span>.iskitchen);</span><br><span class="line">                    <span class="keyword">break</span>;   </span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;    </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查餐厅颜色是否匹配</span></span><br><span class="line">    <span class="keyword">this</span>.isRestaurant = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">"检测是否是餐厅"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.isColor(device.width<span class="number">-500</span>, device.height/<span class="number">7</span>,BG_COLOR_RESTAURANT, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.current_bg_color = BG_COLOR_RESTAURANT;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查花园颜色是否匹配</span></span><br><span class="line">    <span class="keyword">this</span>.isGarden = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">"检测是否是花园"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.isColor(device.width<span class="number">-100</span>, <span class="number">150</span>,BG_COLOR_GARDEN, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.current_bg_color = BG_COLOR_GARDEN;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查厨房颜色是否匹配</span></span><br><span class="line">    <span class="keyword">this</span>.iskitchen = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">"检测是否是厨房"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.isColor(device.width/<span class="number">2</span>, <span class="number">480</span>,BG_COLOR_KITCHEN, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.current_bg_color = BG_COLOR_KITCHEN;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查花园金钱</span></span><br><span class="line">    <span class="keyword">this</span>.checkGardenMoney = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// //花园星星1</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(470,501,100,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">470</span>,<span class="number">501</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_START,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y,TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //花园星星2</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(655,501,100,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">655</span>,<span class="number">501</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_START,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y,TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //花园星星3</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(840,525,100,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">840</span>,<span class="number">525</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_START,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y,TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// //花园鱼1</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(10,550,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">10</span>,<span class="number">550</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //花园鱼2</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(681,455,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">681</span>,<span class="number">455</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.checkkitchenMoney = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//厨房鱼1</span></span><br><span class="line">        <span class="comment">//this.createTestSquare(36,638,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">36</span>,<span class="number">638</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//厨房鱼2</span></span><br><span class="line">        <span class="comment">//this.createTestSquare(855,730,120,70);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">855</span>,<span class="number">730</span>,<span class="number">120</span>,<span class="number">70</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//厨房鱼3</span></span><br><span class="line">        <span class="comment">//this.createTestSquare(814,783,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">814</span>,<span class="number">783</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//厨房鱼4</span></span><br><span class="line">        <span class="comment">//this.createTestSquare(390,1600,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">390</span>,<span class="number">1600</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.checkRestaurantMoney = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//检查点菜</span></span><br><span class="line">        <span class="comment">//this.createTestSquare(330,750,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">330</span>,<span class="number">750</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_GRATUITY,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//this.createTestSquare(600,750,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">600</span>,<span class="number">750</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_GRATUITY,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//this.createTestSquare(870,750,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">870</span>,<span class="number">750</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_GRATUITY,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//this.createTestSquare(330,1110,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">330</span>,<span class="number">1110</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_GRATUITY,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//this.createTestSquare(600,1110,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">600</span>,<span class="number">1110</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_GRATUITY,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//this.createTestSquare(870,1110,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">870</span>,<span class="number">1110</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_GRATUITY,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">         <span class="comment">// //餐厅鱼1</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(65,826,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">65</span>,<span class="number">826</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //餐厅鱼2</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(390,920,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">390</span>,<span class="number">920</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //餐厅鱼3</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(657,920,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">657</span>,<span class="number">920</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //餐厅鱼4</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(930,920,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">930</span>,<span class="number">920</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //餐厅鱼5</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(390,1259,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">390</span>,<span class="number">1259</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //餐厅鱼6</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(657,1259,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">657</span>,<span class="number">1259</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //餐厅鱼7</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(930,1259,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">930</span>,<span class="number">1259</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //餐厅鱼7</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(385,1557,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">385</span>,<span class="number">1557</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //餐厅鱼8</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(410,1790,120,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">410</span>,<span class="number">1790</span>,<span class="number">120</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查花朵展示</span></span><br><span class="line">    <span class="keyword">this</span>.checkFlowerShow = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">'检查花朵展示情况'</span>);</span><br><span class="line">        sleep(TIME_SHOW_CONFIRM);</span><br><span class="line">        <span class="comment">//检查flower1</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">420</span>,<span class="number">940</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_FLOWER_1,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x,point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //检查flower2</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(device.width<span class="number">-185</span>,<span class="number">958</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_FLOWER_2,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x,point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //检查flower3</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">420</span>,<span class="number">1258</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_FLOWER_3,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x,point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //检查flower4</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(device.width<span class="number">-185</span>,<span class="number">1270</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_FLOWER_4,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x,point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查花朵是否成熟</span></span><br><span class="line">    <span class="keyword">this</span>.checkFlowerIsRipe = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">'检查花朵成熟情况'</span>);</span><br><span class="line">        <span class="comment">// //花园成熟1</span></span><br><span class="line">        <span class="comment">//this.createTestSquare(210,927,120,120);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">210</span>,<span class="number">927</span>,<span class="number">120</span>,<span class="number">120</span>,BG_COLOR_FLOWER_1,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y,TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //花园成熟2</span></span><br><span class="line">        <span class="comment">//this.createTestSquare(670,927,120,120);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">670</span>,<span class="number">927</span>,<span class="number">120</span>,<span class="number">120</span>,BG_COLOR_FLOWER_2,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y,TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //花园成熟3</span></span><br><span class="line">        <span class="comment">//this.createTestSquare(210,1240,120,120);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">210</span>,<span class="number">1240</span>,<span class="number">120</span>,<span class="number">120</span>,BG_COLOR_FLOWER_3,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y,TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //花园成熟4</span></span><br><span class="line">        <span class="comment">//this.createTestSquare(670,1240,120,120);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">670</span>,<span class="number">1240</span>,<span class="number">120</span>,<span class="number">120</span>,BG_COLOR_FLOWER_4,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y,TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查花朵栽种</span></span><br><span class="line">    <span class="keyword">this</span>.checkFlowerCultivate = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">'检查花朵种植情况'</span>);</span><br><span class="line">        <span class="comment">// //花园种植1</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(365,801,100,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">365</span>,<span class="number">801</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_FLOWER_CULTIVATE,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">            <span class="comment">//检查对话框</span></span><br><span class="line">            <span class="keyword">this</span>.checkNotice();</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //花园种植2</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(845,801,100,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">845</span>,<span class="number">801</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_FLOWER_CULTIVATE,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">            <span class="comment">//检查对话框</span></span><br><span class="line">            <span class="keyword">this</span>.checkNotice();</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //花园种植3</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(365,1110,100,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">365</span>,<span class="number">1110</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_FLOWER_CULTIVATE,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">            <span class="comment">//检查对话框</span></span><br><span class="line">            <span class="keyword">this</span>.checkNotice();</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// //花园种植4</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(845,1110,100,100);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">845</span>,<span class="number">1110</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_FLOWER_CULTIVATE,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">            <span class="comment">//检查对话框</span></span><br><span class="line">            <span class="keyword">this</span>.checkNotice();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查Double提示</span></span><br><span class="line">    <span class="keyword">this</span>.checkDoubleNotice = <span class="function">(<span class="params">isDouble</span>) =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">"检测double&amp;点击"</span>);</span><br><span class="line">        sleep(TIME_SHOW_CONFIRM);</span><br><span class="line">        <span class="comment">//小费双倍</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(700,1310,100,100);</span></span><br><span class="line">        <span class="comment">//小费直接领取,颜色:#ffe9d2bf</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(275,1310,100,100);</span></span><br><span class="line">        <span class="keyword">if</span>(!isDouble)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.isColorRegion(<span class="number">275</span>,<span class="number">1310</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_DOUBLE_NO,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.isColorRegion(<span class="number">700</span>,<span class="number">1310</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_NOTICE,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查小费</span></span><br><span class="line">    <span class="keyword">this</span>.checkGratuity = <span class="function">(<span class="params">isGet</span>) =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">"检测小费&amp;点击"</span>);</span><br><span class="line">        <span class="comment">//餐厅小费</span></span><br><span class="line">        <span class="comment">//this.createTestSquare(407,665,50,50);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.isColorRegion(<span class="number">407</span>,<span class="number">665</span>,<span class="number">50</span>,<span class="number">50</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(isGet)&#123;</span><br><span class="line">                <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">                <span class="keyword">this</span>.checkDoubleNotice(<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查任务</span></span><br><span class="line">    <span class="keyword">this</span>.checkTask = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// this.createTestSquare(30,735,device.width-60,800);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.isColorRegion(<span class="number">30</span>,<span class="number">735</span>,device.width<span class="number">-60</span>,<span class="number">800</span>,BG_COLOR_TASK_NOTICE,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y+<span class="number">120</span>, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">            sleep(TIME_SHOW_CONFIRM);</span><br><span class="line">            <span class="keyword">this</span>.checkOrder();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查邮递员</span></span><br><span class="line">    <span class="keyword">this</span>.checkPostman = <span class="function">(<span class="params">isClick</span>) =&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查老千</span></span><br><span class="line">    <span class="keyword">this</span>.checkSwindler = <span class="function">(<span class="params">isGamble,pos</span>) =&gt;</span>&#123;</span><br><span class="line">        toast(<span class="string">"检查老千"</span>)</span><br><span class="line">        <span class="comment">//赌博,提示位置 颜色:#ffd96a28</span></span><br><span class="line">        <span class="comment">//this.createTestSquare(380,635,30,80);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">380</span>,<span class="number">635</span>,<span class="number">30</span>,<span class="number">80</span>,BG_COLOR_TASK_NOTICE,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">            sleep(TIME_SHOW_CONFIRM);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//检查对话</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">975</span>,<span class="number">1900</span>,<span class="number">70</span>,<span class="number">70</span>,BG_COLOR_TALK,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(<span class="number">130</span>, <span class="number">1890</span>, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">            sleep(TIME_SHOW_CONFIRM);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">if</span>(!isGamble)&#123;</span><br><span class="line">            <span class="comment">//不赌</span></span><br><span class="line">            <span class="keyword">this</span>.isColorRegion(<span class="number">320</span>,<span class="number">1875</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_DOUBLE_NO,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//赌</span></span><br><span class="line">            <span class="keyword">this</span>.isColorRegion(<span class="number">705</span>,<span class="number">1820</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_FISH,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">                sleep(TIME_SHOW_CONFIRM);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">if</span>(pos == <span class="literal">undefined</span>)pos = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(pos == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="comment">//this.createTestSquare(220,780,50,60);</span></span><br><span class="line">                <span class="keyword">this</span>.isColorRegion(<span class="number">220</span>,<span class="number">780</span>,<span class="number">50</span>,<span class="number">60</span>,BG_COLOR_POKER,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(pos == <span class="number">2</span>)&#123;</span><br><span class="line">                <span class="comment">//this.createTestSquare(520,780,50,60);</span></span><br><span class="line">                <span class="keyword">this</span>.isColorRegion(<span class="number">520</span>,<span class="number">780</span>,<span class="number">50</span>,<span class="number">60</span>,BG_COLOR_POKER,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(pos == <span class="number">3</span>)&#123;</span><br><span class="line">                <span class="comment">//this.createTestSquare(815,780,50,60);</span></span><br><span class="line">                <span class="keyword">this</span>.isColorRegion(<span class="number">815</span>,<span class="number">780</span>,<span class="number">50</span>,<span class="number">60</span>,BG_COLOR_POKER,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查广告并关闭</span></span><br><span class="line">    <span class="keyword">this</span>.checkAdv = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">"检查广告"</span>);</span><br><span class="line">        <span class="comment">//this.createTestSquare(825,70,30,30);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">825</span>,<span class="number">70</span>,<span class="number">30</span>,<span class="number">30</span>,BG_COLOR_WHITE,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">this</span>.checkStart())&#123;</span><br><span class="line">                <span class="comment">// 检查广告时间是否完结 this.createTestSquare(240,72,80,40);</span></span><br><span class="line">                <span class="keyword">if</span>(!<span class="keyword">this</span>.isColorRegion(<span class="number">240</span>,<span class="number">72</span>,<span class="number">80</span>,<span class="number">40</span>,BG_COLOR_WHITE) || <span class="keyword">this</span>.isColorRegion(<span class="number">340</span>,<span class="number">1675</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_ADV_BTN))&#123;</span><br><span class="line">                    toast(<span class="string">"广告已完结"</span>);</span><br><span class="line">                    <span class="keyword">this</span>.ra.press(point.x+<span class="number">120</span>,point.y+<span class="number">15</span>,TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    toast(<span class="string">"广告未完结"</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        sleep(<span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查顶部星星</span></span><br><span class="line">    <span class="keyword">this</span>.checkStart = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.isColorRegion(<span class="number">28</span>,<span class="number">208</span>,<span class="number">53</span>,<span class="number">70</span>,BG_COLOR_START))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.isColorRegion(<span class="number">28</span>,<span class="number">208</span>,<span class="number">53</span>,<span class="number">70</span>,BG_COLOR_START_COVER))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查对话</span></span><br><span class="line">    <span class="keyword">this</span>.checkTalk = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">"检测对话&amp;点击"</span>);</span><br><span class="line">        sleep(TIME_SHOW_CONFIRM);</span><br><span class="line">        <span class="comment">//对话确认</span></span><br><span class="line">        <span class="comment">//this.createTestSquare(950,1830,70,70);</span></span><br><span class="line">        <span class="comment">//对话跳过</span></span><br><span class="line">        <span class="comment">// this.createTestDot(130,1890);</span></span><br><span class="line">        <span class="keyword">this</span>.isColorRegion(<span class="number">950</span>,<span class="number">1830</span>,<span class="number">70</span>,<span class="number">70</span>,BG_COLOR_TALK,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(<span class="number">130</span>, <span class="number">1890</span>, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查分享按钮</span></span><br><span class="line">    <span class="keyword">this</span>.checkShare = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">"检测分享&amp;点击"</span>);</span><br><span class="line">        <span class="comment">//新客人分享</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(775,1395,100,80);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.isColorRegion(<span class="number">775</span>,<span class="number">1395</span>,<span class="number">100</span>,<span class="number">80</span>,BG_COLOR_NOTICE,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(device.width<span class="number">-20</span>, device.height<span class="number">-720</span>, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查宣传按钮</span></span><br><span class="line">    <span class="keyword">this</span>.checkPropaganda = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.isColorRegion(<span class="number">905</span>,<span class="number">1938</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_PROPAGANDA);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//任务按钮</span></span><br><span class="line">    <span class="keyword">this</span>.checkTaskBtn = <span class="function">(<span class="params">isGet</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">//this.createTestSquare(515,1918,160,190)</span></span><br><span class="line">        <span class="keyword">if</span>(isGet)&#123;</span><br><span class="line">            <span class="comment">//this.createTestSquare(515,1918,160,190)</span></span><br><span class="line">            <span class="keyword">this</span>.isColorRegion(<span class="number">515</span>,<span class="number">1918</span>,<span class="number">160</span>,<span class="number">190</span>,BG_COLOR_TASK_NOTICE,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.ra.press(point.x, point.y,TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//宣传X15按钮</span></span><br><span class="line">    <span class="keyword">this</span>.checkPropagandaBtn = <span class="function">(<span class="params">isLook</span>) =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">"宣传X15"</span>)</span><br><span class="line">        <span class="keyword">if</span>(isLook)&#123;</span><br><span class="line">            <span class="comment">//this.createTestSquare(690,1918,160,190)</span></span><br><span class="line">            <span class="keyword">this</span>.isColorRegion(<span class="number">690</span>,<span class="number">1918</span>,<span class="number">160</span>,<span class="number">190</span>,BG_COLOR_TASK_NOTICE,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.ra.press(point.x, point.y+<span class="number">150</span>,TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">                sleep(TIME_SHOW_CONFIRM);</span><br><span class="line">                <span class="keyword">this</span>.checkNotice();</span><br><span class="line">                sleep(TIME_ADV_LOCK);</span><br><span class="line">                <span class="keyword">this</span>.checkAdv();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查订单</span></span><br><span class="line">    <span class="keyword">this</span>.checkOrder = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">"检测订单&amp;点击"</span>);</span><br><span class="line">        <span class="comment">//任务完成位置</span></span><br><span class="line">        <span class="comment">// this.createTestSquare(775,1335,100,100);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.isColorRegion(<span class="number">775</span>,<span class="number">1335</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_NOTICE,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">            <span class="keyword">this</span>.checkTalk();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//检查歌手</span></span><br><span class="line">    <span class="keyword">this</span>.checkSinger = <span class="function">(<span class="params">isGet</span>) =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">"检测歌手&amp;点击"</span>);</span><br><span class="line">        <span class="comment">//餐厅歌手 ok</span></span><br><span class="line">        <span class="comment">//this.createTestSquare(795,550,130,250);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.isColorRegion(<span class="number">795</span>,<span class="number">550</span>,<span class="number">130</span>,<span class="number">250</span>,BG_COLOR_SINGER,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(isGet)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)&#123;</span><br><span class="line">                    <span class="keyword">this</span>.ra.press(point.x, point.y,TIME_BTN_CLICK,FINGER_2);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//检查提示窗口&amp;并关闭</span></span><br><span class="line">    <span class="keyword">this</span>.checkNotice = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">"检查窗口提示&amp;关闭"</span>);</span><br><span class="line">        sleep(TIME_SHOW_CONFIRM);</span><br><span class="line">         <span class="comment">//超时一小时</span></span><br><span class="line">        <span class="comment">//this.createTestSquare(500,1315,100,100);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.isColorRegion(<span class="number">500</span>,<span class="number">1315</span>,<span class="number">100</span>,<span class="number">100</span>,BG_COLOR_NOTICE,<span class="function"><span class="keyword">function</span>(<span class="params">point</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(point.x, point.y, TIME_BTN_CLICK, FINGER_2);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.clickPropaganda = <span class="function">(<span class="params">number</span>) =&gt;</span> &#123;</span><br><span class="line">        toast(<span class="string">"点击宣传按钮"</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>;i&lt;number;i++)&#123;</span><br><span class="line">            <span class="comment">//检查宣传按钮</span></span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">this</span>.checkPropaganda())&#123;</span><br><span class="line">                toast(<span class="string">"宣传按钮不存在了"</span>);</span><br><span class="line">                sleep(<span class="number">1000</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.ra.press(device.width<span class="number">-150</span>, device.height<span class="number">-170</span>,<span class="number">3000</span>,FINGER_2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.workStart = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $<span class="keyword">this</span> = <span class="keyword">this</span>;       </span><br><span class="line">        threads.start(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">//在新线程执行的代码</span></span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                <span class="comment">//检查广告</span></span><br><span class="line">                $<span class="keyword">this</span>.checkAdv();</span><br><span class="line">                <span class="comment">//检查游戏界面</span></span><br><span class="line">                <span class="keyword">if</span>(!$<span class="keyword">this</span>.checkStart())&#123;</span><br><span class="line">                    toast(<span class="string">"游戏退出了"</span>);</span><br><span class="line">                    sleep(<span class="number">1000</span>*<span class="number">10</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//检查弹窗</span></span><br><span class="line">                $<span class="keyword">this</span>.checkNotice();</span><br><span class="line">                <span class="comment">//检查分享按钮</span></span><br><span class="line">                $<span class="keyword">this</span>.checkShare();</span><br><span class="line">                <span class="comment">//检查订单</span></span><br><span class="line">                $<span class="keyword">this</span>.checkOrder();</span><br><span class="line">                <span class="comment">//检查对话</span></span><br><span class="line">                $<span class="keyword">this</span>.checkTalk();</span><br><span class="line">                <span class="comment">//检查赌博</span></span><br><span class="line">                $<span class="keyword">this</span>.checkSwindler(<span class="literal">true</span>,<span class="number">3</span>);</span><br><span class="line">                <span class="comment">//餐厅</span></span><br><span class="line">                <span class="keyword">if</span>($<span class="keyword">this</span>.isRestaurant())&#123;</span><br><span class="line">                    <span class="comment">//检查任务</span></span><br><span class="line">                    $<span class="keyword">this</span>.checkTask();</span><br><span class="line">                    <span class="comment">//检查金钱</span></span><br><span class="line">                    $<span class="keyword">this</span>.checkRestaurantMoney();</span><br><span class="line">                    <span class="comment">//检查小费&amp;点击</span></span><br><span class="line">                    $<span class="keyword">this</span>.checkGratuity(<span class="literal">true</span>);</span><br><span class="line">                    <span class="comment">//检查歌手</span></span><br><span class="line">                    $<span class="keyword">this</span>.checkSinger(<span class="literal">true</span>);</span><br><span class="line">                    <span class="comment">//宣传</span></span><br><span class="line">                    $<span class="keyword">this</span>.clickPropaganda(<span class="number">7</span>);</span><br><span class="line">                    <span class="comment">//切换页面到花园</span></span><br><span class="line">                    $<span class="keyword">this</span>.switchPage(BG_COLOR_KITCHEN);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>($<span class="keyword">this</span>.isGarden())&#123; <span class="comment">//花园</span></span><br><span class="line">                    <span class="comment">//检测花园金钱</span></span><br><span class="line">                    $<span class="keyword">this</span>.checkGardenMoney();</span><br><span class="line">                    <span class="comment">//检查花朵是否成熟</span></span><br><span class="line">                    $<span class="keyword">this</span>.checkFlowerIsRipe();</span><br><span class="line">                    <span class="comment">//检查花朵是否展示</span></span><br><span class="line">                    $<span class="keyword">this</span>.checkFlowerShow();</span><br><span class="line">                    <span class="comment">//检查是否需要种植花朵</span></span><br><span class="line">                    $<span class="keyword">this</span>.checkFlowerCultivate();</span><br><span class="line">                    <span class="comment">//宣传</span></span><br><span class="line">                    $<span class="keyword">this</span>.clickPropaganda(<span class="number">7</span>);</span><br><span class="line">                    <span class="comment">//宣传X15</span></span><br><span class="line">                    $<span class="keyword">this</span>.checkPropagandaBtn(<span class="literal">true</span>);</span><br><span class="line">                    <span class="comment">//切换页面到餐厅</span></span><br><span class="line">                    $<span class="keyword">this</span>.switchPage(BG_COLOR_RESTAURANT);</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>($<span class="keyword">this</span>.iskitchen())&#123; <span class="comment">//厨房</span></span><br><span class="line">                    $<span class="keyword">this</span>.checkkitchenMoney();</span><br><span class="line">                    <span class="comment">//宣传</span></span><br><span class="line">                    $<span class="keyword">this</span>.clickPropaganda(<span class="number">7</span>);</span><br><span class="line">                    <span class="comment">//切换到花园</span></span><br><span class="line">                    $<span class="keyword">this</span>.switchPage(BG_COLOR_GARDEN);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//音量UP按下</span></span><br><span class="line">    <span class="keyword">this</span>.volumeUp = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">this</span>.is_run)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.checkStart())&#123;</span><br><span class="line">                <span class="keyword">this</span>.ra = <span class="keyword">new</span> RootAutomator();</span><br><span class="line">                toast(<span class="string">"脚本开始运行了"</span>);</span><br><span class="line">                <span class="keyword">this</span>.is_run = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">this</span>.workStart();</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                toast(<span class="string">"请先打开动物餐厅"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            toast(<span class="string">"脚本已经在运行了."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//音量DOWN按下</span></span><br><span class="line">    <span class="keyword">this</span>.volumeDown = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.is_run)&#123;</span><br><span class="line">            toast(<span class="string">"脚本停止运行了"</span>);</span><br><span class="line">            <span class="comment">//改变状态为close</span></span><br><span class="line">            <span class="keyword">this</span>.is_run = <span class="literal">false</span>;</span><br><span class="line">            <span class="comment">//关闭所有子进程</span></span><br><span class="line">            threads.shutDownAll();</span><br><span class="line">            <span class="comment">//移除屏幕点击监听事件</span></span><br><span class="line">            events.removeAllTouchListeners();</span><br><span class="line">            <span class="comment">//清除当前页面</span></span><br><span class="line">            <span class="keyword">this</span>.current_bg_color = <span class="string">""</span>;</span><br><span class="line">            <span class="comment">//RootAutomator 停止</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            toast(<span class="string">"脚本不在运行状态"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//程序初始化</span></span><br><span class="line">    <span class="keyword">this</span>.initEvents = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!requestScreenCapture(<span class="literal">false</span>))&#123;</span><br><span class="line">            toast(<span class="string">"获取截图权限失败,中断操作"</span>);</span><br><span class="line">            exit();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//屏蔽原音量键功能</span></span><br><span class="line">        events.setKeyInterceptionEnabled(<span class="string">"volume_up"</span>, <span class="literal">true</span>);</span><br><span class="line">        events.setKeyInterceptionEnabled(<span class="string">"volume_down"</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//启用按键监听</span></span><br><span class="line">        events.observeKey();</span><br><span class="line">        <span class="comment">//监听音量上键按下</span></span><br><span class="line">        events.onKeyDown(<span class="string">"volume_up"</span>, <span class="keyword">this</span>.volumeUp.bind(<span class="keyword">this</span>));</span><br><span class="line">        <span class="comment">//监听音量下键按下</span></span><br><span class="line">        events.onKeyDown(<span class="string">"volume_down"</span>, <span class="keyword">this</span>.volumeDown.bind(<span class="keyword">this</span>));</span><br><span class="line">        <span class="comment">//设置屏幕适配</span></span><br><span class="line">        setScreenMetrics(<span class="number">1080</span>, <span class="number">2160</span>);</span><br><span class="line">        <span class="comment">// sleep(3000);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> animal = <span class="keyword">new</span> Animal();</span><br><span class="line">animal.initEvents();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql之limit分页数据重复问题</title>
      <link href="/article/ec473fdc.html"/>
      <url>/article/ec473fdc.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在MySQL中我们通常会采用limit来进行翻页查询，比如limit(0,10)表示列出第一页的10条数据，limit(10,10)表示列出第二页。但是，当limit遇到order by的时候，可能会出现翻到第二页的时候，竟然又出现了第一页的记录。</p><a id="more"></a><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>在MySQL 5.6的版本上，优化器在遇到order by limit语句的时候，做了一个优化，即使用了priority queue。使用 priority queue 的目的，就是在不能使用索引有序性的时候，如果要排序，并且使用了limit n，那么只需要在排序的过程中，保留n条记录即可，这样虽然不能解决所有记录都需要排序的开销，但是只需要 sort buffer 少量的内存就可以完成排序。之所以5.6出现了第二页数据重复的问题，是因为 priority queue 使用了堆排序的排序方法，而堆排序是一个不稳定的排序方法，也就是相同的值可能排序出来的结果和读出来的数据顺序不一致。5.5 没有这个优化，所以也就不会出现这个问题。</p><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p> 给需要排序的字段添加索引（索引本身是有序的，添加索引会按照索引的顺序进行排序返回）<br> 在排序字段后面再添加一个唯一值的字段排序，比如id（保证参与排序的值不一样就行）</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://dev.mysql.com/doc/refman/5.7/en/limit-optimization.html" target="_blank" rel="noopener">8.2.1.17 LIMIT Query Optimization</a><br><a href="http://wdmcygah.iteye.com/blog/2370591" target="_blank" rel="noopener">Mysql order by与limit混用陷阱</a><br><a href="https://juejin.im/post/5af9537bf265da0b9e652dea" target="_blank" rel="noopener">MySQL order by limit 分页数据重复问题</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ITerm2快捷登录</title>
      <link href="/article/e774f456.html"/>
      <url>/article/e774f456.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>windows里有个Xshell非常的方便好使，因为它能保存你所有的ssh登录帐号信息。MAC下并没有xshell，有些也提供这样的功能，但效果都不好。iterm2是很好的终端，但却不能很好的支持多profiles，当要管理的机器较多时，就比较麻烦了。好在它有profiles设置，只是不能保存ssh登录帐号及密码，它还提供了加载profiles时执行外部命令的功能</p><a id="more"></a><h1 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h1><h2 id="普通配置"><a href="#普通配置" class="headerlink" title="普通配置"></a>普通配置</h2><p>Iterm2 profiles配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.ssh/login_shell 账号 服务器地址 密码</span><br></pre></td></tr></table></figure><p>登录脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">localhost:.ssh duanenjian$ vim login_shell </span><br><span class="line">#!/usr/bin/expect</span><br><span class="line"> </span><br><span class="line">set timeout 30</span><br><span class="line">if [llength $argv]==4 &#123;</span><br><span class="line">spawn ssh [lindex $argv 0]@[lindex $argv 1] -i [lindex $argv 3]</span><br><span class="line">&#125;</span><br><span class="line">if [llength $argv]==3 &#123;</span><br><span class="line">spawn ssh [lindex $argv 0]@[lindex $argv 1]</span><br><span class="line">&#125;</span><br><span class="line">expect &#123;</span><br><span class="line">        &quot;(yes/no)?&quot;</span><br><span class="line">        &#123;send &quot;yes\n&quot;;exp_continue&#125;</span><br><span class="line">        &quot;password:&quot;</span><br><span class="line">        &#123;send &quot;[lindex $argv 2]\n&quot;&#125;</span><br><span class="line">&#125;</span><br><span class="line">interact</span><br></pre></td></tr></table></figure><h2 id="跳板机配置"><a href="#跳板机配置" class="headerlink" title="跳板机配置"></a>跳板机配置</h2><p>Iterm2 profiles配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.ssh/login_jumpserver 账号  服务器地址 PEM文件密码 PEM文件地址</span><br></pre></td></tr></table></figure><p>登录脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">localhost:.ssh duanenjian$ vim login_jumpserver </span><br><span class="line">#!/usr/bin/expect</span><br><span class="line"></span><br><span class="line">spawn ssh [lindex $argv 0]@[lindex $argv 1] -i [lindex $argv 3]</span><br><span class="line">expect &#123;</span><br><span class="line">  &quot;(yes/no)?&quot; &#123;</span><br><span class="line">    send &quot;yes\r&quot;</span><br><span class="line">    exp_continue</span><br><span class="line">  &#125;</span><br><span class="line">  &quot;Enter passphrase for key *:*&quot; &#123;</span><br><span class="line">    send &quot;[lindex $argv 2]\n&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">interact</span><br></pre></td></tr></table></figure><p><img src="/images/iterm_1.png" alt="Iterm2_1"><br><img src="/images/iterm_2.png" alt="Iterm2_2"><br><img src="/images/iterm_3.png" alt="Iterm2_3"></p><h1 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h1><h2 id="普通配置-1"><a href="#普通配置-1" class="headerlink" title="普通配置"></a>普通配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iterm2 ------&gt; Profiles ------&gt;  当前配置的profiles ------&gt; General</span><br></pre></td></tr></table></figure><p><img src="/images/WX20180929-114509.png" alt="peizi_1"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">iterm2 ------&gt; Profiles ------&gt;  当前配置的profiles ------&gt; Advanced ------&gt; Triggers的Edit按钮</span><br><span class="line">//自动登录</span><br><span class="line">Regular expression:password:</span><br><span class="line">Action: Send Text</span><br><span class="line">Parameters: 密码 + /r</span><br></pre></td></tr></table></figure><p><img src="/images/WX20180929-114601.png" alt="peizi_2"></p><h2 id="跳板机配置-1"><a href="#跳板机配置-1" class="headerlink" title="跳板机配置"></a>跳板机配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iterm2 ------&gt; Profiles ------&gt;  当前配置的profiles ------&gt; General</span><br></pre></td></tr></table></figure><p><img src="/images/WX20180929-114636.png" alt="peizi_1"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">iterm2 ------&gt; Profiles ------&gt;  当前配置的profiles ------&gt; Advanced ------&gt; Triggers的Edit按钮</span><br><span class="line">//自动登录</span><br><span class="line">Regular expression:.pem&apos;:</span><br><span class="line">Action: Send Text</span><br><span class="line">Parameters: 密码 + /r</span><br></pre></td></tr></table></figure><p><img src="/images/WX20180929-114701.png" alt="peizi_2"></p><h1 id="rz-sz-上传下载配置"><a href="#rz-sz-上传下载配置" class="headerlink" title="rz sz 上传下载配置"></a>rz sz 上传下载配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">//安装lrzsz</span><br><span class="line">brew install lrzsz</span><br><span class="line">//下载文件</span><br><span class="line">在https://github.com/mmastrac/iterm2-zmodem上将iterm2-send-zmodem.sh 和 iterm2-recv-zmodem.sh脚本下载下来并放到/usr/local/bin/目录下，注意赋予脚本执行的权限</span><br><span class="line">//iterm2配置</span><br><span class="line">iterm2 ------&gt; Profiles ------&gt;  当前配置的profiles ------&gt; Advanced ------&gt; Triggers的Edit按钮</span><br><span class="line">//上传</span><br><span class="line">Regular expression:\*\*B0100</span><br><span class="line">Action: Run Silent Coprocess</span><br><span class="line">Parameters: /usr/local/bin/iterm2-send-zmodem.sh</span><br><span class="line">//下载</span><br><span class="line">Regular expression:\*\*B00000000000000</span><br><span class="line">Action: Run Silent Coprocess</span><br><span class="line">Parameters: /usr/local/bin/iterm2-recv-zmodem.sh</span><br></pre></td></tr></table></figure><p><img src="/images/WX20180929-114701.png" alt="peizi_2"></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RabbitMQ概述</title>
      <link href="/article/c80a4ce4.html"/>
      <url>/article/c80a4ce4.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>rabbitMQ是一款基于AMQP协议的消息中间件，它能够在应用之间提供可靠的消息传输。在易用性，扩展性，高可用性上表现优秀。使用消息中间件利于应用之间的解耦，生产者（客户端）无需知道消费者（服务端）的存在。而且两端可以使用不同的语言编写，大大提供了灵活性。</p><a id="more"></a><p><img src="/images/jianjie_sss.png" alt="upload successful"></p><h1 id="交换机"><a href="#交换机" class="headerlink" title="交换机"></a>交换机</h1><h2 id="直连交换机"><a href="#直连交换机" class="headerlink" title="直连交换机"></a>直连交换机</h2><p>直连交换机是一种带路由功能的交换机，一个队列会和一个交换机绑定，除此之外再绑定一个routing_key，当消息被发送的时候，需要指定一个binding_key，这个消息被送达交换机的时候，就会被这个交换机送到指定的队列里面去。同样的一个binding_key也是支持应用到多个队列中的。</p><p><img src="/images/zhilian_sss.png" alt="upload successful"></p><h2 id="扇形交换机"><a href="#扇形交换机" class="headerlink" title="扇形交换机"></a>扇形交换机</h2><p>扇形交换机是最基本的交换机类型，它所能做的事情非常简单———广播消息。扇形交换机会把能接收到的消息全部发送给绑定在自己身上的队列。因为广播不需要“思考”，所以扇形交换机处理消息的速度也是所有的交换机类型里面最快的。</p><p><img src="/images/shanxing_ssss.png" alt="upload successful"></p><h2 id="主题交换机"><a href="#主题交换机" class="headerlink" title="主题交换机"></a>主题交换机</h2><p>主题交换机通过模式匹配分配消息的路由键属性，将路由键和某个模式进行匹配，此时队列需要绑定到一个模式上。它将路由键和绑定键的字符串切分成单词，这些单词之间用点隔开。它同样也会识别两个通配符：符号“#”和符号“<em>”。#匹配0个或多个单词，</em>匹配不多不少一个单词。</p><p><img src="/images/zhuti_sss.png" alt="upload successful"></p><h2 id="首部交换机"><a href="#首部交换机" class="headerlink" title="首部交换机"></a>首部交换机</h2><p>首部交换机是忽略routing_key的一种路由方式。路由器和交换机路由的规则是通过Headers信息来交换的，这个有点像HTTP的Headers。将一个交换机声明成首部交换机，绑定一个队列的时候，定义一个Hash的数据结构，消息发送的时候，会携带一组hash数据结构的信息，当Hash的内容匹配上的时候，消息就会被写入队列。<br>绑定交换机和队列的时候，Hash结构中要求携带一个键“x-match”，这个键的Value可以是any或者all，这代表消息携带的Hash是需要全部匹配(all)，还是仅匹配一个键(any)就可以了。相比直连交换机，首部交换机的优势是匹配的规则不被限定为字符串(string)。</p><h1 id="虚拟主机-交换机-队列-绑定"><a href="#虚拟主机-交换机-队列-绑定" class="headerlink" title="虚拟主机,交换机,队列,绑定"></a>虚拟主机,交换机,队列,绑定</h1><ul><li>虚拟主机：一个虚拟主机持有一组交换机、队列和绑定。为什么需要多个虚拟主机呢？很简单，RabbitMQ当中，用户只能在虚拟主机的粒度进行权限控制。 因此，如果需要禁止A组访问B组的交换机/队列/绑定，必须为A和B分别创建一个虚拟主机。每一个RabbitMQ服务器都有一个默认的虚拟主机“/”。</li><li>交换机：Exchange 用于转发消息，但是它不会做存储 ，如果没有 Queue bind 到 Exchange 的话，它会直接丢弃掉 Producer 发送过来的消息。常用交换机又分为3种- - 类型：Direct Exchange，Topic Exchange，Fanout Exchange。</li><li>绑定：也就是交换机需要和队列相绑定，这其中如上图所示，是多对多的关系。</li></ul><h1 id="消息确认与持久化"><a href="#消息确认与持久化" class="headerlink" title="消息确认与持久化"></a>消息确认与持久化</h1><ul><li>基于现在的代码,一旦RabbitMQ将消息发送给了消费者,就会从内存中删除,这时候如果正在执行任务的消费者挂了,会丢失消息,也无法把它讲给另外一个消费者去处理.</li><li>所以为了确保消息不丢失,RabbitMQ支持消息应答.消费者发送一个消息应答,告诉RabbitMQ这个消息已经接收并处理完了.</li><li>如果一个消费者挂掉却没有发送应答，RabbitMQ会理解为这个消息没有处理完全，然后交给另一个消费者去重新处理,十分可靠.</li></ul><p>在之前,我们会使用 channel.basicConsume(channelName,true,consumer) ,true表示接收到消息后,会自动反馈消息给服务器.那么首先我们要将autoAck关闭,等我们处理完消息,手动去确认.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">QueueingConsumer consumer = new QueueingConsumer(channel);</span><br><span class="line">boolean autoAck = false;</span><br><span class="line">channel.basicConsume(&quot;hello&quot;, autoAck, consumer);</span><br></pre></td></tr></table></figure><p>接着手动确认</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">channel.basicAck(delivery.getEnvelope().getDeliveryTag() , false);</span><br></pre></td></tr></table></figure><p>现在我们确保了消费者死亡,任务也不会丢失.但是如果整个rabbitMQ服务器都挂了,那消息还是会丢失.所以有时候我们需要让消息持久化.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">boolean durable = true;</span><br><span class="line">channel.queueDeclare(channelName, durable, false, false, null);</span><br></pre></td></tr></table></figure><p>我们的队列已经不会丢失了,还需要在生产者里将消息标记为持久性的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MessageProperties.PERSISTENT_TEXT_PLAIN</span><br></pre></td></tr></table></figure><h1 id="实例代码"><a href="#实例代码" class="headerlink" title="实例代码"></a>实例代码</h1><p>Rabbitmq.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">namespace app\common\library;</span><br><span class="line"></span><br><span class="line">use PhpAmqpLib\Channel\AMQPChannel;</span><br><span class="line">use PhpAmqpLib\Connection\AMQPStreamConnection;</span><br><span class="line">use PhpAmqpLib\Message\AMQPMessage;</span><br><span class="line">use PhpAmqpLib\Wire\AMQPTable;</span><br><span class="line">use think\Config;</span><br><span class="line">use think\Log;</span><br><span class="line"></span><br><span class="line">class Rabbitmq</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * 配置</span><br><span class="line">     *</span><br><span class="line">     * @var array</span><br><span class="line">     */</span><br><span class="line">    public $config;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * @var AMQPChannel</span><br><span class="line">     */</span><br><span class="line">    public $channel;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * initialized</span><br><span class="line">     *</span><br><span class="line">     * @var AMQPStreamConnection</span><br><span class="line">     */</span><br><span class="line">    public $connect;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public function __construct(array $config = [])</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;config = array_merge(Config::get(&apos;rabbitmq&apos;), $config);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 处理消息格式  A Message for use with the Channnel.basic_* methods.</span><br><span class="line">     *</span><br><span class="line">     * @param $msg</span><br><span class="line">     * @param $message_durable</span><br><span class="line">     * @return AMQPMessage</span><br><span class="line">     */</span><br><span class="line">    public function message($msg, $message_durable)</span><br><span class="line">    &#123;</span><br><span class="line">        if (is_array($msg)) &#123;</span><br><span class="line">            $msg = json_encode($msg);</span><br><span class="line">        &#125;</span><br><span class="line">        if (!is_object($msg) &amp;&amp; $message_durable === true) &#123;</span><br><span class="line">            return new AMQPMessage($msg, [&apos;delivery_mode&apos; =&gt; AMQPMessage::DELIVERY_MODE_PERSISTENT]);</span><br><span class="line">        &#125;</span><br><span class="line">        return new AMQPMessage($msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * acknowledge one or more messages</span><br><span class="line">     *</span><br><span class="line">     * @param string $delivery_tag</span><br><span class="line">     */</span><br><span class="line">    public function basicAck($delivery_tag)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;channel-&gt;basic_ack($delivery_tag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 生产者 生产实时队列 只生产一个队列</span><br><span class="line">     *</span><br><span class="line">     * @param        $data</span><br><span class="line">     * @param        $queue</span><br><span class="line">     * @param        $exchange_name</span><br><span class="line">     * @param string $routing_key</span><br><span class="line">     * @param string $type</span><br><span class="line">     * @param bool   $queue_durable</span><br><span class="line">     * @param bool   $message_durable</span><br><span class="line">     */</span><br><span class="line">    public function send(</span><br><span class="line">        $data, $queue, $exchange_name, $routing_key = &apos;&apos;, $type = &apos;direct&apos;, $queue_durable = false, $message_durable = false</span><br><span class="line">    ) &#123;</span><br><span class="line">        $this-&gt;connect = new AMQPStreamConnection(</span><br><span class="line">            $this-&gt;config[&apos;host&apos;],</span><br><span class="line">            $this-&gt;config[&apos;port&apos;],</span><br><span class="line">            $this-&gt;config[&apos;login&apos;],</span><br><span class="line">            $this-&gt;config[&apos;password&apos;],</span><br><span class="line">            $this-&gt;config[&apos;vhost&apos;]</span><br><span class="line">        );</span><br><span class="line">        $this-&gt;channel = $this-&gt;connect-&gt;channel();</span><br><span class="line"></span><br><span class="line">        //声明交换机</span><br><span class="line">        $this-&gt;channel-&gt;exchange_declare($exchange_name, $type, false, $message_durable, false, false, false, [], null);</span><br><span class="line"></span><br><span class="line">        //声明队列</span><br><span class="line">        $this-&gt;channel-&gt;queue_declare($queue, false, $queue_durable, false, false, false, [], null);</span><br><span class="line"></span><br><span class="line">        //绑定交换机与队列</span><br><span class="line">        $this-&gt;channel-&gt;queue_bind($queue, $exchange_name, $routing_key, false, [], null);</span><br><span class="line"></span><br><span class="line">        //处理压入消息格式</span><br><span class="line">        $msg = $this-&gt;message($data, $message_durable);</span><br><span class="line"></span><br><span class="line">        //压入消息到交换机</span><br><span class="line">        $this-&gt;channel-&gt;basic_publish($msg, $exchange_name, $routing_key, false, false, null);</span><br><span class="line"></span><br><span class="line">        //关闭</span><br><span class="line">        $this-&gt;channel-&gt;close(); // 关闭信道</span><br><span class="line">        $this-&gt;connect-&gt;close(); // 关闭链接</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 延时生产者 生产延时队列 生产两个队列（1个延时死信队列，1个实时消费队列）</span><br><span class="line">     *</span><br><span class="line">     * @param  array|string $data  消息内容</span><br><span class="line">     * @param string        $delay_queue  延时队列</span><br><span class="line">     * @param string        $delay_exchange_name 延时交换机</span><br><span class="line">     * @param string        $delay_routing_key 延时队列routing_key</span><br><span class="line">     * @param string        $delay_type 延时交换机类型</span><br><span class="line">     * @param int           $delay_expire 延时队列声明周期（过期会触发死信规则）</span><br><span class="line">     * @param bool          $delay_queue_durable 延时队列持久化</span><br><span class="line">     * @param bool          $delay_message_durable 延时消息持久化</span><br><span class="line">     * @param string        $receive_queue 接收队列（接收死信规则）</span><br><span class="line">     * @param string        $receive_exchange_name 接收交换机</span><br><span class="line">     * @param string        $receive_routing_key 接收队列routing_key</span><br><span class="line">     * @param string        $receive_type 接收交换机类型</span><br><span class="line">     * @param bool          $receive_queue_durable 接收队列持久化</span><br><span class="line">     * @param bool          $receive_message_durable 接收消息持久化</span><br><span class="line">     */</span><br><span class="line">    public function sendDelay(</span><br><span class="line">        $data,</span><br><span class="line">        $delay_queue,</span><br><span class="line">        $delay_exchange_name,</span><br><span class="line">        $delay_routing_key = &apos;&apos;,</span><br><span class="line">        $delay_type = &apos;direct&apos;,</span><br><span class="line">        $delay_expire = 0,</span><br><span class="line">        $delay_queue_durable = false,</span><br><span class="line">        $delay_message_durable = false,</span><br><span class="line">        $receive_queue,</span><br><span class="line">        $receive_exchange_name,</span><br><span class="line">        $receive_routing_key = &apos;&apos;,</span><br><span class="line">        $receive_type = &apos;direct&apos;,</span><br><span class="line">        $receive_queue_durable = false,</span><br><span class="line">        $receive_message_durable = false</span><br><span class="line">    ) &#123;</span><br><span class="line">        $this-&gt;connect = new AMQPStreamConnection(</span><br><span class="line">            $this-&gt;config[&apos;host&apos;],</span><br><span class="line">            $this-&gt;config[&apos;port&apos;],</span><br><span class="line">            $this-&gt;config[&apos;login&apos;],</span><br><span class="line">            $this-&gt;config[&apos;password&apos;],</span><br><span class="line">            $this-&gt;config[&apos;vhost&apos;]</span><br><span class="line">        );</span><br><span class="line">        $this-&gt;channel = $this-&gt;connect-&gt;channel();</span><br><span class="line"></span><br><span class="line">        // 声明主队列 &lt;--  关联主消费交换机(接收)  &lt;-- 数据压入</span><br><span class="line">        //  |  300        /</span><br><span class="line">        //  |            /</span><br><span class="line">        //  关联延时交换机    -&gt;   关联消费队列</span><br><span class="line">        //</span><br><span class="line">        //  延时交换机（弹出数据） -&gt; 消费</span><br><span class="line"></span><br><span class="line">        //声明死信规则</span><br><span class="line">        $tale = new AMQPTable();</span><br><span class="line">        $tale-&gt;set(&apos;x-dead-letter-exchange&apos;, $receive_exchange_name);</span><br><span class="line">        $tale-&gt;set(&apos;x-dead-letter-routing-key&apos;, $receive_routing_key);</span><br><span class="line">        $tale-&gt;set(&apos;x-message-ttl&apos;, $delay_expire);</span><br><span class="line"></span><br><span class="line">        //声明延时交换机 与 接收交换机</span><br><span class="line">        $this-&gt;channel-&gt;exchange_declare($delay_exchange_name, $delay_type, false, $delay_message_durable, false, false, false, [], null);</span><br><span class="line">        $this-&gt;channel-&gt;exchange_declare($receive_exchange_name, $receive_type, false, $receive_message_durable, false, false, false, [], null);</span><br><span class="line"></span><br><span class="line">        //声明延时队列 与 接收队列</span><br><span class="line">        $this-&gt;channel-&gt;queue_declare($delay_queue, false, $delay_queue_durable, false, false, false, $tale, null);</span><br><span class="line">        $this-&gt;channel-&gt;queue_declare($receive_queue, false, $receive_queue_durable, false, false, false, [], null);</span><br><span class="line"></span><br><span class="line">        //绑定延时队列到延时交换机 与 绑定接收队列到接收交换机</span><br><span class="line">        $this-&gt;channel-&gt;queue_bind($delay_queue, $delay_exchange_name, $delay_routing_key, false, [], null);</span><br><span class="line">        $this-&gt;channel-&gt;queue_bind($receive_queue, $receive_exchange_name, $receive_routing_key, false, [], null);</span><br><span class="line"></span><br><span class="line">        //处理压入消息格式</span><br><span class="line">        $msg = $this-&gt;message($data, $delay_message_durable);</span><br><span class="line"></span><br><span class="line">        //压入消息到交换机</span><br><span class="line">        $this-&gt;channel-&gt;basic_publish($msg, $delay_exchange_name, $delay_routing_key, false, false, null);</span><br><span class="line"></span><br><span class="line">        //关闭</span><br><span class="line">        $this-&gt;channel-&gt;close(); // 关闭信道</span><br><span class="line">        $this-&gt;connect-&gt;close(); // 关闭链接</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 消费者 只消费一个队列</span><br><span class="line">     *</span><br><span class="line">     * @param string $queue</span><br><span class="line">     * @param string $consumer_tag</span><br><span class="line">     * @param bool   $no_local</span><br><span class="line">     * @param bool   $no_ack</span><br><span class="line">     * @param bool   $exclusive</span><br><span class="line">     * @param bool   $nowait</span><br><span class="line">     * @param null   $ticket</span><br><span class="line">     * @param array  $arguments</span><br><span class="line">     */</span><br><span class="line">    function receive(</span><br><span class="line">        $queue = &apos;&apos;, // 队列名</span><br><span class="line">        $callback = null, // 回调函数</span><br><span class="line">        $queue_durable = false, //持久化</span><br><span class="line">        $consumer_tag = &apos;&apos;,</span><br><span class="line">        $no_local = false,</span><br><span class="line">        $no_ack = false,</span><br><span class="line">        $exclusive = false, //队列是否可以被其他队列访问</span><br><span class="line">        $nowait = false,</span><br><span class="line">        $ticket = null,</span><br><span class="line">        $arguments = array()</span><br><span class="line">    ) &#123;</span><br><span class="line">        $this-&gt;connect = new AMQPStreamConnection(</span><br><span class="line">            $this-&gt;config[&apos;host&apos;],</span><br><span class="line">            $this-&gt;config[&apos;port&apos;],</span><br><span class="line">            $this-&gt;config[&apos;login&apos;],</span><br><span class="line">            $this-&gt;config[&apos;password&apos;],</span><br><span class="line">            $this-&gt;config[&apos;vhost&apos;]</span><br><span class="line">        );</span><br><span class="line">        $this-&gt;channel = $this-&gt;connect-&gt;channel();</span><br><span class="line"></span><br><span class="line">        //一次只消费一个</span><br><span class="line">        $this-&gt;channel-&gt;basic_qos(0,1,false);</span><br><span class="line"></span><br><span class="line">        //声明队列</span><br><span class="line">        $this-&gt;channel-&gt;queue_declare($queue, false, $queue_durable, false, false, false, [], null);</span><br><span class="line"></span><br><span class="line">        //订阅消费 callback仅绑定并不立即执行</span><br><span class="line">        $this-&gt;channel-&gt;basic_consume($queue, $consumer_tag, $no_local, $no_ack, $exclusive, $nowait, $callback,</span><br><span class="line">            $ticket, $arguments);</span><br><span class="line"></span><br><span class="line">        //轮训等待并触发basic_consume绑定的callback</span><br><span class="line">        while (count($this-&gt;channel-&gt;callbacks)) &#123;</span><br><span class="line">            $this-&gt;channel-&gt;wait();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //关闭</span><br><span class="line">        $this-&gt;channel-&gt;close(); // 关闭信道</span><br><span class="line">        $this-&gt;connect-&gt;close(); // 关闭链接</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">//        $callback = function ($msg) &#123;</span><br><span class="line">//            $rabbit = new \app\admin\command\Rabbitmq();</span><br><span class="line">//            $rabbit-&gt;sendMessage($msg-&gt;body);</span><br><span class="line">////            $recharge = new Recharge();</span><br><span class="line">////            $recharge-&gt;sendMessage($msg-&gt;body);</span><br><span class="line">//            $this-&gt;basicAck($msg-&gt;delivery_info[&apos;delivery_tag&apos;]);</span><br><span class="line">//        &#125;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消费队列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * MQ队列处理方法</span><br><span class="line"> */</span><br><span class="line">protected function executeMQ()&#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        $mq = new Rabbitmq();</span><br><span class="line">        $mq-&gt;receive(self::SYNC_MQ_QUEUE_NAME, function (AMQPMessage $msg)&#123;</span><br><span class="line">            $data = json_decode($msg-&gt;body, true);</span><br><span class="line">            if(isset($data[&apos;channel_id&apos;]) &amp;&amp; !empty($data[&apos;channel_id&apos;]))&#123;</span><br><span class="line">                $channel = $msg-&gt;delivery_info[&apos;channel&apos;];</span><br><span class="line">                if($is_end = $this-&gt;sync($data[&apos;channel_id&apos;]))&#123;</span><br><span class="line">                    //手动ACK回复</span><br><span class="line">                    $channel-&gt;basic_ack($msg-&gt;delivery_info[&apos;delivery_tag&apos;]);</span><br><span class="line">                &#125;else&#123;</span><br><span class="line">                    //拒绝消息,并丢弃</span><br><span class="line">                    $channel-&gt;basic_nack($msg-&gt;delivery_info[&apos;delivery_tag&apos;],false,false);</span><br><span class="line">                    //五秒后重新拉取</span><br><span class="line">                    sleep(5);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; catch (\Exception $e) &#123;</span><br><span class="line">        Log::error(&quot;MQ 同步用户 触发异常！message:&quot; . $e-&gt;getMessage());</span><br><span class="line">        $this-&gt;consoleOut-&gt;writeln(&quot;MQ 同步用户 触发异常！message:&quot; . $e-&gt;getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>添加队列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$mq = new Rabbitmq();</span><br><span class="line"></span><br><span class="line">$delaytime = Config::get(&apos;rabbitmq.pay_cannel_expire&apos;)*1000*3; //15分钟 队列延迟时间/单位毫秒</span><br><span class="line">$delay_q = &apos;Q_NewPayCancelDelay&apos;;</span><br><span class="line">$delay_e = &apos;E_NewPayCancelDelay&apos;;</span><br><span class="line">$receive_q = &apos;Q_NewPayCancelReceive&apos;;</span><br><span class="line">$receive_e = &apos;E_NewPayCancelReceive&apos;;</span><br><span class="line">//延时队列</span><br><span class="line">$mq-&gt;sendDelay($data, $delay_q, $delay_e, &apos;&apos;, &apos;direct&apos;, $delaytime, false, false,$receive_q, $receive_e, &apos;&apos;, &apos;direct&apos;, false, false);</span><br><span class="line">//及时队列</span><br><span class="line">$mq-&gt;send([&apos;channel_id&apos;=&gt;$channel_id,&apos;appid&apos;=&gt;$appid],self::SYNC_MQ_QUEUE_NAME,self::SYNC_MQ_EXCHANGE_NAME);</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://segmentfault.com/a/1190000014847788" target="_blank" rel="noopener">RabbitMQ发布订阅实战-实现延时重试队列</a></p><p><a href="https://www.jianshu.com/p/469f4608ce5d" target="_blank" rel="noopener">RabbitMQ的四种交换机</a></p><p><a href="https://www.cnblogs.com/cwp-bg/p/8426188.html" target="_blank" rel="noopener">rabbitmq之python_pika模块连接MQ使用</a></p><p><a href="https://www.zouyesheng.com/rabbitmq.html" target="_blank" rel="noopener">RabbitMQ 使用参考</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git多个账户秘钥管理</title>
      <link href="/article/1915129581.html"/>
      <url>/article/1915129581.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>由于公司团队使用 GitLab 来托管代码，同时，个人在 Github 上还有一些代码仓库，可公司邮箱与个人邮箱是不同的，由此产生的 SSH key 也是不同的，这就造成了冲突 ，文章提供此类问题的解决方案：如何在一台机器上面同时使用 Github 与 Gitlab 的服务？</p><a id="more"></a><h1 id="生成ssh-key"><a href="#生成ssh-key" class="headerlink" title="生成ssh key"></a>生成ssh key</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#生成新的ssh key并命名为id_rsa_gs</span><br><span class="line">[root@localhost cps]# ssh-keygen -t rsa -C &quot;youremail@email.com&quot; -f ~/.ssh/id_rsa_gs</span><br><span class="line">[root@localhost cps]# ls ~/.ssh/</span><br><span class="line">config  id_rsa  id_rsa_gs  id_rsa_gs.pub  id_rsa.pub  known_hosts</span><br></pre></td></tr></table></figure><h1 id="远程主机添加公钥"><a href="#远程主机添加公钥" class="headerlink" title="远程主机添加公钥"></a>远程主机添加公钥</h1><p><img src="/images/20562200c186b51b0fc0c26.png" alt="添加GITHUB公钥"></p><h1 id="编辑ssh的cofnig文件"><a href="#编辑ssh的cofnig文件" class="headerlink" title="编辑ssh的cofnig文件"></a>编辑ssh的cofnig文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.ssh/config</span><br><span class="line"></span><br><span class="line"># Default 默认配置，一般可以省略</span><br><span class="line">      Host github.com</span><br><span class="line">      Hostname github.com</span><br><span class="line">      User git</span><br><span class="line">      Identityfile ~/.ssh/id_rsa</span><br><span class="line"># Company 给一个新的Host称呼</span><br><span class="line">      Host 192.168.0.31  // 主机名字，不能重名</span><br><span class="line">      HostName 192.168.0.31   // 主机所在域名或IP</span><br><span class="line">      User git  // 用户名称</span><br><span class="line">      IdentityFile ~/.ssh/id_rsa_gs  // 私钥路径</span><br></pre></td></tr></table></figure><h1 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost cps]# ssh -T git@192.168.0.31</span><br><span class="line">Welcome to GitLab, HAHA!</span><br></pre></td></tr></table></figure><h1 id="修改本地git配置文件"><a href="#修改本地git配置文件" class="headerlink" title="修改本地git配置文件"></a>修改本地git配置文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost cps]# vim .git/config </span><br><span class="line">[remote &quot;origin&quot;]</span><br><span class="line">    url = git@192.168.0.31:fe/cps.git #对应上面的用户@对应上面的Host:项目地址</span><br><span class="line">    fetch = +refs/heads/*:refs/remotes/origin/*</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang之JWT的实现</title>
      <link href="/article/201619652.html"/>
      <url>/article/201619652.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Json web token (JWT), 是为了在网络应用环境间传递声明而执行的一种基于JSON的开放标准（(RFC 7519).该token被设计为紧凑且安全的，特别适用于分布式站点的单点登录（SSO）场景。JWT的声明一般被用来在身份提供者和服务提供者间传递被认证的用户身份信息，以便于从资源服务器获取资源，也可以增加一些额外的其它业务逻辑所必须的声明信息，该token也可直接被用于认证，也可被加密。</p><a id="more"></a><h1 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h1><blockquote><p>JWT 标准的 Token 有三个部分</p></blockquote><h2 id="header"><a href="#header" class="headerlink" title="header"></a>header</h2><blockquote><p>Header内容要用 Base64 的形式编码</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"typ"</span>: <span class="string">"JWT"</span>,</span><br><span class="line">  <span class="attr">"alg"</span>: <span class="string">"HS256"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="playload"><a href="#playload" class="headerlink" title="playload"></a>playload</h2><blockquote><p>playload内容同样要用Base64 编码</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">"iss":  "",  //Issuer，发行者</span><br><span class="line">"sub":  "",  //Subject，主题</span><br><span class="line">"aud":  "", //Audience，观众</span><br><span class="line">"data": "", //请求数据</span><br><span class="line">"exp":  "", //Expiration time，过期时间</span><br><span class="line">"nbf":  "", //Not before</span><br><span class="line">"iat":  "", //Issued at，发行时间</span><br><span class="line">"jti":  "", //JWT ID</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="signature"><a href="#signature" class="headerlink" title="signature"></a>signature</h2><blockquote><p>签名部分主要和token的安全性有关，Signature的生成依赖前面两部分。<br>首先将Base64编码后的Header和Payload用.连接在一起</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//javascript</span></span><br><span class="line"><span class="keyword">var</span> encodedString = base64UrlEncode(header) + <span class="string">'.'</span> + base64UrlEncode(payload);</span><br><span class="line"><span class="keyword">var</span> signature = HMACSHA256(encodedString, <span class="string">'secret'</span>);</span><br></pre></td></tr></table></figure><p>最后将这三部分用<red>.</red>连接成一个完整的字符串,构成了最终的jwt</p><h1 id="JWT生成"><a href="#JWT生成" class="headerlink" title="JWT生成"></a>JWT生成</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> utils</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"crypto/hmac"</span></span><br><span class="line"><span class="string">"crypto/sha256"</span></span><br><span class="line"><span class="string">"encoding/base64"</span></span><br><span class="line"><span class="string">"encoding/json"</span></span><br><span class="line"><span class="string">"strings"</span></span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> JwtHeader <span class="keyword">struct</span> &#123;</span><br><span class="line">JwtHead <span class="keyword">string</span> <span class="string">`json:"type"`</span></span><br><span class="line">JwtAlg  <span class="keyword">string</span> <span class="string">`json:"alg"`</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> JwtPayload <span class="keyword">struct</span> &#123;</span><br><span class="line">Iss  <span class="keyword">string</span> <span class="string">`json:"iss"`</span>  <span class="comment">//Issuer，发行者</span></span><br><span class="line">Sub  <span class="keyword">string</span> <span class="string">`json:"sub"`</span>  <span class="comment">//Subject，主题</span></span><br><span class="line">Aud  <span class="keyword">string</span> <span class="string">`json:"aud"`</span>  <span class="comment">//Audience，观众</span></span><br><span class="line">Data <span class="keyword">string</span> <span class="string">`json:"data"`</span> <span class="comment">//请求数据</span></span><br><span class="line">Exp  <span class="keyword">int64</span>  <span class="string">`json:"exp"`</span>  <span class="comment">//Expiration time，过期时间</span></span><br><span class="line">Nbf  <span class="keyword">int64</span>  <span class="string">`json:"nbf"`</span>  <span class="comment">//Not before</span></span><br><span class="line">Iat  <span class="keyword">int64</span>  <span class="string">`json:"iat"`</span>  <span class="comment">//Issued at，发行时间</span></span><br><span class="line">Jti  <span class="keyword">int64</span>  <span class="string">`json:"jti"`</span>  <span class="comment">//JWT ID</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> JwtSecret <span class="keyword">struct</span> &#123;</span><br><span class="line">Key <span class="keyword">string</span> <span class="string">`json:"key"`</span> <span class="comment">//秘钥</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Jwt <span class="keyword">struct</span> &#123;</span><br><span class="line">Header  JwtHeader</span><br><span class="line">Payload JwtPayload</span><br><span class="line">Secret  JwtSecret</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//JWT 初始化</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">InitJwt</span><span class="params">()</span> *<span class="title">Jwt</span></span>&#123;</span><br><span class="line">jwt := &amp;Jwt&#123;&#125;</span><br><span class="line"><span class="comment">//设置Header</span></span><br><span class="line">jwt.Header.JwtAlg = <span class="string">"HS256"</span></span><br><span class="line">jwt.Header.JwtHead = <span class="string">"JWT"</span></span><br><span class="line"><span class="comment">//设置Payload</span></span><br><span class="line">jwt.Payload.Iss = <span class="string">"https://www.ganktools.com"</span></span><br><span class="line">jwt.Payload.Sub = <span class="string">"https://www.ganktools.com"</span></span><br><span class="line">jwt.Payload.Aud = <span class="string">"https://www.ganktools.com"</span></span><br><span class="line"><span class="comment">//设置加密秘钥</span></span><br><span class="line">jwt.Secret.Key = <span class="string">"jwt_key"</span></span><br><span class="line"><span class="keyword">return</span> jwt</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编码JWT的Header头</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(header *JwtHeader)</span> <span class="title">Encode</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">json_data, _ := json.Marshal(header)</span><br><span class="line"><span class="keyword">return</span> base64.StdEncoding.EncodeToString(json_data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//解码JWT的Header头</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(header *JwtHeader)</span> <span class="title">Decode</span><span class="params">(data <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">headerStr, err := base64.StdEncoding.DecodeString(data)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">errJson := json.Unmarshal(headerStr, header)</span><br><span class="line"><span class="keyword">if</span> errJson != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> errJson</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//解码payload部分</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(payload *JwtPayload)</span> <span class="title">Decode</span><span class="params">(data <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">payloadStr, err := base64.StdEncoding.DecodeString(data)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">errJson := json.Unmarshal(payloadStr, payload)</span><br><span class="line"><span class="keyword">if</span> errJson != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> errJson</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//编码JWT的payload部分</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(payload *JwtPayload)</span> <span class="title">Encode</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">json_data, _ := json.Marshal(payload)</span><br><span class="line"><span class="keyword">return</span> base64.StdEncoding.EncodeToString(json_data)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//JWT的secret部分加密</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(secret *JwtSecret)</span> <span class="title">Signature</span><span class="params">(header, payload <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">encode_jwt := header + <span class="string">"."</span> + payload</span><br><span class="line">h := hmac.New(sha256.New, []<span class="keyword">byte</span>(secret.Key))</span><br><span class="line">h.Write([]<span class="keyword">byte</span>(encode_jwt))</span><br><span class="line"><span class="keyword">return</span> base64.StdEncoding.EncodeToString(h.Sum(<span class="literal">nil</span>))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//JWT加密</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(jwt *Jwt)</span> <span class="title">Encode</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line">headerStr := jwt.Header.Encode()</span><br><span class="line">payloadStr := jwt.Payload.Encode()</span><br><span class="line"><span class="keyword">return</span> headerStr + <span class="string">"."</span> + payloadStr + <span class="string">"."</span> + jwt.Secret.Signature(headerStr, payloadStr)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//JWT解码</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(jwt *Jwt)</span> <span class="title">Decode</span><span class="params">(token <span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">data := strings.Split(token, <span class="string">"."</span>)</span><br><span class="line">errHeader := jwt.Header.Decode(<span class="keyword">string</span>(data[<span class="number">0</span>]))</span><br><span class="line"><span class="keyword">if</span> errHeader != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> errHeader</span><br><span class="line">&#125;</span><br><span class="line">errPayload := jwt.Payload.Decode(<span class="keyword">string</span>(data[<span class="number">1</span>]))</span><br><span class="line"><span class="keyword">if</span> errPayload != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> errPayload</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//JWT检测</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(jwt *Jwt)</span> <span class="title">Checkd</span><span class="params">(token <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">data := strings.Split(token, <span class="string">"."</span>)</span><br><span class="line"><span class="comment">//检测长度</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(data) != <span class="number">3</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//解码Token</span></span><br><span class="line">errDeCode := jwt.Decode(token)</span><br><span class="line"><span class="keyword">if</span> errDeCode != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//检测Hash是否一致</span></span><br><span class="line">secret := jwt.Secret.Signature(<span class="keyword">string</span>(data[<span class="number">0</span>]), <span class="keyword">string</span>(data[<span class="number">1</span>]))</span><br><span class="line"><span class="keyword">if</span> secret != <span class="keyword">string</span>(data[<span class="number">2</span>]) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//检测JWT是否过期</span></span><br><span class="line"><span class="keyword">if</span> jwt.Payload.Exp &lt;= time.Now().Unix() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//检测什么时间之后可用</span></span><br><span class="line"><span class="keyword">if</span> jwt.Payload.Nbf &gt;= time.Now().Unix() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Authorization"><a href="#Authorization" class="headerlink" title="Authorization"></a>Authorization</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> controllers</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"time"</span></span><br><span class="line">    </span><br><span class="line"><span class="string">"github.com/astaxie/beego"</span></span><br><span class="line"><span class="string">"github.com/chuanshuo843/12306_server/utils"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// User</span></span><br><span class="line"><span class="keyword">type</span> UserController <span class="keyword">struct</span> &#123;</span><br><span class="line">BaseController</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//登录12306</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(u *UserController)</span> <span class="title">Login</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> u.Kyfw == <span class="literal">nil</span> &#123;</span><br><span class="line">u.Fail().SetMsg(<span class="string">"获取用户数据失败"</span>).Send()</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">verify := u.GetString(<span class="string">"verify"</span>)</span><br><span class="line">username := u.GetString(<span class="string">"username"</span>)</span><br><span class="line">password := u.GetString(<span class="string">"password"</span>)</span><br><span class="line">errLogin := u.Kyfw.Login(username, password, verify)</span><br><span class="line"><span class="keyword">if</span> errLogin != <span class="literal">nil</span> &#123;</span><br><span class="line">u.Fail().SetMsg(errLogin.Error()).Send()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//生成JWT</span></span><br><span class="line">jwt := utils.InitJwt()</span><br><span class="line">jwt.Payload.Jti = time.Now().Unix()</span><br><span class="line">jwt.Payload.Iat = time.Now().Unix() - <span class="number">30</span>    <span class="comment">//减30秒以防请求过快</span></span><br><span class="line">jwt.Payload.Nbf = time.Now().Unix() - <span class="number">30</span>    <span class="comment">//减30秒以防请求过快</span></span><br><span class="line">jwt.Payload.Exp = time.Now().Unix() + <span class="number">43200</span> <span class="comment">//有效期十二个小时</span></span><br><span class="line">jwt.Payload.Data = <span class="string">`&#123;"username":"`</span> + u.Kyfw.LoginName + <span class="string">`"&#125;`</span></span><br><span class="line">token := jwt.Encode()</span><br><span class="line">kyfws.Move(u.AppID, token)</span><br><span class="line">u.res.IsLogin = u.Kyfw.IsLogin</span><br><span class="line">reJson := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">string</span>&#123;<span class="string">"access_token"</span>: token&#125;</span><br><span class="line">u.Success().SetMsg(<span class="string">"登录成功"</span>).SetData(reJson).Send()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> routers</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line"><span class="string">"strings"</span></span><br><span class="line"></span><br><span class="line"><span class="string">"github.com/astaxie/beego"</span></span><br><span class="line"><span class="string">"github.com/astaxie/beego/context"</span></span><br><span class="line"><span class="string">"github.com/chuanshuo843/12306_server/controllers"</span></span><br><span class="line"><span class="string">"github.com/chuanshuo843/12306_server/utils"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">ns := beego.NewNamespace(<span class="string">"/v1"</span>,</span><br><span class="line"><span class="comment">//登录</span></span><br><span class="line">beego.NSRouter(<span class="string">"/auth/login"</span>, &amp;controllers.UserController&#123;&#125;, <span class="string">"Post:Login"</span>),</span><br><span class="line">beego.NSRouter(<span class="string">"/auth/verifyCode"</span>, &amp;controllers.UserController&#123;&#125;, <span class="string">"Get:VerifyCode"</span>),</span><br><span class="line">beego.NSRouter(<span class="string">"/auth/init"</span>, &amp;controllers.UserController&#123;&#125;, <span class="string">"Get:InitLogin"</span>),</span><br><span class="line"><span class="comment">//车次处理</span></span><br><span class="line">beego.NSNamespace(<span class="string">"/schedule"</span>,</span><br><span class="line">beego.NSBefore(Auth),</span><br><span class="line">beego.NSInclude(</span><br><span class="line">&amp;controllers.ScheduleController&#123;&#125;,</span><br><span class="line">),</span><br><span class="line">),</span><br><span class="line"><span class="comment">//站台处理</span></span><br><span class="line">beego.NSNamespace(<span class="string">"/station"</span>,</span><br><span class="line">beego.NSBefore(Auth),</span><br><span class="line">beego.NSInclude(</span><br><span class="line">&amp;controllers.StationController&#123;&#125;,</span><br><span class="line">),</span><br><span class="line">),</span><br><span class="line"><span class="comment">//乘客信息</span></span><br><span class="line">beego.NSNamespace(<span class="string">"/passenger"</span>,</span><br><span class="line">beego.NSBefore(Auth),</span><br><span class="line">beego.NSInclude(</span><br><span class="line">&amp;controllers.PassengerController&#123;&#125;,</span><br><span class="line">),</span><br><span class="line">),</span><br><span class="line"><span class="comment">//订单处理</span></span><br><span class="line">beego.NSNamespace(<span class="string">"/order"</span>,</span><br><span class="line">beego.NSBefore(Auth),</span><br><span class="line">beego.NSInclude(</span><br><span class="line">&amp;controllers.OrderController&#123;&#125;,</span><br><span class="line">),</span><br><span class="line">),</span><br><span class="line">)</span><br><span class="line">beego.AddNamespace(ns)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Auth</span><span class="params">(ctx *context.Context)</span></span> &#123;</span><br><span class="line"><span class="comment">//只检测OPTIONS以外的请求</span></span><br><span class="line"><span class="keyword">if</span> !ctx.Input.Is(<span class="string">"OPTIONS"</span>) &#123;</span><br><span class="line">authString := ctx.Input.Header(<span class="string">"Authorization"</span>)</span><br><span class="line"><span class="keyword">if</span> authString == <span class="string">""</span> &#123;</span><br><span class="line">AllowCross(ctx)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">kv := strings.Split(authString, <span class="string">" "</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(kv) != <span class="number">2</span> || kv[<span class="number">0</span>] != <span class="string">"Bearer"</span> &#123;</span><br><span class="line">AllowCross(ctx)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">token := kv[<span class="number">1</span>]</span><br><span class="line">jwt := utils.InitJwt()</span><br><span class="line"><span class="keyword">if</span> !jwt.Checkd(token) &#123;</span><br><span class="line">AllowCross(ctx)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//错误返回</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AllowCross</span><span class="params">(ctx *context.Context)</span></span> &#123;</span><br><span class="line">ctx.Output.Header(<span class="string">"Cache-Control"</span>, <span class="string">"no-store"</span>)</span><br><span class="line">ctx.Output.Header(<span class="string">"Access-Control-Allow-Origin"</span>, <span class="string">"*"</span>)</span><br><span class="line">ctx.Output.Header(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"GET, POST, PUT, DELETE,OPTIONS"</span>)</span><br><span class="line">ctx.Output.Header(<span class="string">"Access-Control-Allow-Headers"</span>, <span class="string">"Authorization"</span>)</span><br><span class="line">ctx.Output.Header(<span class="string">"WWW-Authenticate"</span>, <span class="string">`Bearer realm="`</span>+beego.AppConfig.String(<span class="string">"HostName"</span>)+<span class="string">`" error="Authorization" error_description="invalid Authorization"`</span>)</span><br><span class="line">http.Error(ctx.ResponseWriter, <span class="string">"Unauthorized"</span>, <span class="number">401</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://tools.ietf.org/html/rfc7519" target="_blank" rel="noopener">RFC7519</a><br><a href="https://www.jianshu.com/p/576dbf44b2ae" target="_blank" rel="noopener">什么是 JWT – JSON WEB TOKEN</a><br><a href="http://blog.leapoahead.com/2015/09/06/understanding-jwt/" target="_blank" rel="noopener">JSON Web Token - 在Web应用间安全地传递信息</a><br><a href="http://blog.leapoahead.com/2015/09/07/user-authentication-with-jwt/" target="_blank" rel="noopener">八幅漫画理解使用JSON Web Token设计单点登录系统</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RFC标准系列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客迁移到GitHub.io</title>
      <link href="/article/2960315663.html"/>
      <url>/article/2960315663.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>github有一个很有爱的项目，叫做github pages，这个项目是给开发者建立一个私人页面，上面用来分享新颖的想法和自己写的代码，而且最主要的是，这个是免费而且没有空间流量限制的。由于对leanote的维护和数据的迁移感到麻烦，所以最近把博客迁移到了GitHub.io上面省去了服务器的成本和维护的便利,下面记录一下迁移过程</p><a id="more"></a><h1 id="GitHub配置"><a href="#GitHub配置" class="headerlink" title="GitHub配置"></a>GitHub配置</h1><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>格式: 用户名.github.io 我这里是chuanshuo843.github.io 记得初始化仓库</p><h2 id="启用GitHub-Pages"><a href="#启用GitHub-Pages" class="headerlink" title="启用GitHub Pages"></a>启用GitHub Pages</h2><p>进入仓库chuanshuo843.github.io -&gt; Settings -&gt; GitHub Pages </p><ul><li>Source 选择 master </li><li>Choose theme 选择主题开启GitHub Pages</li></ul><h1 id="本地环境配置"><a href="#本地环境配置" class="headerlink" title="本地环境配置"></a>本地环境配置</h1><p>以下操作都在fedora26下面进行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#安装node</span><br><span class="line">dnf install node</span><br><span class="line">#安装git</span><br><span class="line">dnf install git</span><br><span class="line">git config --global user.name &quot;xxxx&quot;</span><br><span class="line">git config --global user.email &quot;xxxxx@163.com&quot;</span><br><span class="line">#安装hexo</span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">npm install hexo --save</span><br><span class="line">#创建临时hexo文件</span><br><span class="line">mkdir ~/local_blog</span><br><span class="line">hexo init ~/local_blog</span><br><span class="line">#生成GitHub秘钥,使用GitHub的邮箱账号</span><br><span class="line">#参考:https://jingyan.baidu.com/article/dca1fa6f756777f1a44052e3.html</span><br><span class="line">ssh-keygen -t rsa -C &quot;chuanshuo843@163.com&quot; </span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><h2 id="仓库数据构建"><a href="#仓库数据构建" class="headerlink" title="仓库数据构建"></a>仓库数据构建</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#到根目录</span><br><span class="line">cd ~</span><br><span class="line">#克隆项目</span><br><span class="line">git clone git@github.com:chuanshuo843/chuanshuo843.github.io.git</span><br><span class="line">#创建hexo分支</span><br><span class="line">git checkout -b hexo</span><br><span class="line">#清空文件</span><br><span class="line">rm -rf ./*</span><br><span class="line">#拷贝hexo文件</span><br><span class="line">cp ~/local_blog/_config.yml ~/chuanshuo843.github.io</span><br><span class="line">cp -rf ~/local_blog/themes ~/chuanshuo843.github.io</span><br><span class="line">cp -rf ~/local_blog/source ~/chuanshuo843.github.io</span><br><span class="line">cp -rf ~/local_blog/scaffolds ~/chuanshuo843.github.io</span><br><span class="line">cp -rf ~/local_blog/package.json ~/chuanshuo843.github.io</span><br><span class="line">cp -rf ~/local_blog/.gitignore ~/chuanshuo843.github.io</span><br><span class="line">#提交到远程分支</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;init hexo&quot;</span><br><span class="line">git push origin hexo</span><br></pre></td></tr></table></figure><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd ~/chuanshuo843.github.io/themes</span><br><span class="line">rm -rf landscape </span><br><span class="line">git clone https://github.com/iissnan/hexo-theme-next.git</span><br><span class="line">rm -rf hexo-theme-next/.git</span><br></pre></td></tr></table></figure><h2 id="安装hexo扩展"><a href="#安装hexo扩展" class="headerlink" title="安装hexo扩展"></a>安装hexo扩展</h2><p><a href="https://hexo.io/plugins/" target="_blank" rel="noopener">hexo插件列表</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cd ~/chuanshuo843.github.io</span><br><span class="line">npm install</span><br><span class="line">#安装git扩展,发布失败请检测是否安装了这个插件</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">#安装sitemap</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">#安装百度sitemap</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br><span class="line">#安装Rss</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">#安装本地搜索</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line">#安装hexo-admin</span><br><span class="line">npm install hexo-admin --save</span><br></pre></td></tr></table></figure><h1 id="hexo配置"><a href="#hexo配置" class="headerlink" title="hexo配置"></a>hexo配置</h1><p>Git仓库配好就可以进行发布了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line">vim ~/chuanshuo843.github.io/_config.yml</span><br><span class="line"></span><br><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https://hexo.io/docs/configuration.html</span><br><span class="line">## Source: https://github.com/hexojs/hexo/</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title: o时过境迁心难沉</span><br><span class="line">subtitle: 记录看到和遇到的问题和解决方式</span><br><span class="line">description: 苏老堤边玉一林，六桥风月是知音。任他桃李争欢赏，不为繁华易素心。</span><br><span class="line">author: DuanEnJian</span><br><span class="line">language: zh-Hans</span><br><span class="line">timezone: Asia/Shanghai</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</span><br><span class="line">url: http://blog.ganktools.com</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads/code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render:</span><br><span class="line"></span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link: true # Open external links in new tab</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: true</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace:</span><br><span class="line"></span><br><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default = &apos;&apos;)</span><br><span class="line"># per_page: Posts displayed per page. (0 = disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &apos;&apos;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Date / Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: hexo-theme-next</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">#这个配github的仓库地址,发布失败请检测 ssh key 和 hexo-deployer-git 扩展</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repository: git@github.com:chuanshuo843/chuanshuo843.github.io.git</span><br><span class="line">    branch: master</span><br><span class="line"></span><br><span class="line"># 配置RSS</span><br><span class="line"># npm install hexo-generator-feed</span><br><span class="line">feed:</span><br><span class="line">  type: atom</span><br><span class="line">  path: atom.xml</span><br><span class="line">  limit: 0</span><br><span class="line">#  hub:</span><br><span class="line">#  content:</span><br><span class="line">#  content_limit: 140</span><br><span class="line">#  content_limit_delim: &apos; &apos;</span><br><span class="line"></span><br><span class="line"># 自定义站点内容搜索</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  </span><br><span class="line"># Extensions 拓展插件配置</span><br><span class="line">plugins:</span><br><span class="line">baidusitemap:</span><br><span class="line">    path: baidusitemap.xml</span><br><span class="line">sitemap:</span><br><span class="line">    path: sitemap.xml</span><br></pre></td></tr></table></figure><h1 id="hexo-next主题配置"><a href="#hexo-next主题配置" class="headerlink" title="hexo-next主题配置"></a>hexo-next主题配置</h1><p><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">NexT主题使用文档</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br></pre></td><td class="code"><pre><span class="line">vim ~/chuanshuo843.github.io/themes/hexo-theme-next/_config.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Theme Core Configuration Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Set to true, if you want to fully override the default configuration.</span><br><span class="line"># Useful if you don&apos;t want to inherit the theme _config.yml configurations.</span><br><span class="line">override: false</span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Site Information Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># To get or check favicons visit: https://realfavicongenerator.net</span><br><span class="line"># Put your favicons into `hexo-site/source/` (recommend) or `hexo-site/themes/next/source/images/` directory.</span><br><span class="line"></span><br><span class="line"># Default NexT favicons placed in `hexo-site/themes/next/source/images/` directory.</span><br><span class="line"># And if you want to place your icons in `hexo-site/source/` root directory, you must remove `/images` prefix from pathes.</span><br><span class="line"></span><br><span class="line"># For example, you put your favicons into `hexo-site/source/images` directory.</span><br><span class="line"># Then need to rename &amp; redefine they on any other names, otherwise icons from Next will rewrite your custom icons in Hexo.</span><br><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-16x16-next.png</span><br><span class="line">  medium: /images/favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line">  #android_manifest: /images/manifest.json</span><br><span class="line">  #ms_browserconfig: /images/browserconfig.xml</span><br><span class="line"></span><br><span class="line"># Set default keywords (Use a comma to separate)</span><br><span class="line">keywords: &quot;PHP,Swoole,Nginx,Mysql,Redis,Golang&quot;</span><br><span class="line"></span><br><span class="line"># Set rss to false to disable feed link.</span><br><span class="line"># Leave rss as empty to use site&apos;s feed link.</span><br><span class="line"># Set rss to specific value if you have burned your feed already.</span><br><span class="line">rss:</span><br><span class="line"></span><br><span class="line">footer:</span><br><span class="line">  # Specify the date when the site was setup.</span><br><span class="line">  # If not defined, current year will be used.</span><br><span class="line">  since: 2015</span><br><span class="line"></span><br><span class="line">  # Icon between year and copyright info.</span><br><span class="line">  icon: user</span><br><span class="line"></span><br><span class="line">  # If not defined, will be used `author` from Hexo main config.</span><br><span class="line">  copyright:</span><br><span class="line">  # -------------------------------------------------------------</span><br><span class="line">  # Hexo link (Powered by Hexo).</span><br><span class="line">  powered: true</span><br><span class="line"></span><br><span class="line">  theme:</span><br><span class="line">    # Theme &amp; scheme info link (Theme - NexT.scheme).</span><br><span class="line">    enable: true</span><br><span class="line">    # Version info of NexT after scheme info (vX.X.X).</span><br><span class="line">    version: true</span><br><span class="line">  # -------------------------------------------------------------</span><br><span class="line">  # Any custom text can be defined here.</span><br><span class="line">  #custom_text: Hosted by &lt;a target=&quot;_blank&quot; href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;</span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># SEO Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.</span><br><span class="line"># See: https://support.google.com/webmasters/answer/139066</span><br><span class="line"># Tips: Before you open this tag, remember set up your URL in hexo _config.yml ( ex. url: http://yourdomain.com )</span><br><span class="line">canonical: true</span><br><span class="line"></span><br><span class="line"># Change headers hierarchy on site-subtitle (will be main site description) and on all post/pages titles for better SEO-optimization.</span><br><span class="line">seo: false</span><br><span class="line"></span><br><span class="line"># If true, will add site-subtitle to index page, added in main hexo config.</span><br><span class="line"># subtitle: Subtitle</span><br><span class="line">index_with_subtitle: false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Menu Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># When running the site in a subdirectory (e.g. domain.tld/blog), remove the leading slash from link value (/archives -&gt; archives).</span><br><span class="line"># Usage: `Key: /link/ || icon`</span><br><span class="line"># Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.</span><br><span class="line"># Value before `||` delimeter is the target link.</span><br><span class="line"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.</span><br><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user</span><br><span class="line">  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br><span class="line">  #schedule: /schedule/ || calendar</span><br><span class="line">  #sitemap: /sitemap.xml || sitemap</span><br><span class="line">  #commonweal: /404/ || heartbeat</span><br><span class="line"></span><br><span class="line"># Enable/Disable menu icons.</span><br><span class="line">menu_icons:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Sidebar Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Social Links.</span><br><span class="line"># Usage: `Key: permalink || icon`</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before `||` delimeter is the target permalink.</span><br><span class="line"># Value after `||` delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span><br><span class="line">social:</span><br><span class="line">  GitHub: https://github.com/chuanshuo843 || github</span><br><span class="line">  E-Mail: mailto:backtrack843@163.com || envelope</span><br><span class="line">  #Google: https://plus.google.com/chuanshuo843 || google</span><br><span class="line">  #Twitter: https://twitter.com/yourname || twitter</span><br><span class="line">  #FB Page: https://www.facebook.com/yourname || facebook</span><br><span class="line">  #VK Group: https://vk.com/yourname || vk</span><br><span class="line">  #StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span><br><span class="line">  #YouTube: https://youtube.com/yourname || youtube</span><br><span class="line">  #Instagram: https://instagram.com/yourname || instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  icons_only: false</span><br><span class="line">  transition: false</span><br><span class="line"></span><br><span class="line"># Blog rolls</span><br><span class="line">links_icon: link</span><br><span class="line">links_title: Links</span><br><span class="line">links_layout: block</span><br><span class="line">#links_layout: inline</span><br><span class="line">#links:</span><br><span class="line">  #Title: http://example.com/</span><br><span class="line"></span><br><span class="line"># Sidebar Avatar</span><br><span class="line"># in theme directory(source/images): /images/avatar.gif</span><br><span class="line"># in site  directory(source/uploads): /uploads/avatar.gif</span><br><span class="line">avatar: http://himg.bdimg.com/sys/portrait/item/21cd636875616e7368756f3834339e11.jpg</span><br><span class="line"></span><br><span class="line"># Table Of Contents in the Sidebar</span><br><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: true</span><br><span class="line"></span><br><span class="line">  # If true, all words will placed on next lines if header width longer then sidebar width.</span><br><span class="line">  wrap: false</span><br><span class="line"></span><br><span class="line"># Creative Commons 4.0 International License.</span><br><span class="line"># http://creativecommons.org/</span><br><span class="line"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span><br><span class="line">#creative_commons: by-nc-sa</span><br><span class="line">#creative_commons:</span><br><span class="line"></span><br><span class="line">sidebar:</span><br><span class="line">  # Sidebar Position, available value: left | right (only for Pisces | Gemini).</span><br><span class="line">  position: left</span><br><span class="line">  #position: right</span><br><span class="line"></span><br><span class="line">  # Sidebar Display, available value (only for Muse | Mist):</span><br><span class="line">  #  - post    expand on posts automatically. Default.</span><br><span class="line">  #  - always  expand for all pages automatically</span><br><span class="line">  #  - hide    expand only when click on the sidebar toggle icon.</span><br><span class="line">  #  - remove  Totally remove sidebar including sidebar toggle.</span><br><span class="line">  display: post</span><br><span class="line">  #display: always</span><br><span class="line">  #display: hide</span><br><span class="line">  #display: remove</span><br><span class="line"></span><br><span class="line">  # Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span><br><span class="line">  offset: 12</span><br><span class="line"></span><br><span class="line">  # Back to top in sidebar (only for Pisces | Gemini).</span><br><span class="line">  b2t: false</span><br><span class="line"></span><br><span class="line">  # Scroll percent label in b2t button.</span><br><span class="line">  scrollpercent: false</span><br><span class="line"></span><br><span class="line">  # Enable sidebar on narrow view (only for Muse | Mist).</span><br><span class="line">  onmobile: false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Post Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span><br><span class="line">scroll_to_more: true</span><br><span class="line"></span><br><span class="line"># Automatically saving scroll position on each post/page in cookies.</span><br><span class="line">save_scroll: false</span><br><span class="line"></span><br><span class="line"># Automatically excerpt description in homepage as preamble text.</span><br><span class="line">excerpt_description: true</span><br><span class="line"></span><br><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: false</span><br><span class="line">  length: 150</span><br><span class="line"></span><br><span class="line"># Post meta display settings</span><br><span class="line">post_meta:</span><br><span class="line">  item_text: true</span><br><span class="line">  created_at: true</span><br><span class="line">  updated_at: false</span><br><span class="line">  categories: true</span><br><span class="line"></span><br><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https://github.com/willin/hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: false</span><br><span class="line">  min2read: false</span><br><span class="line">  totalcount: false</span><br><span class="line">  separated_meta: true</span><br><span class="line"></span><br><span class="line"># Wechat Subscriber</span><br><span class="line">#wechat_subscriber:</span><br><span class="line">  #enabled: true</span><br><span class="line">  #qcode: /path/to/your/wechatqcode ex. /uploads/wechat-qcode.jpg</span><br><span class="line">  #description: ex. subscribe to my blog by scanning my public wechat account</span><br><span class="line"></span><br><span class="line"># Reward</span><br><span class="line">#reward_comment: Donate comment here</span><br><span class="line">#wechatpay: /images/wechatpay.jpg</span><br><span class="line">#alipay: /images/alipay.jpg</span><br><span class="line">#bitcoin: /images/bitcoin.png</span><br><span class="line"></span><br><span class="line"># Declare license on posts</span><br><span class="line">post_copyright:</span><br><span class="line">  enable: false</span><br><span class="line">  license: CC BY-NC-SA 3.0</span><br><span class="line">  license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Misc Theme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Reduce padding / margin indents on devices with narrow width.</span><br><span class="line">mobile_layout_economy: false</span><br><span class="line"></span><br><span class="line"># Android Chrome header panel color ($black-deep).</span><br><span class="line">android_chrome_color: &quot;#222&quot;</span><br><span class="line"></span><br><span class="line"># Custom Logo.</span><br><span class="line"># !!Only available for Default Scheme currently.</span><br><span class="line"># Options:</span><br><span class="line">#   enabled: [true/false] - Replace with specific image</span><br><span class="line">#   image: url-of-image   - Images&apos;s url</span><br><span class="line">custom_logo:</span><br><span class="line">  enabled: false</span><br><span class="line">  image:</span><br><span class="line"></span><br><span class="line"># Code Highlight theme</span><br><span class="line"># Available value:</span><br><span class="line">#    normal | night | night eighties | night blue | night bright</span><br><span class="line"># https://github.com/chriskempson/tomorrow-theme</span><br><span class="line">highlight_theme: normal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Font Settings</span><br><span class="line"># - Find fonts on Google Fonts (https://www.google.com/fonts)</span><br><span class="line"># - All fonts set here will have the following styles:</span><br><span class="line">#     light, light italic, normal, normal italic, bold, bold italic</span><br><span class="line"># - Be aware that setting too much fonts will cause site running slowly</span><br><span class="line"># - Introduce in 5.0.1</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># CAUTION! Safari Version 10.1.2 bug: https://github.com/iissnan/hexo-theme-next/issues/1844</span><br><span class="line"># To avoid space between header and sidebar in Pisces / Gemini themes recommended to use Web Safe fonts for `global` (and `logo`):</span><br><span class="line"># Arial | Tahoma | Helvetica | Times New Roman | Courier New | Verdana | Georgia | Palatino | Garamond | Comic Sans MS | Trebuchet MS</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  # Uri of fonts host. E.g. //fonts.googleapis.com (Default).</span><br><span class="line">  host:</span><br><span class="line"></span><br><span class="line">  # Font options:</span><br><span class="line">  # `external: true` will load this font family from `host` above.</span><br><span class="line">  # `family: Times New Roman`. Without any quotes.</span><br><span class="line">  # `size: xx`. Use `px` as unit.</span><br><span class="line"></span><br><span class="line">  # Global font settings used on &lt;body&gt; element.</span><br><span class="line">  global:</span><br><span class="line">    external: true</span><br><span class="line">    family: Monda</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for Headlines (h1, h2, h3, h4, h5, h6).</span><br><span class="line">  # Fallback to `global` font settings.</span><br><span class="line">  headings:</span><br><span class="line">    external: true</span><br><span class="line">    family: Roboto Slab</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for posts.</span><br><span class="line">  # Fallback to `global` font settings.</span><br><span class="line">  posts:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line"></span><br><span class="line">  # Font settings for Logo.</span><br><span class="line">  # Fallback to `global` font settings.</span><br><span class="line">  logo:</span><br><span class="line">    external: true</span><br><span class="line">    family: Lobster Two</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for &lt;code&gt; and code blocks.</span><br><span class="line">  codes:</span><br><span class="line">    external: true</span><br><span class="line">    family: PT Mono</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Third Party Services Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># MathJax Support</span><br><span class="line">mathjax:</span><br><span class="line">  enable: false</span><br><span class="line">  per_page: false</span><br><span class="line">  cdn: //cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML</span><br><span class="line"></span><br><span class="line"># Han Support docs: https://hanzi.pro/</span><br><span class="line">han: false</span><br><span class="line"></span><br><span class="line"># Swiftype Search API Key</span><br><span class="line">#swiftype_key:</span><br><span class="line"></span><br><span class="line"># Baidu Analytics ID</span><br><span class="line">#baidu_analytics:</span><br><span class="line"></span><br><span class="line"># Duoshuo ShortName</span><br><span class="line">#duoshuo_shortname:</span><br><span class="line"></span><br><span class="line"># Disqus</span><br><span class="line">disqus:</span><br><span class="line">  enable: true</span><br><span class="line">  shortname: ganktools</span><br><span class="line">  count: true</span><br><span class="line"></span><br><span class="line"># Hypercomments</span><br><span class="line">#hypercomments_id:</span><br><span class="line"></span><br><span class="line"># changyan</span><br><span class="line">changyan:</span><br><span class="line">  enable: false</span><br><span class="line">  appid:</span><br><span class="line">  appkey:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Valine.</span><br><span class="line"># You can get your appid and appkey from https://leancloud.cn</span><br><span class="line"># more info please open https://valine.js.org</span><br><span class="line">valine:</span><br><span class="line">  enable: false</span><br><span class="line">  appid:  # your leancloud application appid</span><br><span class="line">  appkey:  # your leancloud application appkey</span><br><span class="line">  notify: false # mail notifier , https://github.com/xCss/Valine/wiki</span><br><span class="line">  verify: false # Verification code</span><br><span class="line">  placeholder: Just go go # comment box placeholder</span><br><span class="line">  avatar: mm # gravatar style</span><br><span class="line">  guest_info: nick,mail,link # custom comment header</span><br><span class="line">  pageSize: 10 # pagination size</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Support for youyan comments system.</span><br><span class="line"># You can get your uid from http://www.uyan.cc</span><br><span class="line">#youyan_uid: your uid</span><br><span class="line"></span><br><span class="line"># Support for LiveRe comments system.</span><br><span class="line"># You can get your uid from https://livere.com/insight/myCode (General web site)</span><br><span class="line">#livere_uid: your uid</span><br><span class="line"></span><br><span class="line"># Gitment</span><br><span class="line"># Introduction: https://imsun.net/posts/gitment-introduction/</span><br><span class="line"># You can get your Github ID from https://api.github.com/users/&lt;Github username&gt;</span><br><span class="line">gitment:</span><br><span class="line">  enable: false</span><br><span class="line">  mint: true # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span><br><span class="line">  count: true # Show comments count in post meta area</span><br><span class="line">  lazy: false # Comments lazy loading with a button</span><br><span class="line">  cleanly: false # Hide &apos;Powered by ...&apos; on footer, and more</span><br><span class="line">  language: # Force language, or auto switch by theme</span><br><span class="line">  github_user: # MUST HAVE, Your Github ID</span><br><span class="line">  github_repo: # MUST HAVE, The repo you use to store Gitment comments</span><br><span class="line">  client_id: # MUST HAVE, Github client id for the Gitment</span><br><span class="line">  client_secret: # EITHER this or proxy_gateway, Github access secret token for the Gitment</span><br><span class="line">  proxy_gateway: # Address of api proxy, See: https://github.com/aimingoo/intersect</span><br><span class="line">  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled</span><br><span class="line"></span><br><span class="line"># Baidu Share</span><br><span class="line"># Available value:</span><br><span class="line">#    button | slide</span><br><span class="line"># Warning: Baidu Share does not support https.</span><br><span class="line">#baidushare:</span><br><span class="line">##  type: button</span><br><span class="line"></span><br><span class="line"># Share</span><br><span class="line"># This plugin is more useful in China, make sure you known how to use it.</span><br><span class="line"># And you can find the use guide at official webiste: http://www.jiathis.com/.</span><br><span class="line"># Warning: JiaThis does not support https.</span><br><span class="line">#jiathis:</span><br><span class="line">  ##uid: Get this uid from http://www.jiathis.com/</span><br><span class="line">#add_this_id:</span><br><span class="line"></span><br><span class="line"># Share</span><br><span class="line">#duoshuo_share: true</span><br><span class="line"></span><br><span class="line"># NeedMoreShare2</span><br><span class="line"># This plugin is a pure javascript sharing lib which is useful in China.</span><br><span class="line"># See: https://github.com/revir/need-more-share2</span><br><span class="line"># Also see: https://github.com/DzmVasileusky/needShareButton</span><br><span class="line"># iconStyle: default | box</span><br><span class="line"># boxForm: horizontal | vertical</span><br><span class="line"># position: top / middle / bottom + Left / Center / Right</span><br><span class="line"># networks: Weibo,Wechat,Douban,QQZone,Twitter,Linkedin,Mailto,Reddit,</span><br><span class="line">#           Delicious,StumbleUpon,Pinterest,Facebook,GooglePlus,Slashdot,</span><br><span class="line">#           Technorati,Posterous,Tumblr,GoogleBookmarks,Newsvine,</span><br><span class="line">#           Evernote,Friendfeed,Vkontakte,Odnoklassniki,Mailru</span><br><span class="line">needmoreshare2:</span><br><span class="line">  enable: false</span><br><span class="line">  postbottom:</span><br><span class="line">    enable: false</span><br><span class="line">    options:</span><br><span class="line">      iconStyle: box</span><br><span class="line">      boxForm: horizontal</span><br><span class="line">      position: bottomCenter</span><br><span class="line">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br><span class="line">  float:</span><br><span class="line">    enable: false</span><br><span class="line">    options:</span><br><span class="line">      iconStyle: box</span><br><span class="line">      boxForm: horizontal</span><br><span class="line">      position: middleRight</span><br><span class="line">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br><span class="line"></span><br><span class="line"># Google Webmaster tools verification setting</span><br><span class="line"># See: https://www.google.com/webmasters/</span><br><span class="line">#google_site_verification:</span><br><span class="line"></span><br><span class="line"># Google Analytics</span><br><span class="line">#google_analytics:</span><br><span class="line"></span><br><span class="line"># Bing Webmaster tools verification setting</span><br><span class="line"># See: https://www.bing.com/webmaster/</span><br><span class="line">#bing_site_verification:</span><br><span class="line"></span><br><span class="line"># Yandex Webmaster tools verification setting</span><br><span class="line"># See: https://webmaster.yandex.ru/</span><br><span class="line">#yandex_site_verification:</span><br><span class="line"></span><br><span class="line"># CNZZ count</span><br><span class="line">#cnzz_siteid:</span><br><span class="line"></span><br><span class="line"># Application Insights</span><br><span class="line"># See https://azure.microsoft.com/en-us/services/application-insights/</span><br><span class="line"># application_insights:</span><br><span class="line"></span><br><span class="line"># Make duoshuo show UA</span><br><span class="line"># user_id must NOT be null when admin_enable is true!</span><br><span class="line"># you can visit http://dev.duoshuo.com get duoshuo user id.</span><br><span class="line">duoshuo_info:</span><br><span class="line">  ua_enable: true</span><br><span class="line">  admin_enable: false</span><br><span class="line">  user_id: 0</span><br><span class="line">  #admin_nickname: Author</span><br><span class="line"></span><br><span class="line"># Post widgets &amp; FB/VK comments settings.</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Facebook SDK Support.</span><br><span class="line"># https://github.com/iissnan/hexo-theme-next/pull/410</span><br><span class="line">facebook_sdk:</span><br><span class="line">  enable:       false</span><br><span class="line">  app_id:       #&lt;app_id&gt;</span><br><span class="line">  fb_admin:     #&lt;user_id&gt;</span><br><span class="line">  like_button:  #true</span><br><span class="line">  webmaster:    #true</span><br><span class="line"></span><br><span class="line"># Facebook comments plugin</span><br><span class="line"># This plugin depends on Facebook SDK.</span><br><span class="line"># If facebook_sdk.enable is false, Facebook comments plugin is unavailable.</span><br><span class="line">facebook_comments_plugin:</span><br><span class="line">  enable:       false</span><br><span class="line">  num_of_posts: 10    # min posts num is 1</span><br><span class="line">  width:        100%  # default width is 550px</span><br><span class="line">  scheme:       light # default scheme is light (light or dark)</span><br><span class="line"></span><br><span class="line"># VKontakte API Support.</span><br><span class="line"># To get your AppID visit https://vk.com/editapp?act=create</span><br><span class="line">vkontakte_api:</span><br><span class="line">  enable:       false</span><br><span class="line">  app_id:       #&lt;app_id&gt;</span><br><span class="line">  like:         true</span><br><span class="line">  comments:     true</span><br><span class="line">  num_of_posts: 10</span><br><span class="line"></span><br><span class="line"># Star rating support to each article.</span><br><span class="line"># To get your ID visit https://widgetpack.com</span><br><span class="line">rating:</span><br><span class="line">  enable: false</span><br><span class="line">  id:     #&lt;app_id&gt;</span><br><span class="line">  color:  fc6423</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Show number of visitors to each article.</span><br><span class="line"># You can visit https://leancloud.cn get AppID and AppKey.</span><br><span class="line">leancloud_visitors:</span><br><span class="line">  enable: false</span><br><span class="line">  app_id: #&lt;app_id&gt;</span><br><span class="line">  app_key: #&lt;app_key&gt;</span><br><span class="line"></span><br><span class="line"># Another tool to show number of visitors to each article.</span><br><span class="line"># visit https://console.firebase.google.com/u/0/ to get apiKey and projectId</span><br><span class="line"># visit https://firebase.google.com/docs/firestore/ to get more information about firestore</span><br><span class="line">firestore:</span><br><span class="line">  enable: false</span><br><span class="line">  collection: articles #required, a string collection name to access firestore database</span><br><span class="line">  apiKey: #required</span><br><span class="line">  projectId: #required</span><br><span class="line">  bluebird: false #enable this if you want to include bluebird 3.5.1(core version) Promise polyfill</span><br><span class="line"></span><br><span class="line"># Show PV/UV of the website/page with busuanzi.</span><br><span class="line"># Get more information on http://ibruce.info/2015/04/04/busuanzi/</span><br><span class="line">busuanzi_count:</span><br><span class="line">  # count values only if the other configs are false</span><br><span class="line">  enable: false</span><br><span class="line">  # custom uv span for the whole site</span><br><span class="line">  site_uv: true</span><br><span class="line">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt;</span><br><span class="line">  site_uv_footer:</span><br><span class="line">  # custom pv span for the whole site</span><br><span class="line">  site_pv: true</span><br><span class="line">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt;</span><br><span class="line">  site_pv_footer:</span><br><span class="line">  # custom pv span for one page only</span><br><span class="line">  page_pv: true</span><br><span class="line">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt;</span><br><span class="line">  page_pv_footer:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Tencent analytics ID</span><br><span class="line"># tencent_analytics:</span><br><span class="line"></span><br><span class="line"># Tencent MTA ID</span><br><span class="line"># tencent_mta:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span><br><span class="line">baidu_push: false</span><br><span class="line"></span><br><span class="line"># Google Calendar</span><br><span class="line"># Share your recent schedule to others via calendar page</span><br><span class="line">#</span><br><span class="line"># API Documentation:</span><br><span class="line"># https://developers.google.com/google-apps/calendar/v3/reference/events/list</span><br><span class="line">calendar:</span><br><span class="line">  enable: false</span><br><span class="line">  calendar_id: &lt;required&gt;</span><br><span class="line">  api_key: &lt;required&gt;</span><br><span class="line">  orderBy: startTime</span><br><span class="line">  offsetMax: 24</span><br><span class="line">  offsetMin: 4</span><br><span class="line">  timeZone:</span><br><span class="line">  showDeleted: false</span><br><span class="line">  singleEvents: true</span><br><span class="line">  maxResults: 250</span><br><span class="line"></span><br><span class="line"># Algolia Search</span><br><span class="line">algolia_search:</span><br><span class="line">  enable: false</span><br><span class="line">  hits:</span><br><span class="line">    per_page: 10</span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: Search for Posts</span><br><span class="line">    hits_empty: &quot;We didn&apos;t find any results for the search: $&#123;query&#125;&quot;</span><br><span class="line">    hits_stats: &quot;$&#123;hits&#125; results found in $&#123;time&#125; ms&quot;</span><br><span class="line"></span><br><span class="line"># Local search</span><br><span class="line"># Dependencies: https://github.com/flashlab/hexo-generator-search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Tags Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># External URL with BASE64 encrypt &amp; decrypt.</span><br><span class="line"># Usage: &#123;% exturl text url &quot;title&quot; %&#125;</span><br><span class="line"># Alias: &#123;% extlink text url &quot;title&quot; %&#125;</span><br><span class="line">exturl: false</span><br><span class="line"></span><br><span class="line"># Note tag (bs-callout).</span><br><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border_radius: 3</span><br><span class="line">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span><br><span class="line">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span><br><span class="line">  light_bg_offset: 0</span><br><span class="line"></span><br><span class="line"># Label tag.</span><br><span class="line">label: true</span><br><span class="line"></span><br><span class="line"># Tabs tag.</span><br><span class="line">tabs:</span><br><span class="line">  enable: true</span><br><span class="line">  transition:</span><br><span class="line">    tabs: false</span><br><span class="line">    labels: true</span><br><span class="line">  border_radius: 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#! ---------------------------------------------------------------</span><br><span class="line">#! DO NOT EDIT THE FOLLOWING SETTINGS</span><br><span class="line">#! UNLESS YOU KNOW WHAT YOU ARE DOING</span><br><span class="line">#! ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Use velocity to animate everything.</span><br><span class="line">motion:</span><br><span class="line">  enable: true</span><br><span class="line">  async: false</span><br><span class="line">  transition:</span><br><span class="line">    # Transition variants:</span><br><span class="line">    # fadeIn | fadeOut | flipXIn | flipXOut | flipYIn | flipYOut | flipBounceXIn | flipBounceXOut | flipBounceYIn | flipBounceYOut</span><br><span class="line">    # swoopIn | swoopOut | whirlIn | whirlOut | shrinkIn | shrinkOut | expandIn | expandOut</span><br><span class="line">    # bounceIn | bounceOut | bounceUpIn | bounceUpOut | bounceDownIn | bounceDownOut | bounceLeftIn | bounceLeftOut | bounceRightIn | bounceRightOut</span><br><span class="line">    # slideUpIn | slideUpOut | slideDownIn | slideDownOut | slideLeftIn | slideLeftOut | slideRightIn | slideRightOut</span><br><span class="line">    # slideUpBigIn | slideUpBigOut | slideDownBigIn | slideDownBigOut | slideLeftBigIn | slideLeftBigOut | slideRightBigIn | slideRightBigOut</span><br><span class="line">    # perspectiveUpIn | perspectiveUpOut | perspectiveDownIn | perspectiveDownOut | perspectiveLeftIn | perspectiveLeftOut | perspectiveRightIn | perspectiveRightOut</span><br><span class="line">    post_block: fadeIn</span><br><span class="line">    post_header: slideDownIn</span><br><span class="line">    post_body: slideDownIn</span><br><span class="line">    coll_header: slideLeftIn</span><br><span class="line">    # Only for Pisces | Gemini.</span><br><span class="line">    sidebar: slideUpIn</span><br><span class="line"></span><br><span class="line"># Fancybox</span><br><span class="line">fancybox: true</span><br><span class="line"></span><br><span class="line"># Progress bar in the top during page loading.</span><br><span class="line">pace: false</span><br><span class="line"># Themes list:</span><br><span class="line">#pace-theme-big-counter</span><br><span class="line">#pace-theme-bounce</span><br><span class="line">#pace-theme-barber-shop</span><br><span class="line">#pace-theme-center-atom</span><br><span class="line">#pace-theme-center-circle</span><br><span class="line">#pace-theme-center-radar</span><br><span class="line">#pace-theme-center-simple</span><br><span class="line">#pace-theme-corner-indicator</span><br><span class="line">#pace-theme-fill-left</span><br><span class="line">#pace-theme-flash</span><br><span class="line">#pace-theme-loading-bar</span><br><span class="line">#pace-theme-mac-osx</span><br><span class="line">#pace-theme-minimal</span><br><span class="line"># For example</span><br><span class="line"># pace_theme: pace-theme-center-simple</span><br><span class="line">pace_theme: pace-theme-minimal</span><br><span class="line"></span><br><span class="line"># Canvas-nest</span><br><span class="line">canvas_nest: true</span><br><span class="line"></span><br><span class="line"># three_waves</span><br><span class="line">three_waves: false</span><br><span class="line"></span><br><span class="line"># canvas_lines</span><br><span class="line">canvas_lines: false</span><br><span class="line"></span><br><span class="line"># canvas_sphere</span><br><span class="line">canvas_sphere: false</span><br><span class="line"></span><br><span class="line"># Only fit scheme Pisces</span><br><span class="line"># Canvas-ribbon</span><br><span class="line"># size: The width of the ribbon.</span><br><span class="line"># alpha: The transparency of the ribbon.</span><br><span class="line"># zIndex: The display level of the ribbon.</span><br><span class="line">canvas_ribbon:</span><br><span class="line">  enable: false</span><br><span class="line">  size: 300</span><br><span class="line">  alpha: 0.6</span><br><span class="line">  zIndex: -1</span><br><span class="line"></span><br><span class="line"># Script Vendors.</span><br><span class="line"># Set a CDN address for the vendor you want to customize.</span><br><span class="line"># For example</span><br><span class="line">#    jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js</span><br><span class="line"># Be aware that you should use the same version as internal ones to avoid potential problems.</span><br><span class="line"># Please use the https protocol of CDN files when you enable https on your site.</span><br><span class="line">vendors:</span><br><span class="line">  # Internal path prefix. Please do not edit it.</span><br><span class="line">  _internal: lib</span><br><span class="line"></span><br><span class="line">  # Internal version: 2.1.3</span><br><span class="line">  jquery:</span><br><span class="line"></span><br><span class="line">  # Internal version: 2.1.5</span><br><span class="line">  # See: http://fancyapps.com/fancybox/</span><br><span class="line">  fancybox:</span><br><span class="line">  fancybox_css:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.6</span><br><span class="line">  # See: https://github.com/ftlabs/fastclick</span><br><span class="line">  fastclick:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.9.7</span><br><span class="line">  # See: https://github.com/tuupola/jquery_lazyload</span><br><span class="line">  lazyload:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.2.1</span><br><span class="line">  # See: http://VelocityJS.org</span><br><span class="line">  velocity:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.2.1</span><br><span class="line">  # See: http://VelocityJS.org</span><br><span class="line">  velocity_ui:</span><br><span class="line"></span><br><span class="line">  # Internal version: 0.7.9</span><br><span class="line">  # See: https://faisalman.github.io/ua-parser-js/</span><br><span class="line">  ua_parser:</span><br><span class="line"></span><br><span class="line">  # Internal version: 4.6.2</span><br><span class="line">  # See: http://fontawesome.io/</span><br><span class="line">  fontawesome:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1</span><br><span class="line">  # https://www.algolia.com</span><br><span class="line">  algolia_instant_js:</span><br><span class="line">  algolia_instant_css:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.2</span><br><span class="line">  # See: https://github.com/HubSpot/pace</span><br><span class="line">  # Or use direct links below:</span><br><span class="line">  # pace: //cdn.bootcss.com/pace/1.0.2/pace.min.js</span><br><span class="line">  # pace_css: //cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-flash.min.css</span><br><span class="line">  pace:</span><br><span class="line">  pace_css:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.0</span><br><span class="line">  # https://github.com/hustcc/canvas-nest.js</span><br><span class="line">  canvas_nest: false</span><br><span class="line"></span><br><span class="line">  # three</span><br><span class="line">  three:</span><br><span class="line"></span><br><span class="line">  # three_waves</span><br><span class="line">  # https://github.com/jjandxa/three_waves</span><br><span class="line">  three_waves: true</span><br><span class="line"></span><br><span class="line">  # three_waves</span><br><span class="line">  # https://github.com/jjandxa/canvas_lines</span><br><span class="line">  canvas_lines:</span><br><span class="line"></span><br><span class="line">  # three_waves</span><br><span class="line">  # https://github.com/jjandxa/canvas_sphere</span><br><span class="line">  canvas_sphere:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.0</span><br><span class="line">  # https://github.com/zproo/canvas-ribbon</span><br><span class="line">  canvas_ribbon:</span><br><span class="line"></span><br><span class="line">  # Internal version: 3.3.0</span><br><span class="line">  # https://github.com/ethantw/Han</span><br><span class="line">  han:</span><br><span class="line"></span><br><span class="line">  # needMoreShare2</span><br><span class="line">  # https://github.com/revir/need-more-share2</span><br><span class="line">  needMoreShare2:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Assets</span><br><span class="line">css: css</span><br><span class="line">js: js</span><br><span class="line">images: images</span><br><span class="line"></span><br><span class="line"># Theme version</span><br><span class="line">version: 5.1.3</span><br></pre></td></tr></table></figure><h1 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h1><ul><li>hexo分支 为hexo数据备份</li><li>master分支 为博客展示数据<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~/chuanshuo843.github.io</span><br><span class="line">hexo g d</span><br></pre></td></tr></table></figure></li></ul><img src="/article/2960315663/blog.png" title="博客页面预览"><img src="/article/2960315663/master.png" title="master分支预览"><img src="/article/2960315663/hexo.png" title="hexo分支预览"><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://www.jianshu.com/p/e99ed60390a8" target="_blank" rel="noopener">20分钟教你使用hexo搭建github博客</a><br><a href="http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/#more" target="_blank" rel="noopener">GitHub Pages + Hexo搭建博客</a><br><a href="http://www.leyar.me/backup-your-blog-to-github/" target="_blank" rel="noopener">备份 Hexo 源文件至 GitHub</a><br><a href="https://www.zhihu.com/question/24422335" target="_blank" rel="noopener">有哪些好看的 Hexo 主题？</a><br><a href="https://jaredforsyth.com/hexo-admin/" target="_blank" rel="noopener">hexo-admin工具</a><br><a href="http://oakland.github.io/2016/05/02/hexo-%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E4%B8%80%E7%AF%87%E6%96%B0%E7%9A%84post/" target="_blank" rel="noopener">hexo如何生成一篇新的post</a><br><a href="https://segmentfault.com/a/1190000002632530" target="_blank" rel="noopener">hexo常用命令</a><br><a href="https://www.jianshu.com/p/cf0628478a4e" target="_blank" rel="noopener">Hexo发布博客引用自带图片的方法</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP-Nginx-配置</title>
      <link href="/article/2666822391.html"/>
      <url>/article/2666822391.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.yii.com ;</span><br><span class="line">        root   &quot;E:/Code/caitongsheApp&quot;;</span><br><span class="line">        index  index.html index.htm index.php;</span><br><span class="line">        location  ~ \.php(.*)$ &#123;</span><br><span class="line">            fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">            include        fastcgi_params;</span><br><span class="line">            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">            fastcgi_param  PATH_INFO  $fastcgi_path_info;</span><br><span class="line">            fastcgi_param  PATH_TRANSLATED  $document_root$fastcgi_path_info;</span><br><span class="line">            fastcgi_param  HTTPS              off;</span><br><span class="line">        &#125;</span><br><span class="line">        location / &#123;</span><br><span class="line">            if (!-e $request_filename) &#123;</span><br><span class="line">                     rewrite ^(.*)$ /index.php?s=$1 last;</span><br><span class="line">                 break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx-lua-redis-反向代理</title>
      <link href="/article/2989278071.html"/>
      <url>/article/2989278071.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">user  root;</span><br><span class="line">worker_processes  8;</span><br><span class="line">error_log  logs/error.log;</span><br><span class="line">error_log  logs/error.log  notice;</span><br><span class="line">error_log   logs/debug.log  debug;</span><br><span class="line"></span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    use epoll;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    #default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">    #                  &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">    #                  &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  30;</span><br><span class="line">    send_timeout        30;</span><br><span class="line"></span><br><span class="line">    client_header_buffer_size   8k;</span><br><span class="line">    client_max_body_size        30M;</span><br><span class="line">    large_client_header_buffers 4 4k;</span><br><span class="line">    ignore_invalid_headers      off;</span><br><span class="line">    </span><br><span class="line">    lua_package_path &quot;/usr/local/nginx/lualib/?.lua;;&quot;;</span><br><span class="line">    lua_package_cpath &quot;/usr/local/nginx/lualib/?.so;;&quot;;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        location /&#123;</span><br><span class="line">set $go_pkq &apos;&apos;;</span><br><span class="line">access_by_lua &apos;</span><br><span class="line">local redis = require &quot;resty.redis&quot;</span><br><span class="line">                local red = redis:new()</span><br><span class="line"></span><br><span class="line">                red:set_timeout(1000) -- 1 sec</span><br><span class="line"></span><br><span class="line">                local ok, err = red:connect(&quot;172.17.0.6&quot;, 6379)</span><br><span class="line">                if not ok then</span><br><span class="line">                    --ngx.say(&quot;failed to connect: &quot;, err)</span><br><span class="line">                    return &quot;&quot;</span><br><span class="line">                end</span><br><span class="line"></span><br><span class="line">                local res, err = red:get(ngx.req.get_headers()[&quot;Host&quot;])</span><br><span class="line">                if not res then</span><br><span class="line">                    --ngx.say(&quot;failed to get dog: &quot;, err)</span><br><span class="line">                    return &quot;&quot;</span><br><span class="line">                end</span><br><span class="line"></span><br><span class="line">ngx.var.go_pkq = res</span><br><span class="line">&apos;;</span><br><span class="line"></span><br><span class="line">            proxy_pass $scheme://$go_pkq$request_uri;</span><br><span class="line">            proxy_set_header Host $http_host;            </span><br><span class="line">            proxy_set_header Referer $http_referer;           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes集群部署方案</title>
      <link href="/article/4261225024.html"/>
      <url>/article/4261225024.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Docker的流行激活了一直不温不火的 PaaS，随之而来的是各类 Micro-PaaS的出现，Kubernetes是其中最具代表性的一员，它是 Google多年大规模容器管理技术的开源版本。越来越多的企业被迫面对互联网规模所带来的各类难题，而 Kubernetes以其优秀的理念和设计正在逐步形成新的技术标准，对于任何领域的运营总监、架构师和软件工程师来说，都是一个绝佳的突破机会。</p><a id="more"></a><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><p>etcd下载:<a href="https://github.com/coreos/etcd/releases" target="_blank" rel="noopener">https://github.com/coreos/etcd/releases</a><br>flannel下载:<a href="https://github.com/coreos/flannel/releases" target="_blank" rel="noopener">https://github.com/coreos/flannel/releases</a><br>docker下载:<a href="https://github.com/docker/docker/releases" target="_blank" rel="noopener">https://github.com/docker/docker/releases</a><br>kubernetes下载:<a href="https://github.com/kubernetes/kubernetes/releases" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes/releases</a></p><p><strong>三台centos主机</strong><br><strong>k8s master: 10.11.151.97  tc-151-97</strong><br><strong>k8s node1: 10.11.151.100  tc-151-100</strong><br><strong>k8s node2: 10.11.151.101  tc-151-101</strong></p><h1 id="ETCD集群部署"><a href="#ETCD集群部署" class="headerlink" title="ETCD集群部署"></a>ETCD集群部署</h1><p>ETCD是k8s集群的基础，可以单结点也可以以集群的方式部署。本文以三台主机组成ETCD集群进行部署，以service形式启动。在三台主机上分别执行如下操作</p><h2 id="创建工作目录"><a href="#创建工作目录" class="headerlink" title="创建工作目录"></a>创建工作目录</h2><p>解压ETCD安装包并将etcd和etcdctl复制到工作目录下（本文工作目录为/opt/domeos/openxxs/k8s-1.1.3-flannel）。</p><h2 id="创建Service"><a href="#创建Service" class="headerlink" title="创建Service"></a>创建Service</h2><p>创建 /lib/systemd/system/etcd.service 文件，该文件为centos系统的服务文件，注意配置其中的etcd可执行文件的绝对路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=ETCD</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">EnvironmentFile=/etc/sysconfig/etcd</span><br><span class="line">ExecStart=/opt/domeos/openxxs/k8s-1.1.3-flannel/etcd <span class="variable">$ETCD_NAME</span> \</span><br><span class="line">          <span class="variable">$INITIAL_ADVERTISE_PEER_URLS</span> \</span><br><span class="line">          <span class="variable">$LISTEN_PEER_URLS</span> \</span><br><span class="line">          <span class="variable">$ADVERTISE_CLIENT_URLS</span> \</span><br><span class="line">          <span class="variable">$LISTEN_CLIENT_URLS</span> \</span><br><span class="line">          <span class="variable">$INITIAL_CLUSTER_TOKEN</span> \</span><br><span class="line">          <span class="variable">$INITIAL_CLUSTER</span> \</span><br><span class="line">          <span class="variable">$INITIAL_CLUSTER_STATE</span> \</span><br><span class="line">          <span class="variable">$ETCD_OPTS</span></span><br><span class="line">Restart=on-failure</span><br></pre></td></tr></table></figure><h2 id="设置配置文件"><a href="#设置配置文件" class="headerlink" title="设置配置文件"></a>设置配置文件</h2><p>创建 /etc/sysconfig/etcd 文件，该文件为服务的配置文件，三台主机的ETCD_NAME、INITIAL_ADVERTISE_PEER_URLS和ADVERTISE_CLIENT_URLS参数各不相同，下面为97机上的配置文件，100和101上要做相应修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># configure file for etcd</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -name</span></span><br><span class="line">ETCD_NAME=<span class="string">'-name k8sETCD0'</span></span><br><span class="line"><span class="comment"># -initial-advertise-peer-urls</span></span><br><span class="line">INITIAL_ADVERTISE_PEER_URLS=<span class="string">'-initial-advertise-peer-urls http://10.11.151.97:4010'</span></span><br><span class="line"><span class="comment"># -listen-peer-urls</span></span><br><span class="line">LISTEN_PEER_URLS=<span class="string">'-listen-peer-urls http://0.0.0.0:4010'</span></span><br><span class="line"><span class="comment"># -advertise-client-urls</span></span><br><span class="line">ADVERTISE_CLIENT_URLS=<span class="string">'-advertise-client-urls http://10.11.151.97:4011,http://10.11.151.97:4012'</span></span><br><span class="line"><span class="comment"># -listen-client-urls</span></span><br><span class="line">LISTEN_CLIENT_URLS=<span class="string">'-listen-client-urls http://0.0.0.0:4011,http://0.0.0.0:4012'</span></span><br><span class="line"><span class="comment"># -initial-cluster-token</span></span><br><span class="line">INITIAL_CLUSTER_TOKEN=<span class="string">'-initial-cluster-token k8s-etcd-cluster'</span></span><br><span class="line"><span class="comment"># -initial-cluster</span></span><br><span class="line">INITIAL_CLUSTER=<span class="string">'-initial-cluster k8sETCD0=http://10.11.151.97:4010,k8sETCD1=http://10.11.151.100:4010,k8sETCD2=http://10.11.151.101:4010'</span></span><br><span class="line"><span class="comment"># -initial-cluster-state</span></span><br><span class="line">INITIAL_CLUSTER_STATE=<span class="string">'-initial-cluster-state new'</span></span><br><span class="line"><span class="comment"># other parameters</span></span><br><span class="line">ETCD_OPTS=<span class="string">''</span></span><br></pre></td></tr></table></figure><h2 id="配置网络环境"><a href="#配置网络环境" class="headerlink" title="配置网络环境"></a>配置网络环境</h2><p>启动集群前如果网络环境配置存在冲突，特别是iptables规则的干涉，会导致集群工作不正常。因此在启动前需要确认如下配置</p><ul><li>关闭防火墙</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><ul><li>修改hosts<br>kubelet 是通过/etc/hosts来获取本机IP的，因此需要在/etc/hosts中配置hostname和IP的对应关系，如97机上的 /etc/hosts 中需要存在这条记录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">10.11.151.97   tc-151-97</span><br><span class="line"></span><br><span class="line"><span class="comment">#hostname在k8s的网络配置中是个很重要的参数，要求其满足DNS的命名规则，可由字母数字短横线组成，但下划线不行（如tc_151_97就是不符合要求的）。在主机上通过执行 hostname 命令查看本机的hostname，如果不符合要求，有两种解决方案：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&lt;1&gt;直接更改主机的hostname使其符合要求，更改过程中需要重启网络，</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&lt;2&gt;在启动kubelet时使用 --hostname_override 参数指定用于集群内的hostname，在已有其它服务依赖于主机hostname的情形下推荐使用这种方式。</span></span><br></pre></td></tr></table></figure><h2 id="启动Etcd"><a href="#启动Etcd" class="headerlink" title="启动Etcd"></a>启动Etcd</h2><p>启动ETCD集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start etcd</span><br></pre></td></tr></table></figure><h2 id="测试Etcd"><a href="#测试Etcd" class="headerlink" title="测试Etcd"></a>测试Etcd</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看服务状态</span></span><br><span class="line">systemctl status -l etcd</span><br><span class="line"><span class="comment"># 若正常，则显示 Active: active (running)，同时在日志的最后会提示当前结点已加入到集群中了，如 "the connection with 6adad1923d90fb38 became active"</span></span><br><span class="line"><span class="comment"># 如果各个ETCD结点间系统时间相差较大则会提示"the clock difference against ... peer is too high"，此时根据需要修正系统时间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看集群结点的访问是否正常</span></span><br><span class="line">curl -L http://10.11.151.97:4012/version</span><br><span class="line">curl -L http://10.11.151.100:4012/version</span><br><span class="line">curl -L http://10.11.151.101:4012/version</span><br><span class="line"><span class="comment"># 若正常，则返回: &#123;"etcdserver":"2.2.1","etcdcluster":"2.2.0"&#125;</span></span><br></pre></td></tr></table></figure><h1 id="安装Kubernetes-Master"><a href="#安装Kubernetes-Master" class="headerlink" title="安装Kubernetes Master"></a>安装Kubernetes Master</h1><p>k8s-master一般包括三个组件：kube-apiserver、kube-controller-manager 和 kube-scheduler。如果要将k8s-master所在的主机也加入集群管理中，比如让这台主机可以使用集群内的DNS服务等，则需要在这台主机上启动kube-proxy，本文不考虑这种情况。将安装包解压后，复制 解压目录/bin/linux/amd64/ 下的 kube-apiserver、kube-controller-manager 和 kube-scheduler 到工作目录中。</p><h2 id="创建kube-apiserver-Service"><a href="#创建kube-apiserver-Service" class="headerlink" title="创建kube-apiserver.Service"></a>创建kube-apiserver.Service</h2><p>/lib/systemd/system/kube-apiserver.service 文件，同样需要注意将kube-apiserver可执行文件的绝对路径配置一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=kube-apiserver</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/etc/sysconfig/kube-apiserver</span><br><span class="line">ExecStart=/opt/domeos/openxxs/k8s-1.1.3-flannel/kube-apiserver <span class="variable">$ETCD_SERVERS</span> \</span><br><span class="line">          <span class="variable">$LOG_DIR</span> \</span><br><span class="line">          <span class="variable">$SERVICE_CLUSTER_IP_RANGE</span> \</span><br><span class="line">          <span class="variable">$INSECURE_BIND_ADDRESS</span> \</span><br><span class="line">          <span class="variable">$INSECURE_PORT</span> \</span><br><span class="line">          <span class="variable">$BIND_ADDRESS</span> \</span><br><span class="line">          <span class="variable">$SECURE_PORT</span> \</span><br><span class="line">          <span class="variable">$AUTHORIZATION_MODE</span> \</span><br><span class="line">          <span class="variable">$AUTHORIZATION_FILE</span> \</span><br><span class="line">          <span class="variable">$BASIC_AUTH_FILE</span> \</span><br><span class="line">          <span class="variable">$KUBE_APISERVER_OPTS</span></span><br><span class="line">Restart=on-failure</span><br></pre></td></tr></table></figure><h2 id="设置kube-apiserver配置文件"><a href="#设置kube-apiserver配置文件" class="headerlink" title="设置kube-apiserver配置文件"></a>设置kube-apiserver配置文件</h2><p><strong>事实上只要配置了ETCD_SERVERS一项其它全留空也足以让kube-apiserver正常跑起来了。ETCD_SERVERS也并不需要将ETCD集群的所有结点服务地址写上，但至少要有一个。</strong></p><p>如果不需要使用 https 进行认证和授权，则可以不配置BIND_ADDRESS、SECURE_PORT、AUTHORIZATION_MODE、AUTHORIZATION_FILE和BASIC_AUTH_FILE。关于安全认证和授权在k8s官方文档里给出了很详细的介绍（authorization   <a href="http://kubernetes.io/v1.1/docs/admin/authorization.html" target="_blank" rel="noopener">戳这里</a> ，authentication   <a href="http://kubernetes.io/v1.1/docs/admin/authentication.html" target="_blank" rel="noopener">戳这里</a> ），本文的配置方式以ABAC（用户配置认证策略）进行认证，同时明文存储了密码。两个配置文件的内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># /opt/domeos/openxxs/k8s-1.1.3-flannel/authorization的内容：</span></span><br><span class="line">&#123;<span class="string">"user"</span>: <span class="string">"admin"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># /opt/domeos/openxxs/k8s-1.1.3-flannel/authentication.csv的内容，共三列（密码，用户名，用户ID）：</span></span><br><span class="line">admin,admin,adminID</span><br></pre></td></tr></table></figure><p> /etc/sysconfig/kube-apiserver 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># configure file for kube-apiserver</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --etcd-servers</span></span><br><span class="line">ETCD_SERVERS=<span class="string">'--etcd-servers=http://10.11.151.97:4012,http://10.11.151.100:4012,http://10.11.151.101:4012'</span></span><br><span class="line"><span class="comment"># --log-dir</span></span><br><span class="line">LOG_DIR=<span class="string">'/opt/domeos/openxxs/k8s-1.1.3-flannel/logs'</span></span><br><span class="line"><span class="comment"># --service-cluster-ip-range</span></span><br><span class="line">SERVICE_CLUSTER_IP_RANGE=<span class="string">'--service-cluster-ip-range=172.16.0.0/16'</span></span><br><span class="line"><span class="comment"># --insecure-bind-address</span></span><br><span class="line">INSECURE_BIND_ADDRESS=<span class="string">'--insecure-bind-address=0.0.0.0'</span></span><br><span class="line"><span class="comment"># --insecure-port</span></span><br><span class="line">INSECURE_PORT=<span class="string">'--insecure-port=8080'</span></span><br><span class="line"><span class="comment"># --bind-address</span></span><br><span class="line">BIND_ADDRESS=<span class="string">'--bind-address=0.0.0.0'</span></span><br><span class="line"><span class="comment"># --secure-port</span></span><br><span class="line">SECURE_PORT=<span class="string">'--secure-port=6443'</span></span><br><span class="line"><span class="comment"># --authorization-mode</span></span><br><span class="line">AUTHORIZATION_MODE=<span class="string">'--authorization-mode=ABAC'</span></span><br><span class="line"><span class="comment"># --authorization-policy-file</span></span><br><span class="line">AUTHORIZATION_FILE=<span class="string">'--authorization-policy-file=/opt/domeos/openxxs/k8s-1.1.3-flannel/authorization'</span></span><br><span class="line"><span class="comment"># --basic-auth-file</span></span><br><span class="line">BASIC_AUTH_FILE=<span class="string">'--basic-auth-file=/opt/domeos/openxxs/k8s-1.1.3-flannel/authentication.csv'</span></span><br><span class="line"><span class="comment"># other parameters</span></span><br><span class="line">KUBE_APISERVER_OPTS=<span class="string">''</span></span><br></pre></td></tr></table></figure><h2 id="创建kube-service"><a href="#创建kube-service" class="headerlink" title="创建kube-service"></a>创建kube-service</h2><p>/lib/systemd/system/kube-controller.service 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=kube-controller-manager</span><br><span class="line">After=kube-apiserver.service</span><br><span class="line">Wants=kube-apiserver.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/etc/sysconfig/kube-controller</span><br><span class="line">ExecStart=/opt/domeos/openxxs/k8s-1.1.3-flannel/kube-controller-manager <span class="variable">$KUBE_MASTER</span> \</span><br><span class="line">          <span class="variable">$LOG_DIR</span> \</span><br><span class="line">          <span class="variable">$CLOUD_PROVIDER</span> \</span><br><span class="line">          <span class="variable">$KUBE_CONTROLLER_OPTS</span></span><br><span class="line">Restart=on-failure</span><br></pre></td></tr></table></figure><h2 id="设置kube-contr配置文件"><a href="#设置kube-contr配置文件" class="headerlink" title="设置kube-contr配置文件"></a>设置kube-contr配置文件</h2><p>/etc/sysconfig/kube-controller 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># configure file for kube-controller-manager</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --master</span></span><br><span class="line">KUBE_MASTER=<span class="string">'--master=http://10.11.151.97:8080'</span></span><br><span class="line"><span class="comment"># --log-dir</span></span><br><span class="line">LOG_DIR=<span class="string">'--log-dir=/opt/domeos/openxxs/k8s-1.1.3-flannel/logs'</span></span><br><span class="line"><span class="comment"># --cloud-provider</span></span><br><span class="line">CLOUD_PROVIDER=<span class="string">'--cloud-provider='</span></span><br><span class="line"><span class="comment"># other parameters</span></span><br><span class="line">KUBE_CONTROLLER_OPTS=<span class="string">''</span></span><br></pre></td></tr></table></figure><h2 id="创建kube-sch-Service"><a href="#创建kube-sch-Service" class="headerlink" title="创建kube-sch.Service"></a>创建kube-sch.Service</h2><p>/lib/systemd/system/kube-scheduler.service 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=kube-scheduler</span><br><span class="line">After=kube-apiserver.service</span><br><span class="line">Wants=kube-apiserver.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/etc/sysconfig/kube-scheduler</span><br><span class="line">ExecStart=/opt/domeos/openxxs/k8s-1.1.3-flannel/kube-scheduler <span class="variable">$KUBE_MASTER</span> \</span><br><span class="line">          <span class="variable">$LOG_DIR</span> \</span><br><span class="line">          <span class="variable">$KUBE_SCHEDULER_OPTS</span></span><br><span class="line">Restart=on-failure</span><br></pre></td></tr></table></figure><h2 id="设置kube-scheduler配置文件"><a href="#设置kube-scheduler配置文件" class="headerlink" title="设置kube-scheduler配置文件"></a>设置kube-scheduler配置文件</h2><p>/etc/sysconfig/kube-scheduler 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># configure file for kube-scheduler</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --master</span></span><br><span class="line">KUBE_MASTER=<span class="string">'--master=http://10.11.151.97:8080'</span></span><br><span class="line"><span class="comment"># --log-dir</span></span><br><span class="line">LOG_DIR=<span class="string">'--log-dir=/opt/domeos/openxxs/k8s-1.1.3-flannel/logs'</span></span><br><span class="line"><span class="comment"># other parameters</span></span><br><span class="line">KUBE_SCHEDULER_OPTS=<span class="string">''</span></span><br></pre></td></tr></table></figure><h2 id="启动KubMaster"><a href="#启动KubMaster" class="headerlink" title="启动KubMaster"></a>启动KubMaster</h2><p>三个组件启动是有顺序，必须等kube-apiserver正常启动之后再启动kube-controller-manager然后再启动kube-scheduler。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.启动kube-apiserver </span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-apiserver</span><br><span class="line"><span class="comment"># 启动完成后查看下服务状态和日志是否正常</span></span><br><span class="line">systemctl status -l kube-apiserver</span><br><span class="line"><span class="comment">#还可以通过如下命令查看kube-apiserver是否正常，正常则返回'ok'</span></span><br><span class="line">curl -L http://10.11.151.97:8080/healthz</span><br><span class="line"></span><br><span class="line"><span class="comment">#2.启动kube-controller-manager</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-controller</span><br><span class="line"><span class="comment"># 启动完成后查看下服务状态和日志是否正常</span></span><br><span class="line">systemctl status -l kube-controller</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.启动kube-scheduler</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-scheduler</span><br><span class="line"><span class="comment"># 启动完成后查看下服务状态和日志是否正常</span></span><br><span class="line">systemctl status -l kube-scheduler</span><br></pre></td></tr></table></figure><h1 id="安装KubNode"><a href="#安装KubNode" class="headerlink" title="安装KubNode"></a>安装KubNode</h1><h2 id="flannel配置写入Etcd"><a href="#flannel配置写入Etcd" class="headerlink" title="flannel配置写入Etcd"></a>flannel配置写入Etcd</h2><p>集群中flannel的可用子网段和网络包封装方式等配置信息需要提前写入ETCD中</p><p>写入ETCD中的key为 /flannel/network/config ，后面配置flannel服务时需要用到。配置项中的 Network 为整个k8s集群可用的子网段；SubnetLen为每个Node结点的子网掩码长度；Type表示封包的方式，推荐使用vxlan，此外还有udp等方式。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L http://10.11.151.97:4012/v2/keys/flannel/network/config -XPUT -d value=<span class="string">"&#123;\"Network\":\"172.16.0.0/16\",\"SubnetLen\":25,\"Backend\":&#123;\"Type\":\"vxlan\",\"VNI\":1&#125;&#125;"</span></span><br></pre></td></tr></table></figure><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><p>修改配置文件 /etc/sysconfig/docker,有可能不在这个目录,可以去/etc下面找一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用yum安装,或者下载源码安装docker</span></span><br><span class="line">yum install docker</span><br><span class="line"><span class="comment">#修改docker配置文件</span></span><br><span class="line">DOCKER_OPTS=<span class="string">"-g /opt/domeos/openxxs/k8s-1.1.3-flannel/docker"</span></span><br><span class="line">INSECURE_REGISTRY=<span class="string">"--insecure-registry 10.11.150.76:5000"</span></span><br></pre></td></tr></table></figure><h2 id="安装flannel"><a href="#安装flannel" class="headerlink" title="安装flannel"></a>安装flannel</h2><p><strong>这里需要特别注意，如果对机子的网卡进行了一些修改，用于连接外网的网卡名比较特殊（比如机子用的是万兆网卡，网卡名即为p6p1），启动flannel时会报”Failed to get default interface: Unable to find default route”错误，<span style="color:red;">则FLANNEL_OPTIONS需要添加参数：iface=&lt;用于连接的网卡名&gt;。例如100机的网卡名为em1则 iface=em1；万兆网卡的网卡名为p6p1则 iface=p6p1。</span></strong></p><p>修改配置文件 /etc/sysconfig/flanneld,有可能不在这个目录,可以去/etc下面找一下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用yum安装,或者下载源码安装flannel</span></span><br><span class="line">yum install flanneld</span><br><span class="line"><span class="comment">#修改flannel配置文件</span></span><br><span class="line">FLANNEL_ETCD=<span class="string">"http://10.11.151.97:4012"</span></span><br><span class="line">FLANNEL_ETCD_KEY=<span class="string">"/flannel/network"</span></span><br><span class="line">FLANNEL_OPTIONS=<span class="string">"-iface=em1"</span></span><br></pre></td></tr></table></figure><h2 id="创建kube-proxy-service"><a href="#创建kube-proxy-service" class="headerlink" title="创建kube-proxy.service"></a>创建kube-proxy.service</h2><p>/lib/systemd/system/kube-proxy.service 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=kube-proxy</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/etc/sysconfig/kube-proxy</span><br><span class="line">ExecStart=/opt/domeos/openxxs/k8s-1.1.3-flannel/kube-proxy <span class="variable">$KUBE_MASTER</span> \</span><br><span class="line">          <span class="variable">$PROXY_MODE</span> \</span><br><span class="line">          <span class="variable">$LOG_DIR</span> \</span><br><span class="line">          <span class="variable">$KUBE_PROXY_OPTS</span></span><br><span class="line">Restart=on-failure</span><br></pre></td></tr></table></figure><h2 id="设置kube-proxy配置文件"><a href="#设置kube-proxy配置文件" class="headerlink" title="设置kube-proxy配置文件"></a>设置kube-proxy配置文件</h2><p>/etc/sysconfig/kube-proxy  文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># configure file for kube-proxy</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --master</span></span><br><span class="line">KUBE_MASTER=<span class="string">'--master=http://10.11.151.97:8080'</span></span><br><span class="line"><span class="comment"># --proxy-mode</span></span><br><span class="line">PROXY_MODE=<span class="string">'--proxy-mode=iptables'</span></span><br><span class="line"><span class="comment"># --log-dir</span></span><br><span class="line">LOG_DIR=<span class="string">'--log-dir=/opt/domeos/openxxs/k8s-1.1.3-flannel/logs'</span></span><br><span class="line"><span class="comment"># other parameters</span></span><br><span class="line">KUBE_PROXY_OPTS=<span class="string">''</span></span><br></pre></td></tr></table></figure><h2 id="创建kubelet-service"><a href="#创建kubelet-service" class="headerlink" title="创建kubelet.service"></a>创建kubelet.service</h2><p>/lib/systemd/system/kubelet.service 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=kubelet</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/etc/sysconfig/kubelet</span><br><span class="line">ExecStart=/opt/domeos/openxxs/k8s-1.1.3-flannel/kubelet <span class="variable">$API_SERVERS</span> \</span><br><span class="line">          <span class="variable">$ADDRESS</span> \</span><br><span class="line">          <span class="variable">$HOSTNAME_OVERRIDE</span> \</span><br><span class="line">          <span class="variable">$ALLOW_PRIVILEGED</span> \</span><br><span class="line">          <span class="variable">$POD_INFRA</span> \</span><br><span class="line">          <span class="variable">$CLUSTER_DNS</span> \</span><br><span class="line">          <span class="variable">$CLUSTER_DOMAIN</span> \</span><br><span class="line">          <span class="variable">$MAX_PODS</span> \</span><br><span class="line">          <span class="variable">$LOG_DIR</span> \</span><br><span class="line">          <span class="variable">$KUBELET_OPTS</span></span><br><span class="line">Restart=on-failure</span><br></pre></td></tr></table></figure><h2 id="设置kubelet配置文件"><a href="#设置kubelet配置文件" class="headerlink" title="设置kubelet配置文件"></a>设置kubelet配置文件</h2><p>/etc/sysconfig/kubelet 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># configure file for kubelet</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># --api-servers</span></span><br><span class="line">API_SERVERS=<span class="string">'--api-servers=http://10.11.151.97:8080'</span></span><br><span class="line"><span class="comment"># --address</span></span><br><span class="line">ADDRESS=<span class="string">'--address=0.0.0.0'</span></span><br><span class="line"><span class="comment"># --hostname-override</span></span><br><span class="line">HOSTNAME_OVERRIDE=<span class="string">''</span></span><br><span class="line"><span class="comment"># --allow-privileged</span></span><br><span class="line">ALLOW_PRIVILEGED=<span class="string">'--allow-privileged=false'</span></span><br><span class="line"><span class="comment"># --pod-infra-container-image</span></span><br><span class="line">POD_INFRA=<span class="string">'--pod-infra-container-image=10.11.150.76:5000/kubernetes/pause:latest'</span></span><br><span class="line"><span class="comment"># --cluster-dns</span></span><br><span class="line">CLUSTER_DNS=<span class="string">'--cluster-dns=172.16.40.1'</span></span><br><span class="line"><span class="comment"># --cluster-domain</span></span><br><span class="line">CLUSTER_DOMAIN=<span class="string">'--cluster-domain=domeos.sohu'</span></span><br><span class="line"><span class="comment"># --max-pods</span></span><br><span class="line">MAX_PODS=<span class="string">'--max-pods=70'</span></span><br><span class="line"><span class="comment"># --log-dir</span></span><br><span class="line">LOG_DIR=<span class="string">'--log-dir=/opt/domeos/openxxs/k8s-1.1.3-flannel/logs'</span></span><br><span class="line"><span class="comment"># other parameters</span></span><br><span class="line">KUBELET_OPTS=<span class="string">''</span></span><br></pre></td></tr></table></figure><p>这里的 CLUSTER_DNS 和 CLUSTER_DOMAIN 两项设置与集群内使用的DNS相关，具体参考《在k8s中搭建可解析hostname的DNS服务》。每个pod启动时都要先启动一个/kubernetes/pause:latest容器来进行一些基本的初始化工作，该镜像默认下载地址为 gcr.io/google_containers/pause:latest，可通过POD_INFRA参数来更改下载地址。由于GWF的存在可能会连接不上该资源，所以可以将该镜像下载下来之后再push到自己的docker本地仓库中，启动 kubelet 时从本地仓库中读取即可。MAX_PODS参数表示一个节点最多可启动的pod数量。</p><h2 id="启动Kubernetes-Node"><a href="#启动Kubernetes-Node" class="headerlink" title="启动Kubernetes Node"></a>启动Kubernetes Node</h2><h3 id="启动flanneld"><a href="#启动flanneld" class="headerlink" title="启动flanneld"></a>启动flanneld</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start flanneld</span><br><span class="line">systemctl status -l flanneld</span><br></pre></td></tr></table></figure><h3 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl status -l docker</span><br></pre></td></tr></table></figure><h3 id="查看Docker是否被Flannel托管"><a href="#查看Docker是否被Flannel托管" class="headerlink" title="查看Docker是否被Flannel托管"></a>查看Docker是否被Flannel托管</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#命令</span></span><br><span class="line">ps aux | grep docker</span><br><span class="line"><span class="comment">#显示结果</span></span><br><span class="line">/usr/bin/docke daemon -g /opt/domeos/openxxs/k8s-1.1.3-flannel/docker --bip=172.16.17.129/25 --ip-masq=<span class="literal">true</span> --mtu=1450 --insecure-registry 10.11.150.76:5000</span><br><span class="line"><span class="comment">#可以看到docker启动后被加上了flanneld的相关配置项了（bip, ip-masq 和 mtu）</span></span><br><span class="line"><span class="comment">#如果在主机上进行了多次k8s的配置，则需要对网卡进行清理。未启动flanneld和docker服务的情形下，通过 ifconfig 查看网卡，如果存在docker0、flannel.0或flannel.1</span></span><br><span class="line"><span class="comment">#使用如下命令进行删除</span></span><br><span class="line">ip link delete docker0</span><br><span class="line">ip link delete flannel.1</span><br><span class="line"><span class="comment">#如果没有出现(bip,ip-masq,mtu)则需要对网卡进行清理,并重新启动flanneld和docker</span></span><br></pre></td></tr></table></figure><h3 id="启动kube-proxy"><a href="#启动kube-proxy" class="headerlink" title="启动kube-proxy"></a>启动kube-proxy</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-proxy</span><br><span class="line">systemctl status -l kube-proxy</span><br></pre></td></tr></table></figure><h3 id="启动kubelet"><a href="#启动kubelet" class="headerlink" title="启动kubelet"></a>启动kubelet</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kubelet</span><br><span class="line">systemctl status -l kubelet</span><br></pre></td></tr></table></figure><h1 id="测试Kubernetes"><a href="#测试Kubernetes" class="headerlink" title="测试Kubernetes"></a>测试Kubernetes</h1><h2 id="查看主机状态"><a href="#查看主机状态" class="headerlink" title="查看主机状态"></a>查看主机状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">./kubectl --server=10.11.151.97:8080 get nodes</span><br><span class="line"><span class="comment">#返回：</span></span><br><span class="line">NAME         LABELS                              STATUS    AGE</span><br><span class="line">tc-151-100   kubernetes.io/hostname=tc-151-100   Ready     9m</span><br><span class="line">tc-151-101   kubernetes.io/hostname=tc-151-101   Ready     17h</span><br><span class="line"><span class="comment">#说明：结点状态为Ready，说明100和101成功注册进k8s集群中</span></span><br></pre></td></tr></table></figure><h2 id="创建pod"><a href="#创建pod" class="headerlink" title="创建pod"></a>创建pod</h2><p>创建test.yaml文件，内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ReplicationController</span><br><span class="line">metadata:</span><br><span class="line">    name: <span class="built_in">test</span>-1</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: <span class="built_in">test</span>-1</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: iperf</span><br><span class="line">          image: 10.11.150.76:5000/openxxs/iperf:1.2</span><br><span class="line">      nodeSelector:</span><br><span class="line">        kubernetes.io/hostname: tc-151-100</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ReplicationController</span><br><span class="line">metadata:</span><br><span class="line">    name: <span class="built_in">test</span>-2</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: <span class="built_in">test</span>-2</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: iperf</span><br><span class="line">          image: 10.11.150.76:5000/openxxs/iperf:1.2</span><br><span class="line">      nodeSelector:</span><br><span class="line">        kubernetes.io/hostname: tc-151-100</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ReplicationController</span><br><span class="line">metadata:</span><br><span class="line">    name: <span class="built_in">test</span>-3</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: <span class="built_in">test</span>-3</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: iperf</span><br><span class="line">          image: 10.11.150.76:5000/openxxs/iperf:1.2</span><br><span class="line">      nodeSelector:</span><br><span class="line">        kubernetes.io/hostname: tc-151-101</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ReplicationController</span><br><span class="line">metadata:</span><br><span class="line">    name: <span class="built_in">test</span>-4</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: <span class="built_in">test</span>-4</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: iperf</span><br><span class="line">          image: 10.11.150.76:5000/openxxs/iperf:1.2</span><br><span class="line">      nodeSelector:</span><br><span class="line">        kubernetes.io/hostname: tc-151-101</span><br></pre></td></tr></table></figure><p>通过kubectl和test.yaml创建pod</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">./kubectl --server=10.11.151.97:8080 create -f test.yaml </span><br><span class="line"><span class="comment">#返回：</span></span><br><span class="line">replicationcontroller <span class="string">"test-1"</span> created</span><br><span class="line">replicationcontroller <span class="string">"test-2"</span> created</span><br><span class="line">replicationcontroller <span class="string">"test-3"</span> created</span><br><span class="line">replicationcontroller <span class="string">"test-4"</span> created</span><br><span class="line"><span class="comment">#说明：四个rc创建成功</span></span><br><span class="line"></span><br><span class="line">./kubectl --server=10.11.151.97:8080 get pods</span><br><span class="line"><span class="comment">#返回：</span></span><br><span class="line">NAME           READY       STATUS        RESTARTS      AGE</span><br><span class="line"><span class="built_in">test</span>-1-vrt0s    1/1        Running          0          8m</span><br><span class="line"><span class="built_in">test</span>-2-uwtj7    1/1        Running          0          8m</span><br><span class="line"><span class="built_in">test</span>-3-59562    1/1        Running          0          8m</span><br><span class="line"><span class="built_in">test</span>-4-m2rqw    1/1        Running          0          8m</span><br><span class="line"><span class="comment">#说明：四个pod成功启动状态正常</span></span><br></pre></td></tr></table></figure><p>获取四个pod对应container的IP地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">./kubectl --server=10.11.151.97:8080 describe pod <span class="built_in">test</span>-1-vrt0s</span><br><span class="line"><span class="comment">#返回：</span></span><br><span class="line"><span class="comment">#......</span></span><br><span class="line">IP     172.16.42.4</span><br><span class="line"><span class="comment">#......</span></span><br><span class="line"><span class="comment">#说明：该命令返回pod的详细信息，其中的IP字段即为该pod在集群内的IP地址，也是container的IP地址</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>位运算实现用户留存率</title>
      <link href="/article/3167685568.html"/>
      <url>/article/3167685568.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>统计留存率之前先弄清一下留存率的概念，百度百科中是这么说的：<br>用户在某段时间内开始使用应用，经过一段时间后，仍然继续使用应用的被认作是留存；这部分用户占当时新增用户的比例即是留存率，会按照每隔1单位时 间（例日、周、月）来进行统计。顾名思义，留存指的就是“有多少用户留下来了”。留存用户和留存率体现了应用的质量和保留用户的能力。<br>简单点说，第一天新增加了100个用户，第二天这100个人有50个还有登录，第三天这100个人还有30个有登录。。。依次类推<br>那次日留存率为50%，三日留存为30% 。<br>在统计系统中经常需要统计用户留存率，这里整理下用户留存率统计的几种实现方式。</p><a id="more"></a><h1 id="通过最后登录时间实现"><a href="#通过最后登录时间实现" class="headerlink" title="通过最后登录时间实现"></a>通过最后登录时间实现</h1><p>有一张唯一表来记录新增用户，这张表至少包含这三个字段: uid, reg_time, last_visited_time。用户每次访问后更新最后访问时间（last_visited_time），假设3.6号新注册100个用户，需要统 计次日留存，则在3.8号凌晨统计reg_time为3.6并且last_visited_time为3.7号即可，参考SQL：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> TBL_NAME <span class="keyword">WHERE</span> <span class="built_in">DATE</span>(reg_time) = <span class="string">'2014-03-06'</span> <span class="keyword">AND</span> <span class="built_in">DATE</span>(last_visited_time) = <span class="string">'2014-03-07'</span></span><br></pre></td></tr></table></figure><p>实现起来很简单，但问题也很明显，如果恰好这些用户0点有访问，且先一步更新了访问时间，留存率则记录不到了，这个对整个的结果偏差不会太大，先忽 略。有一个更明显的问题就是无法重复统计，如果脚本出错或者需要重新统计则无法实现。当然好处也有，就是统计方便，同时也方便新增N日留存。</p><h1 id="通过建立独立的字段实现"><a href="#通过建立独立的字段实现" class="headerlink" title="通过建立独立的字段实现"></a>通过建立独立的字段实现</h1><p>独立的字段可以这么设计，uid,reg_time,day_2,day_3,day_4…等等，当用户第二天有访问时更新day_2的字段为1，第三日访问更新day_3为1，该系列字段默认为0。同样的统计次日留存，则SQL应该是这样子：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*) <span class="keyword">FROM</span> TBL_NAME <span class="keyword">WHERE</span> <span class="built_in">DATE</span>(reg_time) = <span class="string">'2014-03-06'</span> <span class="keyword">AND</span> day_2 = <span class="number">1</span></span><br></pre></td></tr></table></figure><p>该方法可以重复统计了，但又不方便扩展了，如果当前没有考虑到15天流程，则需要修改表结构，新增day_15才行。</p><h1 id="通过位运算实现"><a href="#通过位运算实现" class="headerlink" title="通过位运算实现"></a>通过位运算实现</h1><p>上面的数据表中记录的值就是很多的0和1，可以用这些二进制的0和1来表示当天是否有访问过，1表示有访问过，0表示未访问过。设计表中有这几个字段，uid,reg_time,retension,假设留存用retention记录，则<br>第一天访问 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 对应十进制的1，retention记录为1<br>第二天访问 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 第二天有访问后retention更新为3<br>第四天访问 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1 第三天没有访问，第四天访问后rentention更新为11<br>依次类推，接下来就是计算该天的留存，以次日留存为例。将次日的数据与第2位为1其他位为0的值做按位与操作<br>    0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1<br>    &amp;<br>    0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0<br>    =<br>    0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0<br>按位与是将都为1的设置为1，如果用整数来表示，求次日留存是 3 &amp; 2 ，如果结果为2则表示次日有访问过，如果不为2结果为0则说明没有访问过。所以求第N天的sql应该是（N表示第N天留存，如第3天用第3位来表示就是2的2次方）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT COUNT(*) FROM TBL_NAME WHERE DATE(reg_time) = &apos;XXXX-XX-XX&apos; AND retention &amp; 2^(N-1)</span><br></pre></td></tr></table></figure><p>当然这里的第几天实际表示第几日留存可以自己定，如果第10位表示30日留存，则将retention与2^9求按位与即可求得30日留存。<br>这里解决了读的问题，还有写的问题，首次注册时值为0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 ,第二天有访问则将前一天的值与第二位为1其他位为0的做按位或操作即可，按位或是将其中任何一个为 1 的位设为 1<br>    0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1<br>    |<br>    0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0<br>    =<br>    0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1<br>第三天没有访问，第四天访问则是<br>    0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1<br>    |<br>    0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0<br>    =<br>    0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 1<br>用SQL来表示就是(N表示第N天访问)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE TBL_NAME SET retention = retention | 2^(N-1) WHERE uid = &apos;XX&apos;</span><br></pre></td></tr></table></figure><p>而且该更新操作在当天是可以重复操作的，因为按位或只需要有一个为1即可，第2天第一次更新1 | 2 = 3，第二次更新3 | 2 = 3。可见值是相同的。<br>听到这种方案后也怀疑效率问题，在1000w数据中统计速度与reg_time中索引时间差不多，所以问题不大；一个整形4个字节32位，可以表示32个不同的留存，整形不够也可以用长整型8个字节的。总体看来该方法可扩展，可重新统计，所以可行。<br>位运算之前只在权限中见过，这里用法也是一种不错的方式，期待更多的思考，下面是位运算的基本操作：</p><img src="/article/3167685568/93d58b1b8cb950e860d514b6f4e19ff6.jpg" title="位运算">]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之堆-Heap</title>
      <link href="/article/1832317452.html"/>
      <url>/article/1832317452.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>SPL，PHP 标准库（Standard PHP Library） ，从 PHP 5.0 起内置的组件和接口，且从 PHP5.3 已逐渐的成熟。SPL 在所有的 PHP5 开发环境中被内置，同时无需任何设置。</p><p>对于理解堆以及实现堆很重要的一点就是明白堆的表现形式，堆是树的一种，所以很自然的想到使用链表来实现堆，其实不然，由于我们需要频繁的对堆进行增加删除，所以一般堆的底层都是通过数组来实现，那么就有一个问题：数组如何表现出堆的结构呢？这里就有一个规则，即数组的第一个元素（即下标为0的元素）为堆的根节点，其他节点按照堆结构自上而下，自左而右依次表示为数组中的元素，这是一种既非前序也非后序，更非中序的遍历树的方式。</p><a id="more"></a><h1 id="堆原理图"><a href="#堆原理图" class="headerlink" title="堆原理图"></a>堆原理图</h1><img src="/article/1832317452/cf677d129fcf9912df6f2e7a1ee32a2c.jpg" title="原理图"><h1 id="SplHeap"><a href="#SplHeap" class="headerlink" title="SplHeap"></a>SplHeap</h1><p>堆、大头堆、小头堆和优先队列是同一类数据结构，都是基于堆的实现。 堆是一颗完全二叉树，常用于管理算法执行过程中的信息，应用场景包括堆排序，优先队列等。 堆分为大头堆和小头堆，在定义上的区别是父节点的值是大于还是小于子节点的值， 在SPL中，它们的区别以比较函数的不同体现，而比较函数的不同仅仅体现在比较时交换了下位置和函数名的不同。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://php.net/manual/zh/class.splheap.php" target="_blank" rel="noopener">PHP-SPL-SplHeap</a></p><h2 id="SplHeap类说明"><a href="#SplHeap类说明" class="headerlink" title="SplHeap类说明"></a>SplHeap类说明</h2><p>PHP的堆以数组的形式存储数据，默认初始化分配64个元素的内存空间，新元素插入时，如果当前元素的个数总和超过分配的值，则会将其空间扩大一倍，即*2。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> SplHeap implements Iterator , Countable &#123;</span><br><span class="line">    <span class="comment">/* 方法 */</span></span><br><span class="line">    <span class="keyword">public</span> __construct ( void )</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">protected</span> int compare ( mixed $value1 , mixed $value2 )</span><br><span class="line">    <span class="keyword">public</span> int count ( void )</span><br><span class="line">    <span class="keyword">public</span> mixed current ( void )</span><br><span class="line">    <span class="keyword">public</span> mixed extract ( void )</span><br><span class="line">    <span class="keyword">public</span> void insert ( mixed $value )</span><br><span class="line">    <span class="keyword">public</span> bool isEmpty ( void )</span><br><span class="line">    <span class="keyword">public</span> mixed key ( void )</span><br><span class="line">    <span class="keyword">public</span> void next ( void )</span><br><span class="line">    <span class="keyword">public</span> void recoverFromCorruption ( void )</span><br><span class="line">    <span class="keyword">public</span> void rewind ( void )</span><br><span class="line">    <span class="keyword">public</span> mixed top ( void )</span><br><span class="line">    <span class="keyword">public</span> bool valid ( void )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SplHeap使用"><a href="#SplHeap使用" class="headerlink" title="SplHeap使用"></a>SplHeap使用</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySimpleHeap</span> <span class="keyword">extends</span> <span class="title">SplHeap</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//compare()方法用来比较两个元素的大小，绝对他们在堆中的位置</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">compare</span><span class="params">( $value1, $value2 )</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ( $value1 - $value2 );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">$obj = <span class="keyword">new</span> MySimpleHeap();</span><br><span class="line">$obj-&gt;insert( <span class="number">4</span> );</span><br><span class="line">$obj-&gt;insert( <span class="number">8</span> );</span><br><span class="line">$obj-&gt;insert( <span class="number">1</span> );</span><br><span class="line">$obj-&gt;insert( <span class="number">0</span> );</span><br><span class="line"> </span><br><span class="line"><span class="keyword">echo</span> $obj-&gt;top();  <span class="comment">//8</span></span><br><span class="line"><span class="keyword">echo</span> $obj-&gt;count(); <span class="comment">//4</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">foreach</span>( $obj <span class="keyword">as</span> $number ) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $number.PHP_EOL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="number">84</span></span><br><span class="line"><span class="number">8</span> <span class="number">4</span> <span class="number">1</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="SplMaxHeap-最大堆-、SplMinHeap-最小堆"><a href="#SplMaxHeap-最大堆-、SplMinHeap-最小堆" class="headerlink" title="SplMaxHeap(最大堆)、SplMinHeap(最小堆)"></a>SplMaxHeap(最大堆)、SplMinHeap(最小堆)</h1><p>SplMaxHeap和SplMinHeap都是SplHeap类的子类，直接继承了SplHeap的所有方法和属性，各自实现了自己的compare方法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$minHeap = <span class="keyword">new</span> SplMinHeap();  </span><br><span class="line">$maxHeap = <span class="keyword">new</span> SplMaxHeap();  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">1</span>; $i&lt;=<span class="number">10</span>; $i++) &#123;  </span><br><span class="line">    $minHeap-&gt;insert(rand(<span class="number">1</span>, <span class="number">1000</span>));  </span><br><span class="line">    $maxHeap-&gt;insert(rand(<span class="number">1</span>, <span class="number">1000</span>));  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">print_r(<span class="string">"min heap!"</span>);  </span><br><span class="line">print_r($minHeap);  </span><br><span class="line"><span class="keyword">foreach</span> ($minHeap <span class="keyword">as</span> $value) &#123;  </span><br><span class="line">    print_r($value);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">print_r(<span class="string">"max heap!"</span>);  </span><br><span class="line">print_r($maxHeap);  </span><br><span class="line"><span class="keyword">foreach</span> ($maxHeap <span class="keyword">as</span> $value) &#123;  </span><br><span class="line">    print_r($value);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/article/1832317452/400f6a02d1b4f7a11fc1503981d5ce2d.png">]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> SPL标准库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之队列-Queue</title>
      <link href="/article/1490765381.html"/>
      <url>/article/1490765381.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>SPL，PHP 标准库（Standard PHP Library） ，从 PHP 5.0 起内置的组件和接口，且从 PHP5.3 已逐渐的成熟。SPL 在所有的 PHP5 开发环境中被内置，同时无需任何设置。</p><a id="more"></a><h1 id="队列原理图"><a href="#队列原理图" class="headerlink" title="队列原理图"></a>队列原理图</h1><img src="/article/1490765381/5eb305bda90d7af812900948d43e2545.png" title="原理图"><h1 id="SplQueue"><a href="#SplQueue" class="headerlink" title="SplQueue"></a>SplQueue</h1><p>队列是一种先进先出(FIFO)的数据结构。使用队列时插入在一端进行而删除在另一端进行。<br>PHP SPL中的SplQueue也是继承自SplDoublyLinkedList,并有自己的方法</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://php.net/manual/zh/class.splqueue.php" target="_blank" rel="noopener">PHP-SPL-SplQueue</a></p><h2 id="SplQueue类说明"><a href="#SplQueue类说明" class="headerlink" title="SplQueue类说明"></a>SplQueue类说明</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">SplQueue extends SplDoublyLinkedList implements Iterator , ArrayAccess , Countable &#123;</span><br><span class="line">    <span class="comment">/* 方法 */</span></span><br><span class="line">    __construct ( void )</span><br><span class="line">    mixed dequeue ( void )</span><br><span class="line">    void enqueue ( mixed $value )</span><br><span class="line">    void setIteratorMode ( int $mode )</span><br><span class="line">    <span class="comment">/* 继承的方法 */</span></span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::add ( mixed $index , mixed $newval )</span><br><span class="line">    <span class="keyword">public</span> mixed SplDoublyLinkedList::bottom ( void )</span><br><span class="line">    <span class="keyword">public</span> int SplDoublyLinkedList::count ( void )</span><br><span class="line">    <span class="keyword">public</span> mixed SplDoublyLinkedList::current ( void )</span><br><span class="line">    <span class="keyword">public</span> int SplDoublyLinkedList::getIteratorMode ( void )</span><br><span class="line">    <span class="keyword">public</span> bool SplDoublyLinkedList::isEmpty ( void )</span><br><span class="line">    <span class="keyword">public</span> mixed SplDoublyLinkedList::key ( void )</span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::next ( void )</span><br><span class="line">    <span class="keyword">public</span> bool SplDoublyLinkedList::offsetExists ( mixed $index )</span><br><span class="line">    <span class="keyword">public</span> mixed SplDoublyLinkedList::offsetGet ( mixed $index )</span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::offsetSet ( mixed $index , mixed $newval )</span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::offsetUnset ( mixed $index )</span><br><span class="line">    <span class="keyword">public</span> mixed SplDoublyLinkedList::pop ( void )</span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::prev ( void )</span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::push ( mixed $value )</span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::rewind ( void )</span><br><span class="line">    <span class="keyword">public</span> string SplDoublyLinkedList::serialize ( void )</span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::setIteratorMode ( int $mode )</span><br><span class="line">    <span class="keyword">public</span> mixed SplDoublyLinkedList::shift ( void )</span><br><span class="line">    <span class="keyword">public</span> mixed SplDoublyLinkedList::top ( void )</span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::unserialize ( string $serialized )</span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::unshift ( mixed $value )</span><br><span class="line">    <span class="keyword">public</span> bool SplDoublyLinkedList::valid ( void )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SplQueue使用"><a href="#SplQueue使用" class="headerlink" title="SplQueue使用"></a>SplQueue使用</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$obj = <span class="keyword">new</span> SplQueue();</span><br><span class="line"></span><br><span class="line">$obj -&gt; enqueue(<span class="string">'a'</span>);</span><br><span class="line">$obj -&gt; enqueue(<span class="string">'b'</span>);</span><br><span class="line">$obj -&gt; enqueue(<span class="string">'c'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'bottom:'</span>.$obj -&gt; bottom().PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'top:'</span>.$obj -&gt; top();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//队列里的offset=0是指向bottom位置</span></span><br><span class="line">$obj -&gt; offsetSet(<span class="number">0</span>,<span class="string">'A'</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'bottom:'</span>.$obj -&gt; bottom();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//队列里的rewind使得指针指向bottom所在位置的节点</span></span><br><span class="line">$obj -&gt; rewind();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'current:'</span>.$obj-&gt;current();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> ($obj -&gt;valid()) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $obj -&gt;key().<span class="string">'=&gt;'</span>.$obj-&gt;current().PHP_EOL;</span><br><span class="line">    $obj-&gt;next();<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//dequeue操作从队列中提取bottom位置的节点，并返回，同时从队列里面删除该元素</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'dequeue obj:'</span>.$obj-&gt;dequeue();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'bottom:'</span>.$obj -&gt; bottom().PHP_EOL;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"></span><br><span class="line">bottom:a top:c</span><br><span class="line">bottom:A</span><br><span class="line">current:A</span><br><span class="line"><span class="number">0</span>=&gt;A <span class="number">1</span>=&gt;b <span class="number">2</span>=&gt;c </span><br><span class="line">dequeue obj:A</span><br><span class="line">bottom:b</span><br></pre></td></tr></table></figure><h1 id="SplPriorityQueue"><a href="#SplPriorityQueue" class="headerlink" title="SplPriorityQueue"></a>SplPriorityQueue</h1><p>优先级队列是不同于先进先出队列的另一种队列，它每次从队列中取出的是具有最高优先权的元素， 这里的优先是指元素的某一属性优先，以比较为例，可能是较大的优先，也可能是较小的优先。 PHP实现的优先级队列默认是以大头堆实现，即较大的优先，如果要较小的优先，则需要继承SplPriorityQueue类，并重载compare方法。</p><p>PHP SPL中的SplPriorityQueue是基于堆实现的。和堆一样，也有int compare ( mixed $priority1 , mixed $priority2 )方法。</p><p>SplPriorityQueue实现了Iterator,Countable接口</p><h2 id="参考资料-1"><a href="#参考资料-1" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://php.net/manual/zh/class.splpriorityqueue.php" target="_blank" rel="noopener">PHP-SPL-SplPriorityQueue</a></p><h2 id="SplPriorityQueue类说明"><a href="#SplPriorityQueue类说明" class="headerlink" title="SplPriorityQueue类说明"></a>SplPriorityQueue类说明</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">SplPriorityQueue implements Iterator , Countable &#123;</span><br><span class="line">    <span class="comment">/* 方法 */</span></span><br><span class="line">    <span class="keyword">public</span> __construct ( void )</span><br><span class="line">    <span class="keyword">public</span> int compare ( mixed $priority1 , mixed $priority2 )</span><br><span class="line">    <span class="keyword">public</span> int count ( void )</span><br><span class="line">    <span class="keyword">public</span> mixed current ( void )</span><br><span class="line">    <span class="keyword">public</span> mixed extract ( void )</span><br><span class="line">    <span class="keyword">public</span> void insert ( mixed $value , mixed $priority )</span><br><span class="line">    <span class="keyword">public</span> bool isEmpty ( void )</span><br><span class="line">    <span class="keyword">public</span> mixed key ( void )</span><br><span class="line">    <span class="keyword">public</span> void next ( void )</span><br><span class="line">    <span class="keyword">public</span> void recoverFromCorruption ( void )</span><br><span class="line">    <span class="keyword">public</span> void rewind ( void )</span><br><span class="line">    <span class="keyword">public</span> void setExtractFlags ( int $flags )</span><br><span class="line">    <span class="keyword">public</span> mixed top ( void )</span><br><span class="line">    <span class="keyword">public</span> bool valid ( void )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SplPriorityQueue使用"><a href="#SplPriorityQueue使用" class="headerlink" title="SplPriorityQueue使用"></a>SplPriorityQueue使用</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$pq = <span class="keyword">new</span> SplPriorityQueue();</span><br><span class="line"> </span><br><span class="line">$pq-&gt;insert(<span class="string">'a'</span>, <span class="number">10</span>);</span><br><span class="line">$pq-&gt;insert(<span class="string">'b'</span>, <span class="number">1</span>);</span><br><span class="line">$pq-&gt;insert(<span class="string">'c'</span>, <span class="number">8</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">echo</span> $pq-&gt;count() .PHP_EOL; <span class="comment">//3</span></span><br><span class="line"><span class="keyword">echo</span> $pq-&gt;current() . PHP_EOL; <span class="comment">//a</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置元素出队模式</span></span><br><span class="line"><span class="comment"> * SplPriorityQueue::EXTR_DATA 仅提取值</span></span><br><span class="line"><span class="comment"> * SplPriorityQueue::EXTR_PRIORITY 仅提取优先级</span></span><br><span class="line"><span class="comment"> * SplPriorityQueue::EXTR_BOTH 提取数组包含值和优先级</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">$pq-&gt;setExtractFlags(SplPriorityQueue::EXTR_DATA);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span>($pq-&gt;valid()) &#123;</span><br><span class="line">    print_r($pq-&gt;current());  <span class="comment">//a  c  b</span></span><br><span class="line">    $pq-&gt;next();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"></span><br><span class="line"><span class="number">3</span></span><br><span class="line">a</span><br><span class="line">acb</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> SPL标准库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之栈-Stack</title>
      <link href="/article/4134649319.html"/>
      <url>/article/4134649319.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>SPL，PHP 标准库（Standard PHP Library） ，从 PHP 5.0 起内置的组件和接口，且从 PHP5.3 已逐渐的成熟。SPL 在所有的 PHP5 开发环境中被内置，同时无需任何设置。</p><a id="more"></a><h1 id="栈-Stack-原理图"><a href="#栈-Stack-原理图" class="headerlink" title="栈(Stack)原理图"></a>栈(Stack)原理图</h1><img src="/article/4134649319/a0abefd4c7f94c39654613ebf26dcf27.jpg" title="原理图"><h1 id="SplStack"><a href="#SplStack" class="headerlink" title="SplStack"></a>SplStack</h1><p>栈(Stack)是一种特殊的线性表，因为它只能在线性表的一端进行插入或删除元素(即进栈和出栈)。<br>栈是一种后进先出(LIFO)的数据结构。<br>PHP SPL中的SplStack继承自双向链表SplDoublyLinkedList。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://php.net/manual/zh/class.splstack.php" target="_blank" rel="noopener">PHP-SPL-SplStack</a></p><h2 id="SplStack类说明"><a href="#SplStack类说明" class="headerlink" title="SplStack类说明"></a>SplStack类说明</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">SplStack extends SplDoublyLinkedList implements Iterator , ArrayAccess , Countable &#123;</span><br><span class="line">    <span class="comment">/* 方法 */</span></span><br><span class="line">    __construct ( void )</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *   设置迭代模式</span></span><br><span class="line"><span class="comment">     * （1）SplDoublyLinkedList::IT_MODE_LIFO | SplDoublyLinkedList::IT_MODE_KEEP （默认值,迭代后数据保存）</span></span><br><span class="line"><span class="comment">     * （2）SplDoublyLinkedList::IT_MODE_LIFO | SplDoublyLinkedList::IT_MODE_DELETE （迭代后数据删除）</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    void setIteratorMode ( int $mode )</span><br><span class="line">    <span class="comment">/* 继承的方法 */</span></span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::add ( mixed $index , mixed $newval )</span><br><span class="line">    <span class="comment">//尾部节点</span></span><br><span class="line">    <span class="keyword">public</span> mixed SplDoublyLinkedList::bottom ( void )</span><br><span class="line">    <span class="comment">//元素的个数</span></span><br><span class="line">    <span class="keyword">public</span> int SplDoublyLinkedList::count ( void )</span><br><span class="line">    <span class="comment">//当前记录</span></span><br><span class="line">    <span class="keyword">public</span> mixed SplDoublyLinkedList::current ( void )</span><br><span class="line">    <span class="comment">//获取迭代模式</span></span><br><span class="line">    <span class="keyword">public</span> int SplDoublyLinkedList::getIteratorMode ( void )</span><br><span class="line">    <span class="comment">//检测是否为空</span></span><br><span class="line">    <span class="keyword">public</span> bool SplDoublyLinkedList::isEmpty ( void )</span><br><span class="line">    <span class="comment">//当前节点索引</span></span><br><span class="line">    <span class="keyword">public</span> mixed SplDoublyLinkedList::key ( void )</span><br><span class="line">    <span class="comment">//移到下条记录</span></span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::next ( void )</span><br><span class="line">    <span class="comment">//指定index处节点是否存在</span></span><br><span class="line">    <span class="keyword">public</span> bool SplDoublyLinkedList::offsetExists ( mixed $index )</span><br><span class="line">    <span class="comment">//获取指定index处节点值</span></span><br><span class="line">    <span class="keyword">public</span> mixed SplDoublyLinkedList::offsetGet ( mixed $index )</span><br><span class="line">    <span class="comment">//设置指定index处值</span></span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::offsetSet ( mixed $index , mixed $newval )</span><br><span class="line">    <span class="comment">//删除指定index处节点</span></span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::offsetUnset ( mixed $index )</span><br><span class="line">    <span class="comment">//从尾部弹出元素</span></span><br><span class="line">    <span class="keyword">public</span> mixed SplDoublyLinkedList::pop ( void )</span><br><span class="line">    <span class="comment">//移到上条记录</span></span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::prev ( void )</span><br><span class="line">    <span class="comment">//添加元素到尾部</span></span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::push ( mixed $value )</span><br><span class="line">    <span class="comment">//将指针指向迭代开始处</span></span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::rewind ( void )</span><br><span class="line">    <span class="comment">//序列化存储</span></span><br><span class="line">    <span class="keyword">public</span> string SplDoublyLinkedList::serialize ( void )</span><br><span class="line">    <span class="comment">//设置迭代模式</span></span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::setIteratorMode ( int $mode )</span><br><span class="line">    <span class="comment">//头部移除元素</span></span><br><span class="line">    <span class="keyword">public</span> mixed SplDoublyLinkedList::shift ( void )</span><br><span class="line">    <span class="comment">//头部节点</span></span><br><span class="line">    <span class="keyword">public</span> mixed SplDoublyLinkedList::top ( void )</span><br><span class="line">    <span class="comment">//反序列化</span></span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::unserialize ( string $serialized )</span><br><span class="line">    <span class="comment">//头部添加元素</span></span><br><span class="line">    <span class="keyword">public</span> void SplDoublyLinkedList::unshift ( mixed $value )</span><br><span class="line">    <span class="comment">//检查是否还有节点</span></span><br><span class="line">    <span class="keyword">public</span> bool SplDoublyLinkedList::valid ( void )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SplStack使用"><a href="#SplStack使用" class="headerlink" title="SplStack使用"></a>SplStack使用</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$stack = <span class="keyword">new</span> SplStack();</span><br><span class="line">$stack-&gt;push(<span class="number">1</span>);</span><br><span class="line">$stack-&gt;push(<span class="number">2</span>);</span><br><span class="line">$stack-&gt;push(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'bottom:'</span>.$stack -&gt; bottom().PHP_EOL;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"top:"</span>.$stack-&gt;top().PHP_EOL;</span><br><span class="line"><span class="comment">//堆栈的offset=0,是top所在位置（即栈的末尾）</span></span><br><span class="line">$stack -&gt; offsetSet(<span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"top:"</span>.$stack-&gt;top().<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//堆栈的rewind和双向链表的rewind相反，堆栈的rewind使得当前指针指向top所在位置，而双向链表调用之后指向bottom所在位置</span></span><br><span class="line">$stack -&gt; rewind();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'current:'</span>.$stack-&gt;current().<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"></span><br><span class="line">$stack -&gt;next();<span class="comment">//堆栈的next操作使指针指向靠近bottom位置的下一个节点，而双向链表是靠近top的下一个节点</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'current:'</span>.$stack -&gt;current().<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历堆栈</span></span><br><span class="line">$stack -&gt; rewind();</span><br><span class="line"><span class="keyword">while</span> ($stack-&gt;valid()) &#123;</span><br><span class="line">    <span class="keyword">echo</span> $stack-&gt;key().<span class="string">'=&gt;'</span>.$stack-&gt;current().PHP_EOL;</span><br><span class="line">    $stack-&gt;next();<span class="comment">//不从链表中删除元素</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $stack-&gt;pop() .<span class="string">'--'</span>;</span><br><span class="line"><span class="keyword">echo</span> $stack-&gt;pop() .<span class="string">'--'</span>;</span><br><span class="line"><span class="keyword">echo</span> $stack-&gt;pop() .<span class="string">'--'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line"></span><br><span class="line">bottom:<span class="number">1</span> top:<span class="number">3</span> top:<span class="number">10</span></span><br><span class="line">current:<span class="number">10</span></span><br><span class="line">current:<span class="number">2</span></span><br><span class="line"><span class="number">2</span>=&gt;<span class="number">10</span> <span class="number">1</span>=&gt;<span class="number">2</span> <span class="number">0</span>=&gt;<span class="number">1</span> </span><br><span class="line"><span class="number">10</span>-<span class="number">-2</span>-<span class="number">-1</span>--</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> SPL标准库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之双向链表</title>
      <link href="/article/2340898584.html"/>
      <url>/article/2340898584.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>SPL，PHP 标准库（Standard PHP Library） ，从 PHP 5.0 起内置的组件和接口，且从 PHP5.3 已逐渐的成熟。SPL 在所有的 PHP5 开发环境中被内置，同时无需任何设置。</p><a id="more"></a><h1 id="双向链表原理图"><a href="#双向链表原理图" class="headerlink" title="双向链表原理图"></a>双向链表原理图</h1><img src="/article/2340898584/3582cdb94bcf6d45a65aa187d8446b77.jpg" title="原理图"><h1 id="SplDoublyLinkedList"><a href="#SplDoublyLinkedList" class="headerlink" title="SplDoublyLinkedList"></a>SplDoublyLinkedList</h1><p>双向链表是一种重要的线性存储结构，对于双向链表中的每个节点，不仅仅存储自己的信息，还要保存前驱和后继节点的地址。</p><p>PHP SPL中的SplDoublyLinkedList类提供了对双向链表的操作。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p> <a href="http://php.net/manual/zh/class.spldoublylinkedlist.php" target="_blank" rel="noopener">PHP-SPL-SplDoublyLinkedList</a></p><h2 id="SplDoublyLinkedList类说明"><a href="#SplDoublyLinkedList类说明" class="headerlink" title="SplDoublyLinkedList类说明"></a>SplDoublyLinkedList类说明</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">SplDoublyLinkedList implements Iterator  , ArrayAccess  , Countable  &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> __construct ( void )</span><br><span class="line">  <span class="keyword">public</span> void add ( mixed $index , mixed $newval )</span><br><span class="line">  <span class="comment">//双链表的头部节点</span></span><br><span class="line">  <span class="keyword">public</span> mixed top ( void )</span><br><span class="line">  <span class="comment">//双链表的尾部节点</span></span><br><span class="line">  <span class="keyword">public</span> mixed bottom ( void )</span><br><span class="line">  <span class="comment">//双联表元素的个数</span></span><br><span class="line">  <span class="keyword">public</span> int count ( void )</span><br><span class="line">  <span class="comment">//检测双链表是否为空</span></span><br><span class="line">  <span class="keyword">public</span> bool isEmpty ( void )</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  <span class="comment">//当前节点索引</span></span><br><span class="line">  <span class="keyword">public</span> mixed key ( void )</span><br><span class="line">  <span class="comment">//移到上条记录</span></span><br><span class="line">  <span class="keyword">public</span> void prev ( void )</span><br><span class="line">  <span class="comment">//移到下条记录</span></span><br><span class="line">  <span class="keyword">public</span> void next ( void )</span><br><span class="line">  <span class="comment">//当前记录</span></span><br><span class="line">  <span class="keyword">public</span> mixed current ( void )</span><br><span class="line">  <span class="comment">//将指针指向迭代开始处</span></span><br><span class="line">  <span class="keyword">public</span> void rewind ( void )</span><br><span class="line">  <span class="comment">//检查双链表是否还有节点</span></span><br><span class="line">  <span class="keyword">public</span> bool valid ( void )</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//指定index处节点是否存在</span></span><br><span class="line">  <span class="keyword">public</span> bool offsetExists ( mixed $index )</span><br><span class="line">  <span class="comment">//获取指定index处节点值</span></span><br><span class="line">  <span class="keyword">public</span> mixed offsetGet ( mixed $index )</span><br><span class="line">  <span class="comment">//设置指定index处值</span></span><br><span class="line">  <span class="keyword">public</span> void offsetSet ( mixed $index , mixed $newval )</span><br><span class="line">  <span class="comment">//删除指定index处节点</span></span><br><span class="line">  <span class="keyword">public</span> void offsetUnset ( mixed $index )</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//从双链表的尾部弹出元素</span></span><br><span class="line">  <span class="keyword">public</span> mixed pop ( void )</span><br><span class="line">  <span class="comment">//添加元素到双链表的尾部</span></span><br><span class="line">  <span class="keyword">public</span> void push ( mixed $value )</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//序列化存储</span></span><br><span class="line">  <span class="keyword">public</span> string serialize ( void )</span><br><span class="line">  <span class="comment">//反序列化</span></span><br><span class="line">  <span class="keyword">public</span> void unserialize ( string $serialized )</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//设置迭代模式</span></span><br><span class="line">  <span class="keyword">public</span> void setIteratorMode ( int $mode )</span><br><span class="line">  <span class="comment">//获取迭代模式SplDoublyLinkedList::IT_MODE_LIFO (Stack style) SplDoublyLinkedList::IT_MODE_FIFO (Queue style)</span></span><br><span class="line">  <span class="keyword">public</span> int getIteratorMode ( void )</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//双链表的头部移除元素</span></span><br><span class="line">  <span class="keyword">public</span> mixed shift ( void )</span><br><span class="line">  <span class="comment">//双链表的头部添加元素</span></span><br><span class="line">  <span class="keyword">public</span> void unshift ( mixed $value )</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SplDoublyLinkedList使用"><a href="#SplDoublyLinkedList使用" class="headerlink" title="SplDoublyLinkedList使用"></a>SplDoublyLinkedList使用</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">$list = <span class="keyword">new</span> SplDoublyLinkedList();</span><br><span class="line">$list-&gt;push(<span class="string">'a'</span>);</span><br><span class="line">$list-&gt;push(<span class="string">'b'</span>);</span><br><span class="line">$list-&gt;push(<span class="string">'c'</span>);</span><br><span class="line">  </span><br><span class="line">$list-&gt;unshift(<span class="string">'top'</span>);</span><br><span class="line">$list-&gt;shift();</span><br><span class="line">  </span><br><span class="line">print_r(<span class="keyword">array</span>(</span><br><span class="line">  <span class="string">'pop'</span> =&gt; $list-&gt;pop(),</span><br><span class="line">  <span class="string">'count'</span> =&gt; $list-&gt;count(),</span><br><span class="line">  <span class="string">'isEmpty'</span> =&gt; $list-&gt;isEmpty(),</span><br><span class="line">  <span class="string">'bottom'</span> =&gt; $list-&gt;bottom(),</span><br><span class="line">  <span class="string">'top'</span> =&gt; $list-&gt;top()</span><br><span class="line">));</span><br><span class="line">  </span><br><span class="line">$list-&gt;setIteratorMode(SplDoublyLinkedList::IT_MODE_FIFO);</span><br><span class="line">print_r($list-&gt;getIteratorMode());</span><br><span class="line">  </span><br><span class="line"><span class="keyword">for</span>($list-&gt;rewind(); $list-&gt;valid(); $list-&gt;next()) &#123;</span><br><span class="line">  <span class="keyword">echo</span> $list-&gt;current().PHP_EOL;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">print_r($a = $list-&gt;serialize());</span><br><span class="line"><span class="comment">//print_r($list-&gt;unserialize($a));</span></span><br><span class="line">  </span><br><span class="line">$list-&gt;offsetSet(<span class="number">0</span>,<span class="string">'new one'</span>);</span><br><span class="line">$list-&gt;offsetUnset(<span class="number">0</span>);</span><br><span class="line">print_r(<span class="keyword">array</span>(</span><br><span class="line">  <span class="string">'offsetExists'</span> =&gt; $list-&gt;offsetExists(<span class="number">4</span>),</span><br><span class="line">  <span class="string">'offsetGet'</span> =&gt; $list-&gt;offsetGet(<span class="number">0</span>),</span><br><span class="line">  </span><br><span class="line">));</span><br><span class="line">print_r($list);</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [pop] =&gt; c</span><br><span class="line">    [count] =&gt; <span class="number">2</span></span><br><span class="line">    [isEmpty] =&gt; </span><br><span class="line">    [bottom] =&gt; a</span><br><span class="line">    [top] =&gt; b</span><br><span class="line">)</span><br><span class="line"><span class="number">0</span>a</span><br><span class="line">b</span><br><span class="line">i:<span class="number">0</span>;:s:<span class="number">1</span>:<span class="string">"a"</span>;:s:<span class="number">1</span>:<span class="string">"b"</span>;<span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [offsetExists] =&gt; </span><br><span class="line">    [offsetGet] =&gt; b</span><br><span class="line">)</span><br><span class="line">SplDoublyLinkedList Object</span><br><span class="line">(</span><br><span class="line">    [flags:SplDoublyLinkedList:<span class="keyword">private</span>] =&gt; <span class="number">0</span></span><br><span class="line">    [dllist:SplDoublyLinkedList:<span class="keyword">private</span>] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [<span class="number">0</span>] =&gt; b</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> SPL标准库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>EXT2文件系统结构</title>
      <link href="/article/1220878275.html"/>
      <url>/article/1220878275.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>EXT2第二代扩展文件系统（英语：second extended filesystem，缩写为 ext2），是LINUX内核所用的文件系统。它开始由Rémy Card设计，用以代替ext，于1993年1月加入linux核心支持之中。ext2 的经典实现为LINUX内核中的ext2fs文件系统驱动，最大可支持2TB的文件系统，至linux核心2.6版时，扩展到可支持32TB。其他的实现包括GNU Hurd，Mac OS X (第3方)，Darwin (第3方)，BSD。ext2为数个LINUX发行版的默认文件系统，如Debian、Red Hat Linux等</p><a id="more"></a><h1 id="ext2文件系统整体布局"><a href="#ext2文件系统整体布局" class="headerlink" title="ext2文件系统整体布局"></a>ext2文件系统整体布局</h1><p>一个磁盘可以划分成多个分区，每个分区必须先用格式化工具（例如某种mkfs命令）格式化成某种格式的文件系统，然后才能存储文件，格式化的过程会在磁盘上写一些管理存储布局的信息。下图是一个磁盘分区格式化成ext2文件系统后的存储布局。</p><img src="/article/1220878275/a66cce0b818db4175db73da8c29d6d81.png" title="原理图"><p>文件系统中存储的最小单位是块（Block），一个块究竟多大是在格式化时确定的，例如mke2fs的-b选项可以设定块大小为1024、2048或4096字节，这些 blocks 被聚在一起分成几个大的 block group。每个 block group 中有多少个 block 是固定的。而上图中启动块（Boot Block）的大小是确定的，就是1KB，启动块是由PC标准规定的，用来存储磁盘分区信息和启动信息，任何文件系统都不能使用启动块。启动块之后才是ext2文件系统的开始，ext2文件系统将整个分区划成若干个同样大小的块组（Block Group），每个块组都由以下部分组成</p><h2 id="超级块（Super-Block）"><a href="#超级块（Super-Block）" class="headerlink" title="超级块（Super Block）"></a>超级块（Super Block）</h2><p>描述整个分区的文件系统信息，例如块大小、文件系统版本号、上次mount的时间等等。超级块在每个块组的开头都有一份拷贝。</p><h2 id="块组描述符表（GDT，Group-Descriptor-Table"><a href="#块组描述符表（GDT，Group-Descriptor-Table" class="headerlink" title="块组描述符表（GDT，Group Descriptor Table)"></a>块组描述符表（GDT，Group Descriptor Table)</h2><p>由很多块组描述符组成，整个分区分成多少个块组就对应有多少个块组描述符。每个块组描述符（Group Descriptor）存储一个块组的描述信息，例如在这个块组中从哪里开始是inode表，从哪里开始是数据块，空闲的inode和数据块还有多少个等等。和超级块类似，块组描述符表在每个块组的开头也都有一份拷贝，这些信息是非常重要的，一旦超级块意外损坏就会丢失整个分区的数据，一旦块组描述符意外损坏就会丢失整个块组的数据，因此它们都有多份拷贝。通常内核只用到第0个块组中的拷贝，当执行e2fsck检查文件系统一致性时，第0个块组中的超级块和块组描述符表就会拷贝到其它块组，这样当第0个块组的开头意外损坏时就可以用其它拷贝来恢复，从而减少损失。</p><h2 id="块位图（Block-Bitmap）"><a href="#块位图（Block-Bitmap）" class="headerlink" title="块位图（Block Bitmap）"></a>块位图（Block Bitmap）</h2><p>一个块组中的块是这样利用的：数据块存储所有文件的数据，比如某个分区的块大小是1024字节，某个文件是2049字节，那么就需要三个数据块来存，即使第三个块只存了一个字节也需要占用一个整块；超级块、块组描述符表、块位图、inode位图、inode表这几部分存储该块组的描述信息。那么如何知道哪些块已经用来存储文件数据或其它描述信息，哪些块仍然空闲可用呢？块位图就是用来描述整个块组中哪些块已用哪些块空闲的，它本身占一个块，其中的每个bit代表本块组中的一个块，这个bit为1表示该块已用，这个bit为0表示该块空闲可用。</p><p>为什么用df命令统计整个磁盘的已用空间非常快呢？因为只需要查看每个块组的块位图即可，而不需要搜遍整个分区。相反，用du命令查看一个较大目录的已用空间就非常慢，因为不可避免地要搜遍整个目录的所有文件。</p><p>与此相联系的另一个问题是：在格式化一个分区时究竟会划出多少个块组呢？主要的限制在于块位图本身必须只占一个块。用mke2fs格式化时默认块大小是1024字节，可以用-b参数指定块大小，现在设块大小指定为b字节，那么一个块可以有8b个bit，这样大小的一个块位图就可以表示8b个块的占用情况，因此一个块组最多可以有8b个块，如果整个分区有s个块，那么就可以有s/(8b)个块组。格式化时可以用-g参数指定一个块组有多少个块，但是通常不需要手动指定，mke2fs工具会计算出最优的数值。</p><h2 id="inode位图（inode-Bitmap）"><a href="#inode位图（inode-Bitmap）" class="headerlink" title="inode位图（inode Bitmap）"></a>inode位图（inode Bitmap）</h2><p>和块位图类似，本身占一个块，其中每个bit表示一个inode是否空闲可用</p><h2 id="inode表（inode-Table）"><a href="#inode表（inode-Table）" class="headerlink" title="inode表（inode Table）"></a>inode表（inode Table）</h2><p>我们知道，一个文件除了数据需要存储之外，一些描述信息也需要存储，例如文件类型（常规、目录、符号链接等），权限，文件大小，创建/修改/访问时间等，也就是ls -l命令看到的那些信息，这些信息存在inode中而不是数据块中。每个文件都有一个inode，一个块组中的所有inode组成了inode表。</p><p>inode表占多少个块在格式化时就要决定并写入块组描述符中，mke2fs格式化工具的默认策略是一个块组有多少个8KB就分配多少个inode。由于数据块占了整个块组的绝大部分，也可以近似认为数据块有多少个8KB就分配多少个inode，换句话说，如果平均每个文件的大小是8KB，当分区存满的时候inode表会得到比较充分的利用，数据块也不浪费。如果这个分区存的都是很大的文件（比如电影），则数据块用完的时候inode会有一些浪费，如果这个分区存的都是很小的文件（比如源代码），则有可能数据块还没用完inode就已经用完了，数据块可能有很大的浪费。如果用户在格式化时能够对这个分区以后要存储的文件大小做一个预测，也可以用mke2fs的-i参数手动指定每多少个字节分配一个inode。</p><h2 id="数据块（Data-Block）"><a href="#数据块（Data-Block）" class="headerlink" title="数据块（Data Block）"></a>数据块（Data Block）</h2><p>根据不同的文件类型有以下几种情况<br>对于常规文件，文件的数据存储在数据块中。<br>对于目录，该目录下的所有文件名和目录名存储在数据块中，注意文件名保存在它所在目录的数据块中，除文件名之外，ls -l命令看到的其它信息都保存在该文件的inode中。注意这个概念：目录也是一种文件，是一种特殊类型的文件。</p><p>对于符号链接，如果目标路径名较短则直接保存在inode中以便更快地查找，如果目标路径名较长则分配一个数据块来保存。</p><p>设备文件、FIFO和socket等特殊文件没有数据块，设备文件的主设备号和次设备号保存在inode中。</p><h3 id="目录中记录项文件类型"><a href="#目录中记录项文件类型" class="headerlink" title="目录中记录项文件类型"></a>目录中记录项文件类型</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">编码    文件类型</span><br><span class="line">0       Unknown</span><br><span class="line">1       Regular file</span><br><span class="line">2       Directory</span><br><span class="line">3       Character device</span><br><span class="line">4       Block device</span><br><span class="line">5       Named pipe</span><br><span class="line">6       Socket</span><br><span class="line">7       Symbolic link</span><br></pre></td></tr></table></figure><h1 id="数据块寻址"><a href="#数据块寻址" class="headerlink" title="数据块寻址"></a>数据块寻址</h1><p>如果一个文件有多个数据块，这些数据块很可能不是连续存放的，应该如何寻址到每个块呢？实际上，根目录的数据块是通过其inode中的索引项Blocks[0]找到的，事实上，这样的索引项一共有15个，从Blocks[0]到Blocks[14]，每个索引项占4字节。前12个索引项都表示块编号，例如上面的例子中Blocks[0]字段保存着24，就表示第24个块是该文件的数据块，如果块大小是1KB，这样可以表示从0字节到12KB的文件。如果剩下的三个索引项Blocks[12]到Blocks[14]也是这么用的，就只能表示最大15KB的文件了，这是远远不够的，事实上，剩下的三个索引项都是间接索引。</p><p>索引项Blocks[12]所指向的块并非数据块，而是称为间接寻址块（Indirect Block），其中存放的都是类似Blocks[0]这种索引项，再由索引项指向数据块。设块大小是b，那么一个间接寻址块中可以存放b/4个索引项，指向b/4个数据块。所以如果把Blocks[0]到Blocks[12]都用上，最多可以表示b/4+12个数据块，对于块大小是1K的情况，最大可表示268K的文件。如下图所示，注意文件的数据块编号是从0开始的，Blocks[0]指向第0个数据块，Blocks[11]指向第11个数据块，Blocks[12]所指向的间接寻址块的第一个索引项指向第12个数据块，依此类推。</p><img src="/article/1220878275/c5cc7a974abf5a7951698ddf611880a4.png" title="数据块寻址说明图"><p>从上图可以看出，索引项Blocks[13]指向两级的间接寻址块，最多可表示(b/4)2+b/4+12个数据块，对于1K的块大小最大可表示64.26MB的文件。索引项Blocks[14]指向三级的间接寻址块，最多可表示(b/4)3+(b/4)2+b/4+12个数据块，对于1K的块大小最大可表示16.06GB的文件。</p><p>可见，这种寻址方式对于访问不超过12个数据块的小文件是非常快的，访问文件中的任意数据只需要两次读盘操作，一次读inode（也就是读索引项）一次读数据块。而访问大文件中的数据则需要最多五次读盘操作：inode、一级间接寻址块、二级间接寻址块、三级间接寻址块、数据块。实际上，磁盘中的inode和数据块往往已经被内核缓存了，读大文件的效率也不会太低。</p><img src="/article/1220878275/09961753904e99bce624cbdb31e534a7.png" title="Ext2详解">]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Docker和Jenkins的CI改造</title>
      <link href="/article/4226450635.html"/>
      <url>/article/4226450635.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>持续集成是一种软件开发实践，对于提高软件开发效率并保障软件开发质量提供了理论基础，旨在提供一个开放易用的软件平台，使持续集成变成可能。为了以后方便现在把博客迁移到了Docker上面,由于只有一台机器所以这里就没有使用Docker Registry了</p><a id="more"></a><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><h2 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h2><img src="/article/4226450635/d93a79d2143109794be84f309cf16f59.jpg" title="原理图"><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/root/work</span><br><span class="line">.</span><br><span class="line">├── config <span class="comment">#blog配置文件存放处</span></span><br><span class="line">│   └── app.conf </span><br><span class="line">├── data <span class="comment">#blog数据存放处</span></span><br><span class="line">│   ├── leanote <span class="comment">#程序公共文件</span></span><br><span class="line">│   │   ├── files</span><br><span class="line">│   │   ├── mongodb_backup</span><br><span class="line">│   │   └── upload</span><br><span class="line">│   └── mongo <span class="comment">#程序Nosql数据保存文件</span></span><br><span class="line">├── Dockerfile <span class="comment">#博客的Dockerfile，Jenkins基于他进行镜像构建</span></span><br><span class="line">├── jenkins <span class="comment">#Jenkins挂载目录</span></span><br><span class="line">└── update <span class="comment">#自动升级脚本</span></span><br><span class="line">    └── update_blog_docker.sh <span class="comment">#基于docker的升级脚本</span></span><br></pre></td></tr></table></figure><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><p>Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</p><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker</span><br></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service docker start</span><br></pre></td></tr></table></figure><h1 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h1><p>Jenkins是一个开源软件项目，旨在提供一个开放易用的软件平台，使软件的持续集成变成可能。</p><h2 id="安装Jenkins"><a href="#安装Jenkins" class="headerlink" title="安装Jenkins"></a>安装Jenkins</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull docker.io/jenkins</span><br></pre></td></tr></table></figure><h2 id="启动Jenkins的容器服务"><a href="#启动Jenkins的容器服务" class="headerlink" title="启动Jenkins的容器服务"></a>启动Jenkins的容器服务</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name jenkins -p 127.0.0.1:8080:8080 -p 127.0.0.1:50000:50000 -v /root/jenkins:/var/jenkins_home jenkins</span><br></pre></td></tr></table></figure><h1 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h1><h2 id="博客的基础镜像lenoate-env"><a href="#博客的基础镜像lenoate-env" class="headerlink" title="博客的基础镜像lenoate_env"></a>博客的基础镜像lenoate_env</h2><p>由于使用的开发版本的leanote所以自己构建了一个golang的开发环境</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#系统</span></span><br><span class="line"><span class="keyword">FROM</span> golang:<span class="number">1.6</span> </span><br><span class="line"><span class="comment">#作者</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> DuanEnJian <span class="string">"admin@ganktools.com"</span></span><br><span class="line"><span class="comment">#ENV GOROOT /usr/local/go</span></span><br><span class="line"><span class="comment">#ENV GOPATH /go</span></span><br><span class="line"><span class="comment">#ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">cd</span> /go/src &amp;&amp; wget http://golangtc.com/static/download/packages/golang.org.x.crypto.tar.gz &amp;&amp; wget http://golangtc.com/static/download/packages/gopkg.in.mgo.v2.tar.gz &amp;&amp; wget http://golangtc.com/static/download/packages/github.com.revel.cmd.tar.gz &amp;&amp; wget http://golangtc.com/static/download/packages/golang.org.x.net.tar.gz &amp;&amp; wget http://golangtc.com/static/download/packages/github.com.robfig.pathtree.tar.gz &amp;&amp; wget http://golangtc.com/static/download/packages/github.com.revel.config.tar.gz &amp;&amp; wget http://golangtc.com/static/download/packages/github.com.klauspost.crc32.tar.gz &amp;&amp; wget http://golangtc.com/static/download/packages/github.com.klauspost.cpuid.tar.gz &amp;&amp; wget http://golangtc.com/static/download/packages/github.com.klauspost.compress.tar.gz &amp;&amp; wget http://golangtc.com/static/download/packages/github.com.agtorre.gocolorize.tar.gz &amp;&amp; wget http://golangtc.com/static/download/packages/github.com.revel.revel.tar.gz &amp;&amp; wget http://golangtc.com/static/download/packages/golang.org.x.sys.tar.gz &amp;&amp; tar -zxvf golang.org.x.crypto.tar.gz &amp;&amp; tar -zxvf golang.org.x.net.tar.gz &amp;&amp; tar -zxvf github.com.robfig.pathtree.tar.gz &amp;&amp; tar -zxvf github.com.revel.config.tar.gz &amp;&amp; tar -zxvf github.com.klauspost.crc32.tar.gz &amp;&amp; tar -zxvf github.com.klauspost.cpuid.tar.gz &amp;&amp; tar -zxvf github.com.klauspost.compress.tar.gz &amp;&amp; tar -zxvf github.com.agtorre.gocolorize.tar.gz &amp;&amp; tar -zxvf github.com.revel.revel.tar.gz &amp;&amp; tar -zxvf golang.org.x.sys.tar.gz &amp;&amp; tar -zxvf github.com.revel.cmd.tar.gz &amp;&amp; tar -zxvf gopkg.in.mgo.v2.tar.gz &amp;&amp; go get github.com/revel/revel &amp;&amp; go get github.com/revel/cmd/revel &amp;&amp; go get gopkg.in/mgo.v2 &amp;&amp; rm -rf golang.org.x.net.tar.gz github.com.robfig.pathtree.tar.gz github.com.revel.config.tar.gz github.com.klauspost.crc32.tar.gz github.com.klauspost.cpuid.tar.gz github.com.klauspost.compress.tar.gz github.com.agtorre.gocolorize.tar.gz github.com.revel.revel.tar.gz golang.org.x.sys.tar.gz github.com.revel.cmd.tar.gz gopkg.in.mgo.v2.tar.gz golang.org.x.crypto.tar.gz</span></span><br></pre></td></tr></table></figure><h2 id="博客的打包镜像"><a href="#博客的打包镜像" class="headerlink" title="博客的打包镜像"></a>博客的打包镜像</h2><p>leanote自动构建的dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> leanote_env</span><br><span class="line"><span class="comment">#作者</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> DuanEnJian <span class="string">"admin@ganktools.com"</span></span><br><span class="line"><span class="comment">#拷贝博客文件</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> blog.tar.gz /go/src/github.com/leanote/leanote/</span></span><br><span class="line"><span class="comment">#拷贝博客配置文件</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> config/app.conf /go/src/github.com/leanote/leanote/conf/app.conf</span></span><br><span class="line"><span class="comment">#建立挂载目录软链接</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p /leanote/data/upload/ \</span></span><br><span class="line"><span class="bash">    &amp;&amp; mkdir -p /leanote/data/files/ \</span></span><br><span class="line"><span class="bash">    &amp;&amp; mkdir -p /leanote/data/mongodb_backup/ \</span></span><br><span class="line"><span class="bash">    &amp;&amp; ln -s /leanote/data/upload/ /go/src/github.com/leanote/leanote/public/ \</span></span><br><span class="line"><span class="bash">    &amp;&amp; ln -s /leanote/data/files/ /go/src/github.com/leanote/leanote/ \</span></span><br><span class="line"><span class="bash">    &amp;&amp; ln -s /leanote/data/mongodb_backup/ /go/src/github.com/leanote/leanote/</span></span><br><span class="line"><span class="comment">#挂载目录</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [<span class="string">"/leanote/data"</span>]</span></span><br><span class="line"><span class="comment">#开放端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8081</span></span><br><span class="line"><span class="comment">#进入工作目录</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /go/src</span></span><br><span class="line"><span class="comment">#执行命令</span></span><br><span class="line"><span class="keyword">ENTRYPOINT</span><span class="bash"> revel run github.com/leanote/leanote prod 8081 &amp;&amp; /bin/bash</span></span><br></pre></td></tr></table></figure><h1 id="自动升级脚本"><a href="#自动升级脚本" class="headerlink" title="自动升级脚本"></a>自动升级脚本</h1><p>update_blog_docker.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义全局变量</span></span><br><span class="line">WORK_DIR=<span class="string">"/root/work"</span>; <span class="comment">#工作目录</span></span><br><span class="line">NEW_IMAGE_NAME=<span class="string">"leanote_"</span>$(date +%Y%m%d%H%M%S); <span class="comment">#镜像和容器名称</span></span><br><span class="line">CURRENT_RUN_IMAGE_NAME=;</span><br><span class="line"></span><br><span class="line"><span class="comment">#构建镜像</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">docker_build_image</span></span>()&#123;</span><br><span class="line">    blog_file_path=<span class="string">"/root/work/jenkins/workspace/Blog"</span>;</span><br><span class="line">    <span class="comment">#判断文件是否存在</span></span><br><span class="line">    <span class="keyword">if</span> [ ! -s <span class="variable">$&#123;blog_file_path&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"[MSG]:blog source files not find !!"</span>;</span><br><span class="line">        <span class="built_in">exit</span> 1;</span><br><span class="line">    <span class="keyword">fi</span>;</span><br><span class="line">    <span class="comment">#打包压缩博客文件</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$&#123;blog_file_path&#125;</span></span><br><span class="line">    tar -czvf blog.tar.gz *</span><br><span class="line">    mv blog.tar.gz <span class="variable">$&#123;WORK_DIR&#125;</span></span><br><span class="line">    <span class="comment">#进入工作目录</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$&#123;WORK_DIR&#125;</span></span><br><span class="line">    <span class="comment">#构建镜像</span></span><br><span class="line">    docker build -t <span class="variable">$&#123;NEW_IMAGE_NAME&#125;</span> .</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">        unlink blog.tar.gz</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"[MSG]:build images <span class="variable">$&#123;NEW_IMAGE_NAME&#125;</span> success!!"</span>;</span><br><span class="line">        <span class="built_in">return</span> 0;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"[MSG]:build image failed !!"</span>;</span><br><span class="line">        <span class="built_in">exit</span> 1;</span><br><span class="line">    <span class="keyword">fi</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止当前运行的博客容器</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">stop_run_blog_container</span></span>()&#123;</span><br><span class="line">    <span class="comment">#获取所有的博客容器</span></span><br><span class="line">    current_run_container_name=$(docker ps -a |awk <span class="string">'&#123;print $2&#125;'</span> |grep ^leanote_[0-9]*[0-9]);</span><br><span class="line">    <span class="comment">#判断是否存在博客容器</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$current_run_container_name</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="comment">#判断博客容器是否在运行，停止运行的博客容器</span></span><br><span class="line">        <span class="keyword">if</span> [[ `docker ps | grep <span class="variable">$&#123;current_run_container_name&#125;</span>` ]]; <span class="keyword">then</span></span><br><span class="line">            docker stop <span class="variable">$&#123;current_run_container_name&#125;</span> &gt; /dev/null</span><br><span class="line">        <span class="keyword">fi</span>;</span><br><span class="line">        <span class="comment">#判断是否停止成功</span></span><br><span class="line">        <span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"[MSG]:stop blog container <span class="variable">$&#123;current_run_container_name&#125;</span> success !!"</span>;</span><br><span class="line">            CURRENT_RUN_IMAGE_NAME=<span class="variable">$&#123;current_run_container_name&#125;</span>;</span><br><span class="line">            <span class="built_in">return</span> 0;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"[MSG]:stop blog container <span class="variable">$&#123;current_run_container_name&#125;</span> failed !!"</span>;</span><br><span class="line">            <span class="built_in">exit</span> 1;</span><br><span class="line">        <span class="keyword">fi</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="comment">#不存在博客的容器</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"[MSG]:stop run blog container success !!"</span>;</span><br><span class="line">        <span class="built_in">return</span> 0;</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除旧的博客容器</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">del_abandoned_container</span></span>()&#123;</span><br><span class="line">    <span class="comment">#判断是否存在博客容器，存在则删除容器</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$CURRENT_RUN_IMAGE_NAME</span> ]; <span class="keyword">then</span></span><br><span class="line">        docker rm <span class="variable">$&#123;CURRENT_RUN_IMAGE_NAME&#125;</span> &gt; /dev/null</span><br><span class="line">        <span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"[MSG]:delete container <span class="variable">$&#123;CURRENT_RUN_IMAGE_NAME&#125;</span> success !!"</span>;</span><br><span class="line">            <span class="built_in">return</span> 0; </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"[MSG]:delete container <span class="variable">$&#123;CURRENT_RUN_IMAGE_NAME&#125;</span> failed !!"</span>;</span><br><span class="line">            <span class="built_in">exit</span> 1;</span><br><span class="line">        <span class="keyword">fi</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="comment">#不存在跳过</span></span><br><span class="line">        <span class="built_in">return</span> 0;</span><br><span class="line">    <span class="keyword">fi</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行新的博客镜像容器</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">run_new_blog_container</span></span>()&#123;</span><br><span class="line">    docker run -d --name <span class="variable">$&#123;NEW_IMAGE_NAME&#125;</span> -v /root/work/data/leanote:/leanote/data --link mongo:mongo_addr -p 127.0.0.1:8081:8081 <span class="variable">$&#123;NEW_IMAGE_NAME&#125;</span> /bin/bash &gt; /dev/null</span><br><span class="line">    <span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"[MSG]:start new blog container <span class="variable">$&#123;NEW_IMAGE_NAME&#125;</span> success !!"</span>;</span><br><span class="line">        <span class="built_in">return</span> 0;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"[MSG]:start new blog container <span class="variable">$&#123;NEW_IMAGE_NAME&#125;</span> failed !!"</span>;</span><br><span class="line">        <span class="built_in">exit</span> 1;</span><br><span class="line">    <span class="keyword">fi</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除不要的镜像</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">del_abandoned_image</span></span>()&#123;</span><br><span class="line">    del_image_list=$(docker images |grep ^leanote_[0-9]*[0-9] | awk <span class="string">'&#123;print $1&#125;'</span> | sort -r | awk <span class="string">'NR &gt;2&#123;print&#125;'</span>);</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;del_image_list&#125;</span>"</span> != <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line">        docker rmi <span class="variable">$&#123;del_image_list&#125;</span> &gt; /dev/null</span><br><span class="line">        <span class="keyword">if</span> [ $? -eq 0 ]; <span class="keyword">then</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"[MSG]:del abandoned image <span class="variable">$&#123;del_image_list&#125;</span> success !!"</span>;</span><br><span class="line">            <span class="built_in">return</span> 0;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"[MSG]:del abandoned image <span class="variable">$&#123;del_image_list&#125;</span> failed !!"</span>;</span><br><span class="line">            <span class="built_in">exit</span> 1;</span><br><span class="line">        <span class="keyword">fi</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"[MSG]:delete abandoned image success !!"</span>;</span><br><span class="line">        <span class="built_in">return</span> 0;</span><br><span class="line">    <span class="keyword">fi</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#脚本开始</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">start</span></span>()&#123;</span><br><span class="line">    <span class="comment">#构建镜像</span></span><br><span class="line">docker_build_image;</span><br><span class="line">    <span class="comment">#停止当前博客容器</span></span><br><span class="line">    stop_run_blog_container;</span><br><span class="line">    <span class="comment">#删除当前容器</span></span><br><span class="line">    del_abandoned_container;</span><br><span class="line">    <span class="comment">#运行新的博客镜像容器</span></span><br><span class="line">    run_new_blog_container;</span><br><span class="line">    <span class="comment">#删除作废的镜像</span></span><br><span class="line">    del_abandoned_image;</span><br><span class="line">    <span class="comment">#检测新的博客镜像容器是否正常运行</span></span><br><span class="line">    docker ps </span><br><span class="line">    new_run_container_name=$(docker ps |awk <span class="string">'&#123;print $2&#125;'</span> |grep ^leanote_[0-9]*[0-9]);</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$new_run_container_name</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="comment">#博客升级完成</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"[MSG]:update blog container success !!"</span>;</span><br><span class="line">        <span class="comment">#更新完成退出</span></span><br><span class="line">        <span class="built_in">exit</span> 0;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="comment">#博客升级失败</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"[MSG]:update blog container failed !!"</span>;</span><br><span class="line">        <span class="built_in">exit</span> 1;</span><br><span class="line">    <span class="keyword">fi</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start;</span><br></pre></td></tr></table></figure><h1 id="nginx配置"><a href="#nginx配置" class="headerlink" title="nginx配置"></a>nginx配置</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里是blog的http解析配置</span></span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">listen</span>  <span class="number">80</span> default_server;</span><br><span class="line">    <span class="attribute">server_name</span>  www.ganktools.com;</span><br><span class="line">    <span class="comment"># 强制https</span></span><br><span class="line">    <span class="comment"># 如果不需要, 请注释这一行rewrite</span></span><br><span class="line">    <span class="comment">#rewrite ^/(.*) https://www.ganktools.com/$1 permanent;</span></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span>         http://127.0.0.1:8081;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   Host             <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   X-Real-IP        <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   X-Forwarded-For  <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里是blog的htts解析配置</span></span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">listen</span>  <span class="number">443</span> ssl;</span><br><span class="line">    <span class="attribute">server_name</span>  www.ganktools.com;</span><br><span class="line">    <span class="attribute">ssl_certificate</span>     /opt/ssl_key/ganktools.com.crt; <span class="comment"># 修改路径, 到a.com.crt, 下同</span></span><br><span class="line">    <span class="attribute">ssl_certificate_key</span> /opt/ssl_key/ganktools.com.key;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span>         http://127.0.0.1:8081;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   Host             <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   X-Real-IP        <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   X-Forwarded-For  <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#这里是jenkins域名解析的配置</span></span><br><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">listen</span>  <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">server_name</span>  ci.ganktools.com;</span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_pass</span>         http://127.0.0.1:8080;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   Host             <span class="variable">$host</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   X-Real-IP        <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>   X-Forwarded-For  <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="配置Jenkins"><a href="#配置Jenkins" class="headerlink" title="配置Jenkins"></a>配置Jenkins</h1><p>Jenkins需要安装插件Git plugin,SSH plugin</p><h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h2><img src="/article/4226450635/a0257d0410ca2a5488652db607ea75e1.png" title="系统配置"><h2 id="项目配置"><a href="#项目配置" class="headerlink" title="项目配置"></a>项目配置</h2><img src="/article/4226450635/74c9c61306b27cd1d2ec4a9d547595eb.png" title="项目配置"><h2 id="GitHub-Api的Token获取"><a href="#GitHub-Api的Token获取" class="headerlink" title="GitHub-Api的Token获取"></a>GitHub-Api的Token获取</h2><img src="/article/4226450635/454b1bce8908652134b22a01e8e2ddf8.png" title="GitHub-Api的Token获取"><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://segmentfault.com/a/1190000004640060" target="_blank" rel="noopener">Jenkins+Github持续集成</a><br><a href="http://www.cnblogs.com/dojo-lzz/p/5125619.html" target="_blank" rel="noopener">jenkins + Git 搭建持续集成环境</a></p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fedora24使用笔记</title>
      <link href="/article/1837062590.html"/>
      <url>/article/1837062590.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Fedora 是一个 Linux 发行版，是一款由全球社区爱好者构建的面向日常应用的快速、稳定、强大的操作系统。它允许任何人自由地使用、修改和重发布，无论现在还是将来。它由一个强大的社群开发，这个社群的成员以自己的不懈努力，提供并维护自由、开放源码的软件和开放的标准。Fedora 项目由 Fedora 基金会管理和控制，得到了 Red Hat 的支持。</p><a id="more"></a><h1 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf update</span><br></pre></td></tr></table></figure><h1 id="添加RPM-Fusion源"><a href="#添加RPM-Fusion源" class="headerlink" title="添加RPM Fusion源"></a>添加RPM Fusion源</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dnf install --nogpgcheck http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-24.noarch.rpm</span><br><span class="line">dnf install --nogpgcheck http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-24.noarch.rpm</span><br></pre></td></tr></table></figure><h1 id="添加FZUG源"><a href="#添加FZUG源" class="headerlink" title="添加FZUG源"></a>添加FZUG源</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf config-manager --add-repo=http://repo.fdzh.org/FZUG/FZUG.repo</span><br></pre></td></tr></table></figure><h1 id="添加adobe源"><a href="#添加adobe源" class="headerlink" title="添加adobe源"></a>添加adobe源</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install --nogpgcheck http://linuxdownload.adobe.com/linux/x86_64/adobe-release-x86_64-1.0-1.noarch.rpm</span><br></pre></td></tr></table></figure><h1 id="安装GNOME调整工具"><a href="#安装GNOME调整工具" class="headerlink" title="安装GNOME调整工具"></a>安装GNOME调整工具</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install gnome-tweak-tool</span><br></pre></td></tr></table></figure><h1 id="安装User-Themes扩展"><a href="#安装User-Themes扩展" class="headerlink" title="安装User Themes扩展"></a>安装User Themes扩展</h1><p><a href="https://extensions.gnome.org/extension/19/user-themes/" target="_blank" rel="noopener">https://extensions.gnome.org/extension/19/user-themes/</a></p><h1 id="添加OSX-Arc-White主题"><a href="#添加OSX-Arc-White主题" class="headerlink" title="添加OSX-Arc-White主题"></a>添加OSX-Arc-White主题</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.opendesktop.org/api/files/download/id/1470839268/OSX-Arc-White-v-1.1.tar.gz</span><br><span class="line">tar -zxvf OSX-Arc-White-v-1.1.tar.gz</span><br><span class="line">sudo mv -rf OSX-Arc-White /usr/share/themes/</span><br></pre></td></tr></table></figure><h1 id="添加Mine-Yosemite图标"><a href="#添加Mine-Yosemite图标" class="headerlink" title="添加Mine-Yosemite图标"></a>添加Mine-Yosemite图标</h1><p><a href="Mine-icon-themes.tar.gz">Mine-icon-themes.tar.gz</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf Mine-icon-themes.tar.gz</span><br><span class="line">sudo mv -rf Mine-Yosemite /usr/share/icons/</span><br></pre></td></tr></table></figure><h1 id="安装shadowsocks-qt5"><a href="#安装shadowsocks-qt5" class="headerlink" title="安装shadowsocks-qt5"></a>安装shadowsocks-qt5</h1><p>参考:<br><a href="https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97" target="_blank" rel="noopener">https://github.com/shadowsocks/shadowsocks-qt5/wiki/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf copr <span class="built_in">enable</span> librehat/shadowsocks</span><br><span class="line">sudo dnf update</span><br><span class="line">sudo dnf install shadowsocks-qt5</span><br></pre></td></tr></table></figure><h1 id="安装MySQL-Workbench"><a href="#安装MySQL-Workbench" class="headerlink" title="安装MySQL Workbench"></a>安装MySQL Workbench</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install --nogpgcheck http://dev.mysql.com/get/mysql-community-release-fc21-6.noarch.rpm</span><br><span class="line">sudo dnf install mysql-workbench-community</span><br></pre></td></tr></table></figure><h1 id="安装Manaco字体"><a href="#安装Manaco字体" class="headerlink" title="安装Manaco字体"></a>安装Manaco字体</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/cstrap/monaco-font.git</span><br><span class="line">sudo bash monaco-font/install-font-centos.sh http://usystem.googlecode.com/files/MONACO.TTF</span><br></pre></td></tr></table></figure><h1 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h1><img src="/article/1837062590/964398adbdfee356cc91245ecc0f2819.jpg" title="桌面效果图"><img src="/article/1837062590/d0986899c76c3e0c9a1db1ec3a409cbc.jpg" title="应用列表效果图"><img src="/article/1837062590/e2c9d0c55ef130ec72cdceb41ecbbcbf.jpg" title="文件夹效果图">]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux终端美化之ZSH</title>
      <link href="/article/3194097614.html"/>
      <url>/article/3194097614.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Zsh是一个Linux用户很少使用的shell，这是由于大多数Linux产品安装，以及默认使用bash shell。几乎每一款Linux产品都包含有zsh，通常可以用apt-get、urpmi或yum等包管理器进行安装</p><a id="more"></a><h1 id="安装ZSH"><a href="#安装ZSH" class="headerlink" title="安装ZSH"></a>安装ZSH</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install zsh</span><br></pre></td></tr></table></figure><h1 id="安装oh-my-zsh"><a href="#安装oh-my-zsh" class="headerlink" title="安装oh-my-zsh"></a>安装oh-my-zsh</h1><p>oh-my-zsh是基于zsh的功能做了一个扩展，方便的插件管理、主题自定义，以及漂亮的自动完成效果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#CURL方式(二选一)</span></span><br><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br><span class="line"><span class="comment">#WGET方式(二选一)</span></span><br><span class="line">sh -c <span class="string">"<span class="variable">$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)</span>"</span></span><br></pre></td></tr></table></figure><h1 id="安装powerline"><a href="#安装powerline" class="headerlink" title="安装powerline"></a>安装powerline</h1><p>Powerline是vim的状态行插件，并为其他几个应用程序提供状态行和提示，包括zsh，bash，tmux，IPython，Awesome，i3和Qtile。</p><h2 id="For-Shell"><a href="#For-Shell" class="headerlink" title="For Shell"></a>For Shell</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装powerline</span></span><br><span class="line">sudo dnf install powerline</span><br><span class="line"><span class="comment">#编辑 ~/.bashrc 添加</span></span><br><span class="line"><span class="keyword">if</span> [ -f `<span class="built_in">which</span> powerline-daemon` ]; <span class="keyword">then</span></span><br><span class="line">  powerline-daemon -q</span><br><span class="line">  POWERLINE_BASH_CONTINUATION=1</span><br><span class="line">  POWERLINE_BASH_SELECT=1</span><br><span class="line">  . /usr/share/powerline/bash/powerline.sh</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="For-Tmux"><a href="#For-Tmux" class="headerlink" title="For Tmux"></a>For Tmux</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装tmux-powerline</span></span><br><span class="line">sudo dnf install tmux-powerline</span><br><span class="line"><span class="comment">#编辑~/.tmux.conf 添加</span></span><br><span class="line"><span class="built_in">source</span> <span class="string">"/usr/share/tmux/powerline.conf"</span></span><br></pre></td></tr></table></figure><h2 id="For-VIM"><a href="#For-VIM" class="headerlink" title="For VIM"></a>For VIM</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装vim-plugin-powerline</span></span><br><span class="line">sudo dnf install vim-plugin-powerline</span><br><span class="line"><span class="comment">#编辑~/.vimrc 添加</span></span><br><span class="line">python from powerline.vim import setup as powerline_setup</span><br><span class="line">python powerline_setup()</span><br><span class="line">python del powerline_setup</span><br><span class="line"><span class="built_in">set</span> laststatus=2</span><br><span class="line"><span class="built_in">set</span> t_Co=256</span><br></pre></td></tr></table></figure><p>某些更改可能需要您重新加载会话或可能重新启动守护程序：powerline-daemon –replace</p><h1 id="oh-my-zsh配置"><a href="#oh-my-zsh配置" class="headerlink" title="oh-my-zsh配置"></a>oh-my-zsh配置</h1><p>完成配置后重启终端生效<br><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Themes" target="_blank" rel="noopener">oh-my-zsh主题列表</a><br><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Plugins" target="_blank" rel="noopener">oh-my-zsh插件列表</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#编辑~/.zshrc文件</span></span><br><span class="line">vim ~/.zshrc</span><br><span class="line"><span class="comment">#配置主题(推荐使用:agnoster)</span></span><br><span class="line">ZSH_THEME=<span class="string">"agnoster"</span></span><br><span class="line"><span class="comment">#配置插件</span></span><br><span class="line">plugins=(git <span class="built_in">history</span> docker fedora dnf composer man systemd pip redis-cli go cp node npm perl yum python man)</span><br><span class="line"><span class="comment">#开启自动更新</span></span><br><span class="line">DISABLE_AUTO_UPDATE=<span class="string">"true"</span></span><br><span class="line"><span class="comment">#最后执行</span></span><br><span class="line"><span class="built_in">source</span> .zshrc</span><br></pre></td></tr></table></figure><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><img src="/article/3194097614/5db16f6db6e0cc50fe98f8c57c659d2b.gif" title="效果图01"><img src="/article/3194097614/8b96a51c781e4334ad73811e209b1ee7.jpeg" title="效果图02"><img src="/article/3194097614/b70b72d1fa44f8368668d829502804ba.jpeg" title="效果图03">]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shadowsocks之科学上网</title>
      <link href="/article/1570730903.html"/>
      <url>/article/1570730903.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Shadowsocks的运行原理与其他代理工具基本相同，使用特定的中转服务器完成数据传输。<br>在服务器端部署完成后，用户需要按照指定的密码、加密方式和端口使用客户端软件与其连接。在成功连接到服务器后，客户端会在用户的电脑上构建一个本地Socks5代理。浏览网络时，网络流量会被分到本地socks5代理，客户端将其加密之后发送到服务器，服务器以同样的加密方式将流量回传给客户端，以此实现代理上网。</p><a id="more"></a><h1 id="Shadowsocks"><a href="#Shadowsocks" class="headerlink" title="Shadowsocks"></a>Shadowsocks</h1><h2 id="Shadowsocks服务端"><a href="#Shadowsocks服务端" class="headerlink" title="Shadowsocks服务端"></a>Shadowsocks服务端</h2><p><a href="https://github.com/mengskysama/shadowsocks-rm" target="_blank" rel="noopener">(自建服务器需要)Shadowsocks服务端</a></p><h2 id="OS-X-客户端"><a href="#OS-X-客户端" class="headerlink" title="OS X 客户端"></a>OS X 客户端</h2><p><a href="https://github.com/shadowsocks/shadowsocks-gui" target="_blank" rel="noopener">shadowsocks-gui</a> - Cross-platform GUI powered by node and Webkit<br><a href="https://github.com/ohdarling/GoAgentX" target="_blank" rel="noopener">GoAgentX</a> - OS X client, with GUI<br><a href="https://github.com/shadowsocks/shadowsocks-iOS/wiki/Shadowsocks-for-OSX-Help" target="_blank" rel="noopener">Shadowsocks for Mac</a> - Shadowsocks GUI designed for OS X 10.7+</p><h2 id="Windows-客户端"><a href="#Windows-客户端" class="headerlink" title="Windows 客户端"></a>Windows 客户端</h2><p><a href="https://github.com/shadowsocks/shadowsocks-gui" target="_blank" rel="noopener">shadowsocks-gui</a> - Cross-platform GUI powered by node and Webkit<br><a href="https://github.com/clowwindy/shadowsocks-csharp" target="_blank" rel="noopener">shadowsocks-csharp</a> - Windows version with GUI<br><a href="https://github.com/dallascao/yingwa" target="_blank" rel="noopener">Yingwa</a> - Shadowsocks Windows client</p><h2 id="Linux-客户端"><a href="#Linux-客户端" class="headerlink" title="Linux 客户端"></a>Linux 客户端</h2><p><a href="https://github.com/shadowsocks/shadowsocks-gui" target="_blank" rel="noopener">shadowsocks-gui</a> - Cross-platform GUI powered node and by Webkit</p><h2 id="iOS-客户端"><a href="#iOS-客户端" class="headerlink" title="iOS 客户端"></a>iOS 客户端</h2><p><a href="https://github.com/shadowsocks/shadowsocks-iOS" target="_blank" rel="noopener">shadowsocks-iOS</a> - All devices, web browser, global proxy with some restrictions<br><a href="https://github.com/linusyang/MobileShadowSocks" target="_blank" rel="noopener">MobileShadowSocks</a> - Jailbroken devices only, global proxy with no restriction</p><h2 id="Android-客户端"><a href="#Android-客户端" class="headerlink" title="Android 客户端"></a>Android 客户端</h2><p><a href="https://github.com/shadowsocks/shadowsocks-android" target="_blank" rel="noopener">shadowsocks-android</a></p><h2 id="路由器-Router-客户端"><a href="#路由器-Router-客户端" class="headerlink" title="路由器 / Router 客户端"></a>路由器 / Router 客户端</h2><p><a href="https://github.com/haohaolee/shadowsocks-openwrt" target="_blank" rel="noopener">shadowsocks-openwrt</a> - works on OpenWRT routers<br><a href="http://geewan.com/?r=4012" target="_blank" rel="noopener">极玩路由器</a></p><h2 id="实验环境"><a href="#实验环境" class="headerlink" title="实验环境"></a>实验环境</h2><p><a href="https://github.com/clowwindy/shadowsocks-ruby" target="_blank" rel="noopener">shadowsocks-ruby</a> Ruby version<br><a href="https://github.com/clowwindy/shadowsocks-chromeapp" target="_blank" rel="noopener">shadowsocks-chromeapp</a> - Chrome App</p><h1 id="SwitchyOmega"><a href="#SwitchyOmega" class="headerlink" title="SwitchyOmega"></a>SwitchyOmega</h1><h2 id="SwitchyOmega插件"><a href="#SwitchyOmega插件" class="headerlink" title="SwitchyOmega插件"></a>SwitchyOmega插件</h2><p><a href="6bd47d982c42fd691065147746042f1d.crx">SwitchyOmega.crx</a></p><h2 id="SwitchyOmega备份"><a href="#SwitchyOmega备份" class="headerlink" title="SwitchyOmega备份"></a>SwitchyOmega备份</h2><p><a href="d317d514f1335ac696f58a5630168b82.bak">OmegaOptions.bak</a></p><h2 id="规则列表网址"><a href="#规则列表网址" class="headerlink" title="规则列表网址"></a>规则列表网址</h2><p><a href="https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt" target="_blank" rel="noopener">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</a></p><h1 id="Shadowsocks账号"><a href="#Shadowsocks账号" class="headerlink" title="Shadowsocks账号"></a>Shadowsocks账号</h1><h2 id="自建服务器"><a href="#自建服务器" class="headerlink" title="自建服务器"></a>自建服务器</h2><p><a href="https://bandwagonhost.com/" target="_blank" rel="noopener">搬瓦工</a></p><h2 id="网络获取"><a href="#网络获取" class="headerlink" title="网络获取"></a>网络获取</h2><p>百度or谷歌搜索：科学上网<br>百度or谷歌搜索：Shadowsocks<br><a href="https://www.ss-link.me" target="_blank" rel="noopener">ss-link</a><br><a href="https://acgapp.moe" target="_blank" rel="noopener">ACGSS</a></p><h1 id="图解说明"><a href="#图解说明" class="headerlink" title="图解说明"></a>图解说明</h1><h2 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h2><img src="/article/1570730903/821ae3ca15de97811df2c9fd39707bad.jpg" title="原理图"><h2 id="界面图"><a href="#界面图" class="headerlink" title="界面图"></a>界面图</h2><img src="/article/1570730903/7b05a45dcf3915cc8ccf8d5575ecca38.png" title="界面图">]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进程与线程的区别概述</title>
      <link href="/article/956853022.html"/>
      <url>/article/956853022.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>进程是资源分配的最小单位，线程是CPU调度的最小单位</p><a id="more"></a><h1 id="进程（Process）"><a href="#进程（Process）" class="headerlink" title="进程（Process）"></a>进程（Process）</h1><p>进程（Process）是计算机中的程序关于某数据集合上的一次运行活动，是系统进行资源分配和调度的基本单位，是操作系统结构的基础。在早期面向进程设计的计算机结构中，进程是程序的基本执行实体；在当代面向线程设计的计算机结构中，进程是线程的容器。程序是指令、数据及其组织形式的描述，进程是程序的实体。</p><h1 id="线程-thread"><a href="#线程-thread" class="headerlink" title="线程 (thread)"></a>线程 (thread)</h1><p>线程(thread)，有时被称为轻量级进程(Lightweight Process，LWP），是程序执行流的最小单元。一个标准的线程由线程ID，当前指令指针(PC），寄存器集合和堆栈组成。另外，线程是进程中的一个实体，是被系统独立调度和分派的基本单位，线程自己不拥有系统资源，只拥有一点儿在运行中必不可少的资源，但它可与同属一个进程的其它线程共享进程所拥有的全部资源。一个线程可以创建和撤消另一个线程，同一进程中的多个线程之间可以并发执行。由于线程之间的相互制约，致使线程在运行中呈现出间断性。线程也有就绪、阻塞和运行三种基本状态。就绪状态是指线程具备运行的所有条件，逻辑上可以运行，在等待处理机；运行状态是指线程占有处理机正在运行；阻塞状态是指线程在等待一个事件（如某个信号量），逻辑上不可执行。每一个程序都至少有一个线程，若程序只有一个线程，那就是程序本身。<br>线程是程序中一个单一的顺序控制流程。进程内一个相对独立的、可调度的执行单元，是系统独立调度和分派CPU的基本单位指运行中的程序的调度单位。在单个程序中同时运行多个线程完成不同的工作，称为多线程。</p><p>#3.进程和线程区别<br>进程是资源分配的基本单位。所有与该进程有关的资源，都被记录在进程控制块PCB中。以表示该进程拥有这些资源或正在使用它们。<br>另外，进程也是抢占处理机的调度单位，它拥有一个完整的虚拟地址空间。当进程发生调度时，不同的进程拥有不同的虚拟地址空间，而同一进程内的不同线程共享同一地址空间。<br>与进程相对应，线程与资源分配无关，它属于某一个进程，并与进程内的其他线程一起共享进程的资源。</p><p>线程只由相关堆栈（系统栈或用户栈）寄存器和线程控制表TCB组成。寄存器可被用来存储线程内的局部变量，但不能存储其他线程的相关变量。<br>通常在一个进程中可以包含若干个线程，它们可以利用进程所拥有的资源。<strong>在引入线程的操作系统中，通常都是把进程作为分配资源的基本单位，而把线程作为独立运行和独立调度的基本单位。</strong>由于线程比进程更小，基本上不拥有系统资源，故对它的调度所付出的开销就会小得多，能更高效的提高系统内多个程序间并发执行的程度，从而显著提高系统资源的利用率和吞吐量。因而近年来推出的通用操作系统都引入了线程，以便进一步提高系统的并发性，并把它视为现代操作系统的一个重要指标。</p><p><strong>线程与进程的区别可以归纳为以下4点：</strong></p><ul><li><p>地址空间和其它资源（如打开文件）：<br>进程间相互独立，同一进程的各线程间共享。某进程内的线程在其它进程不可见。</p></li><li><p>通信<br>进程间通信IPC，线程间可以直接读写进程数据段（如全局变量）来进行通信——需要进程同步和互斥手段的辅助，以保证数据的一致性。</p></li><li><p>调度和切换<br>线程上下文切换比进程上下文切换要快得多。</p></li><li><p>在多线程OS中，进程不是一个可执行的实体。<br>在多线程OS中，进程不是一个可执行的实体</p></li></ul><h1 id="多进程和多线程的比较"><a href="#多进程和多线程的比较" class="headerlink" title="多进程和多线程的比较"></a>多进程和多线程的比较</h1><img src="/article/956853022/fc27bb927fce210db3abe789464905fb.png" title="参考图"><p>#5.为何需要多进程(线程),为何需要并发？<br>这个问题或许本身都不是个问题。但是对于没有接触过多进程编程的朋友来说，他们确实无法感受到并发的魅力以及必要性。<br>我想，只要你不是整天都写那种int main()到底的代码的人，那么或多或少你会遇到代码响应不够用的情况，也应该有尝过并发编程的甜头。就像一个快餐点的服务员，既要在前台接待客户点餐，又要接电话送外卖，没有分身术肯定会忙得你焦头烂额的。幸运的是确实有这么一种技术，让你可以像孙悟空一样分身，灵魂出窍，乐哉乐哉地轻松应付一切状况,这就是多进程/线程技术。<br>并发技术，就是可以让你在同一时间同时执行多条任务的技术。你的代码将不仅仅是从上到下，从左到右这样规规矩矩的一条线执行。你可以一条线在main函数里跟你的客户交流，另一条线，你早就把你外卖送到了其他客户的手里。</p><p>所以，为何需要并发？因为我们需要更强大的功能，提供更多的服务，所以并发，必不可少。</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://www.ruanyifeng.com/blog/2013/04/processes_and_threads.html" target="_blank" rel="noopener">进程与线程的一个简单解释</a><br><a href="http://blog.csdn.net/pingd/article/details/17895933" target="_blank" rel="noopener">多线程还是多进程的选择及区别</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>GoogleChrome扩展开发</title>
      <link href="/article/2557955107.html"/>
      <url>/article/2557955107.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>扩展程序允许您为 Chrome 浏览器增加功能，而不需要深入研究本机代码。您可以使用您在网页开发中已经很熟悉的核心技术（HTML、CSS 与 JavaScript）为 Chrome 浏览器创建新的扩展程序。如果您曾经编写过网页，您应该很快熟悉扩展程序的开发。</p><a id="more"></a><h1 id="清单文件manifest-json"><a href="#清单文件manifest-json" class="headerlink" title="清单文件manifest.json"></a>清单文件manifest.json</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"GankTools"</span>,</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"1.0"</span>,</span><br><span class="line">    <span class="attr">"manifest_version"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">"description"</span>: <span class="string">"GankTools,DuanEnJian专用笔记工具"</span>,</span><br><span class="line">    <span class="attr">"background"</span>: &#123;</span><br><span class="line">        <span class="attr">"scripts"</span>: [ <span class="string">"js/background.js"</span> ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"browser_action"</span>: &#123;</span><br><span class="line">        <span class="attr">"default_title"</span>: <span class="string">"GankTools"</span>,</span><br><span class="line">        <span class="attr">"default_icon"</span>: <span class="string">"ganktools.png"</span>,</span><br><span class="line">        <span class="attr">"default_popup"</span>: <span class="string">"index.html"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"icons"</span>: &#123;</span><br><span class="line">      <span class="attr">"128"</span>: <span class="string">"ganktools.png"</span>,</span><br><span class="line">      <span class="attr">"48"</span>: <span class="string">"ganktools.png"</span>,</span><br><span class="line">      <span class="attr">"16"</span>: <span class="string">"ganktools.png"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"permissions"</span>: [ <span class="string">"contextMenus"</span>, <span class="string">"tabs"</span>, <span class="string">"http://*/*"</span>, <span class="string">"https://*/*"</span>, <span class="string">"notifications"</span>, <span class="string">"webRequest"</span>, <span class="string">"webRequestBlocking"</span> ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="API列表"><a href="#API列表" class="headerlink" title="API列表"></a>API列表</h1><ol><li>chrome.* API <a href="https://crxdoc-zh.appspot.com/extensions/api_index" target="_blank" rel="noopener">https://crxdoc-zh.appspot.com/extensions/api_index</a></li><li>扩展架构说明 <a href="https://crxdoc-zh.appspot.com/extensions/overview" target="_blank" rel="noopener">https://crxdoc-zh.appspot.com/extensions/overview</a></li></ol><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><blockquote><p>3.1 目录结构</p></blockquote><img src="/article/2557955107/b711aa38d0071922f0b644c862e65608.png" title="文件清单"><blockquote><p>3.2 开发方式</p></blockquote><img src="/article/2557955107/4eda93d97958f2a6d45b345b175d5edd.png" title="开发"><blockquote><p>3.3 效果预览</p></blockquote><img src="/article/2557955107/90356a87e0e87303642372c3f8093ed6.png" title="效果预览"><blockquote><p>3.4 打包加载</p></blockquote><img src="/article/2557955107/df2c981f4552df9c938a6138080161ce.png" title="打包加载"><h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><p><a href="GankTools.Chrome.Source.tar.gz">GankTools.Chrome.Source.tar.gz</a></p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开源协议说明</title>
      <link href="/article/2517736651.html"/>
      <url>/article/2517736651.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>LGPL许可证是LESSER GENERAL PUBLIC LICENSE的简写，也叫LIBRARY GENERAL PUBLIC LICENSE，中文译为“较宽松公共许可证”或者“函数库公共许可证”。该许可证适用于一些由自由软件基金会与其它决定使用此许可证的软件作者所特殊设计的软件软件包─比如函数库（即Library）。</p><a id="more"></a><img src="/article/2517736651/d756665a9ec9c360a827113b3076c5fc.png" title="原理图">]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的SublimeText3配置</title>
      <link href="/article/4192108374.html"/>
      <url>/article/4192108374.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Sublime Text 是一个代码编辑器（Sublime Text 2是收费软件，但可以无限期试用），也是HTML和散文先进的文本编辑器。Sublime Text是由程序员Jon Skinner于2008年1月份所开发出来，它最初被设计为一个具有丰富扩展功能的Vim。<br>Sublime Text具有漂亮的用户界面和强大的功能，例如代码缩略图，Python的插件，代码段等。还可自定义键绑定，菜单和工具栏。Sublime Text 的主要功能包括：拼写检查，书签，完整的 Python API ， Goto 功能，即时项目切换，多选择，多窗口等等。Sublime Text 是一个跨平台的编辑器，同时支持Windows、Linux、Mac OS X等操作系统。</p><a id="more"></a><h1 id="Package-Control安装"><a href="#Package-Control安装" class="headerlink" title="Package Control安装"></a>Package Control安装</h1><p>Sublime 3版本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request,os,hashlib; h = <span class="string">'eb2297e1a458f27d836c04bb0cbaf282'</span> + <span class="string">'d0e7a3098092775ccb37ca9d6b2e4b7d'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).read(); dh = hashlib.sha256(by).hexdigest(); print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> open(os.path.join( ipp, pf), <span class="string">'wb'</span> ).write(by)</span><br></pre></td></tr></table></figure><h1 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h1><p>我们先需要通过COMMAND+SHIFT+P（如果我们是WIN系统，那就输入CTRL+SHIFT+P），调出输入框，然后我们先输入Install Package回车，然后我们再输入itg.flat就可以看到插件，然后选择回车自动安装。</p><img src="/article/4192108374/ae0996cca2f820a9cef58b7b781ea667.jpeg" title="step_01"><img src="/article/4192108374/474079d85b1012caa8170d485467aa4a.jpg" title="step_02"><h1 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h1><p>Perferences -&gt; Settings User</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;color_scheme&quot;: &quot;Packages/Theme - itg.flat/itg.dark.tmTheme&quot;,</span><br><span class="line">&quot;theme&quot;: &quot;itg.flat.dark.sublime-theme&quot;,</span><br><span class="line">&quot;itg_small_tabs&quot;: true,</span><br><span class="line">&quot;itg_sidebar_tree_small&quot;: true,</span><br><span class="line">&quot;itg_sidebar_tree_medium&quot;: true,</span><br><span class="line">&quot;itg_scrollbar_small&quot;: true,</span><br><span class="line"></span><br><span class="line">&quot;font_size&quot;: 12,</span><br><span class="line">&quot;tab_size&quot;: 4,</span><br><span class="line">&quot;auto_indent&quot;: true,</span><br><span class="line">&quot;smart_indent&quot;: true,</span><br><span class="line">&quot;auto_match_enabled&quot;: true,</span><br><span class="line">&quot;highlight_line&quot;: true,</span><br><span class="line">&quot;translate_tabs_to_spaces&quot;: true,</span><br><span class="line">&quot;match_brackets&quot;: true,</span><br><span class="line">&quot;save_on_focus_lost&quot;: true,</span><br><span class="line">&quot;auto_complete&quot;: true,</span><br><span class="line">&quot;highlight_modified_tabs&quot;: true,</span><br><span class="line">&quot;remember_open_files&quot;: false,</span><br><span class="line">&quot;ignored_packages&quot;:</span><br><span class="line">[</span><br><span class="line">&quot;Vintage&quot;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="键盘配置"><a href="#键盘配置" class="headerlink" title="键盘配置"></a>键盘配置</h1><p>Preferences -&gt; Key bindings - User </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    /**</span><br><span class="line">     * 常用快捷键(Sublime默认)</span><br><span class="line">     * --------------</span><br><span class="line">     * </span><br><span class="line">     * 光标一个单词一个单词的移动</span><br><span class="line">     * &#123; &quot;keys&quot;: [&quot;ctrl+left&quot;], &quot;command&quot;: &quot;move&quot;, &quot;args&quot;: &#123;&quot;by&quot;: &quot;words&quot;, &quot;forward&quot;: false&#125; &#125;,</span><br><span class="line">     * 按住shift来选文字时, 一个个单词的选而不是一个个字母</span><br><span class="line">     * &#123; &quot;keys&quot;: [&quot;ctrl+shift+left&quot;], &quot;command&quot;: &quot;move&quot;, &quot;args&quot;: &#123;&quot;by&quot;: &quot;words&quot;, &quot;forward&quot;: false, &quot;extend&quot;: true&#125; &#125;,</span><br><span class="line">     *</span><br><span class="line">     * 类似光标一个个单词的移动</span><br><span class="line">     * &#123; &quot;keys&quot;: [&quot;alt+left&quot;], &quot;command&quot;: &quot;move&quot;, &quot;args&quot;: &#123;&quot;by&quot;: &quot;subwords&quot;, &quot;forward&quot;: false&#125; &#125;,</span><br><span class="line">     * &#123; &quot;keys&quot;: [&quot;alt+shift+right&quot;], &quot;command&quot;: &quot;move&quot;, &quot;args&quot;: &#123;&quot;by&quot;: &quot;subword_ends&quot;, &quot;forward&quot;: true, &quot;extend&quot;: true&#125; &#125;,</span><br><span class="line">     *</span><br><span class="line">     * 缩进</span><br><span class="line">     * &#123; &quot;keys&quot;: [&quot;ctrl+]&quot;], &quot;command&quot;: &quot;indent&quot; &#125;,</span><br><span class="line">     * &#123; &quot;keys&quot;: [&quot;ctrl+[&quot;], &quot;command&quot;: &quot;unindent&quot; &#125;,</span><br><span class="line">     *</span><br><span class="line">     * 删除整个单词</span><br><span class="line">     * &#123; &quot;keys&quot;: [&quot;ctrl+backspace&quot;], &quot;command&quot;: &quot;delete_word&quot;, &quot;args&quot;: &#123; &quot;forward&quot;: false &#125; &#125;,</span><br><span class="line">     * &#123; &quot;keys&quot;: [&quot;ctrl+delete&quot;], &quot;command&quot;: &quot;delete_word&quot;, &quot;args&quot;: &#123; &quot;forward&quot;: true &#125; &#125;,</span><br><span class="line">     *</span><br><span class="line">     * 行排序(例如选中几个JSON字段, 让这些字段名按字母顺序排序)</span><br><span class="line">     * &#123; &quot;keys&quot;: [&quot;f9&quot;], &quot;command&quot;: &quot;sort_lines&quot;, &quot;args&quot;: &#123;&quot;case_sensitive&quot;: false&#125; &#125;,</span><br><span class="line">     *</span><br><span class="line">     * 参考</span><br><span class="line">     * ----------------------</span><br><span class="line">     * Using Sublime Text as your IDE</span><br><span class="line">     * http://www.chromium.org/developers/sublime-text</span><br><span class="line">     *</span><br><span class="line">     * Web Development With Sublime Text 2</span><br><span class="line">     * http://www.paulund.co.uk/web-development-with-sublime-text-2</span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line">    // editor配置</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+v&quot;], &quot;command&quot;: &quot;paste_and_indent&quot; &#125;,</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+shift+v&quot;], &quot;command&quot;: &quot;paste&quot; &#125;,</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 适配eclipse快捷键</span><br><span class="line">     *</span><br><span class="line">     * 下面这位仁兄早就有了这个想法</span><br><span class="line">     * Eclipse shortcuts for Sublime Text 2</span><br><span class="line">     * http://icoloma.blogspot.com/2011/10/eclipse-shortcuts-for-sublime-text-2.html</span><br><span class="line">     */</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;alt+/&quot;], &quot;command&quot;: &quot;auto_complete&quot; &#125;,</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+i&quot;], &quot;command&quot;: &quot;reindent&quot; &#125;,</span><br><span class="line">    // 当前行和下面一行交互位置</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;alt+up&quot;], &quot;command&quot;: &quot;swap_line_up&quot; &#125;,</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;alt+down&quot;], &quot;command&quot;: &quot;swap_line_down&quot; &#125;,</span><br><span class="line">    // 复制当前行到上一行</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+alt+up&quot;], &quot;command&quot;: &quot;duplicate_line&quot; &#125;,</span><br><span class="line">    // 复制当前行到下一行</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+alt+down&quot;], &quot;command&quot;: &quot;duplicate_line&quot; &#125;,</span><br><span class="line">    // 删除整行</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+d&quot;], &quot;command&quot;: &quot;run_macro_file&quot;, &quot;args&quot;: &#123;&quot;file&quot;: &quot;Packages/Default/Delete Line.sublime-macro&quot;&#125; &#125;,</span><br><span class="line">    // 光标移动到指定行</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+l&quot;], &quot;command&quot;: &quot;show_overlay&quot;, &quot;args&quot;: &#123;&quot;overlay&quot;: &quot;goto&quot;, &quot;text&quot;: &quot;:&quot;&#125; &#125;,</span><br><span class="line">    // 快速定位到选中的文字</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+k&quot;], &quot;command&quot;: &quot;find_under_expand_skip&quot; &#125;,</span><br><span class="line">    // &#123; &quot;keys&quot;: [&quot;ctrl+shift+x&quot;], &quot;command&quot;: &quot;swap_case&quot; &#125;,</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+shift+x&quot;], &quot;command&quot;: &quot;upper_case&quot; &#125;,</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+shift+y&quot;], &quot;command&quot;: &quot;lower_case&quot; &#125;,</span><br><span class="line">    // 在当前行的下一行插入空行(这时鼠标可以在当前行的任一位置, 不一定是最后)</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;shift+enter&quot;], &quot;command&quot;: &quot;run_macro_file&quot;, &quot;args&quot;: &#123;&quot;file&quot;: &quot;Packages/Default/Add Line.sublime-macro&quot;&#125; &#125;,</span><br><span class="line">    // 定位到对于的匹配符(譬如&#123;&#125;)(从前面定位后面时,光标要在匹配符里面,后面到前面,则反之)</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+shift+p&quot;], &quot;command&quot;: &quot;move_to&quot;, &quot;args&quot;: &#123;&quot;to&quot;: &quot;brackets&quot;&#125; &#125;,</span><br><span class="line">    // 这个命令默认使用的是ctrl+shift+p</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+p&quot;], &quot;command&quot;: &quot;show_overlay&quot;, &quot;args&quot;: &#123;&quot;overlay&quot;: &quot;command_palette&quot;&#125; &#125;,</span><br><span class="line">    // outline</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+o&quot;], &quot;command&quot;: &quot;show_overlay&quot;, &quot;args&quot;: &#123;&quot;overlay&quot;: &quot;goto&quot;, &quot;text&quot;: &quot;@&quot;&#125; &#125;,</span><br><span class="line">    // 当前文件中的关键字(方便快速查找内容)</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+alt+o&quot;], &quot;command&quot;: &quot;show_overlay&quot;, &quot;args&quot;: &#123;&quot;overlay&quot;: &quot;goto&quot;, &quot;text&quot;: &quot;#&quot;&#125; &#125;,</span><br><span class="line">    // open resource</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+shift+r&quot;], &quot;command&quot;: &quot;show_overlay&quot;, &quot;args&quot;: &#123;&quot;overlay&quot;: &quot;goto&quot;, &quot;show_files&quot;: true&#125; &#125;,</span><br><span class="line">    // 文件内查找/替换</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+f&quot;], &quot;command&quot;: &quot;show_panel&quot;, &quot;args&quot;: &#123;&quot;panel&quot;: &quot;replace&quot;&#125; &#125;,</span><br><span class="line">    // 全局查找/替换, 在查询结果中双击跳转到匹配位置</span><br><span class="line">    &#123;&quot;keys&quot;: [&quot;ctrl+h&quot;], &quot;command&quot;: &quot;show_panel&quot;, &quot;args&quot;: &#123;&quot;panel&quot;: &quot;find_in_files&quot;&#125; &#125;,</span><br><span class="line"></span><br><span class="line">    // plugin配置</span><br><span class="line">    &#123; &quot;keys&quot;: [&quot;alt+a&quot;], &quot;command&quot;: &quot;alignment&quot; &#125;,</span><br><span class="line">    &#123;&quot;keys&quot;: [&quot;ctrl+shift+f&quot;], &quot;command&quot;: &quot;js_format&quot;&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h1 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h1><img src="/article/4192108374/38004a5d41b08848d83c87f28ce20727.jpeg" title="效果图">]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何实现一个高效的Mysql分页</title>
      <link href="/article/2467272890.html"/>
      <url>/article/2467272890.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Mysql的优化是非常重要的。其他最常用也最需要优化的就是limit。Mysql的limit给分页带来了极大的方便，但数据量一大的时候，limit的性能就急剧下降。</p><a id="more"></a><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mysql&gt; EXPLAIN SELECT * FROM user ORDER BY id DESC LIMIT 10000, 20;</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+------+-------+-------+</span></span><br><span class="line">| id | select_type | table | type  | possible_keys | key     | key_len | ref  | rows  | Extra |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+------+-------+-------+</span></span><br><span class="line">|  1 | SIMPLE      | user  | index | NULL          | PRIMARY | 4       | NULL | 10020 | NULL  |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+------+-------+-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">explain</span> <span class="keyword">select</span> <span class="keyword">id</span>,nickname,username,<span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">id</span> &gt; <span class="number">2500000</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">id</span> <span class="keyword">limit</span> <span class="number">10</span>;</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+------+---------+-----------------------+</span></span><br><span class="line">| id | select_type | table | type  | possible_keys | key     | key_len | ref  | rows    | Extra                 |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+------+---------+-----------------------+</span></span><br><span class="line">|  1 | SIMPLE      | user  | range | PRIMARY       | PRIMARY | 4       | NULL | 2450824 | Using index condition |</span><br><span class="line">+<span class="comment">----+-------------+-------+-------+---------------+---------+---------+------+---------+-----------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>limit 10000,20的意思扫描满足条件的10020行，扔掉前面的10000行，返回最后的20行，问题就在这里，如果是limit 100000,100，需要扫描100100行，在一个高并发的应用里，每次查询需要扫描超过10W行，性能肯定大打折扣。文中还提到limit n性能是没问题的，因为只扫描n行。</p><p>有一种叫”clue”的做法，给翻页提供一些”线索”，比如还是SELECT * FROM user ORDER BY id DESC，按id降序分页，每页20条，当前是第10页，当前页条目id最大的是9527，最小的是9500，如果我们只提供”上一页”、”下一页”这样的跳转（不提供到第N页的跳转），那么在处理”上一页”的时候SQL语句可以是：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> &gt; <span class="number">2500000</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">id</span> <span class="keyword">ASC</span> <span class="keyword">LIMIT</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure><p>处理”下一页”的时候SQL语句可以是：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> &lt; <span class="number">9500</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">id</span> <span class="keyword">DESC</span> <span class="keyword">LIMIT</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure><p>不管翻多少页，每次查询只扫描20行。</p><p>缺点是只能提供”上一页”、”下一页”的链接形式，但是我们的产品经理非常喜欢”&lt;上一页 1 2 3 4 5 6 7 8 9 下一页&gt;”这样的链接方式，怎么办呢？</p><p>如果LIMIT m,n不可避免的话，要优化效率，只有尽可能的让m小一下，我们扩展前面的”clue”做法，还是SELECT * FROM user ORDER BY id DESC，按id降序分页，每页20条，当前是第10页，当前页条目id最大的是9527，最小的是9500，比如要跳到第8页，我看的SQL语句可以这样写：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> &gt; <span class="number">9527</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">id</span> <span class="keyword">ASC</span> <span class="keyword">LIMIT</span> <span class="number">20</span>,<span class="number">20</span>;</span><br></pre></td></tr></table></figure><p>跳转到第13页:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span> <span class="keyword">WHERE</span> <span class="keyword">id</span> &lt; <span class="number">9500</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">id</span> <span class="keyword">DESC</span> <span class="keyword">LIMIT</span> <span class="number">40</span>,<span class="number">20</span>;</span><br></pre></td></tr></table></figure><p>原理还是一样，记录住当前页id的最大值和最小值，计算跳转页面和当前页相对偏移，由于页面相近，这个偏移量不会很大，这样的话m值相对较小，大大减少扫描的行数。其实传统的limit m,n，相对的偏移一直是第一页，这样的话越翻到后面，效率越差，而上面给出的方法就没有这样的问题。</p><p>注意SQL语句里面的ASC和DESC，如果是ASC取出来的结果，显示的时候记得倒置一下。</p><img src="/article/2467272890/2584b7da572777a8e0684be3efa90ce8.png" title="效果图">]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx+Lua实现访问日志收集系统</title>
      <link href="/article/1758295789.html"/>
      <url>/article/1758295789.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>网站数据统计分析工具是网站站长和运营人员经常使用的一种工具，比较常用的有谷歌分析、百度统计和腾讯分析等等。所有这些统计分析工具的第一步都是网站访问数据的收集。目前主流的数据收集方式基本都是基于javascript的。</p><a id="more"></a><h1 id="收集信息"><a href="#收集信息" class="headerlink" title="收集信息"></a>收集信息</h1><table><thead><tr><th>名称</th><th align="center">途径</th><th align="right">备注</th></tr></thead><tbody><tr><td>访问时间</td><td align="center">web server</td><td align="right">Nginx $msec</td></tr><tr><td>IP</td><td align="center">web server</td><td align="right">Nginx $remote_addr</td></tr><tr><td>域名</td><td align="center">javascript</td><td align="right">document.domain</td></tr><tr><td>URL</td><td align="center">javascript</td><td align="right">document.URL</td></tr><tr><td>页面标题</td><td align="center">javascript</td><td align="right">document.title</td></tr><tr><td>分辨率</td><td align="center">javascript</td><td align="right">window.screen.height &amp; width</td></tr><tr><td>颜色深度</td><td align="center">javascript</td><td align="right">window.screen.colorDepth</td></tr><tr><td>Referrer</td><td align="center">javascript</td><td align="right">document.referrer</td></tr><tr><td>浏览客户端</td><td align="center">web server</td><td align="right">Nginx $http_user_agent</td></tr><tr><td>客户端语言</td><td align="center">javascript</td><td align="right">navigator.language</td></tr><tr><td>访客标识</td><td align="center">cookie</td><td align="right"></td></tr><tr><td>网站标识</td><td align="center">javascript</td><td align="right">自定义对象</td></tr><tr><td># 埋点代码</td><td align="center"></td><td align="right"></td></tr><tr><td><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;  </span><br><span class="line"><span class="keyword">var</span> _maq = _maq || [];  </span><br><span class="line">_maq.push([<span class="string">'_setAccount'</span>, <span class="string">'网站标识'</span>]);  </span><br><span class="line">   </span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;  </span><br><span class="line">    <span class="keyword">var</span> ma = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>); ma.type = <span class="string">'text/javascript'</span>; ma.async = <span class="literal">true</span>;  </span><br><span class="line">    ma.src = (<span class="string">'https:'</span> == <span class="built_in">document</span>.location.protocol ? <span class="string">'https://tj'</span> : <span class="string">'http://tj'</span>) + <span class="string">'.tongji.com/ma.js'</span>;  </span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">document</span>.getElementsByTagName(<span class="string">'script'</span>)[<span class="number">0</span>]; s.parentNode.insertBefore(ma, s);  </span><br><span class="line">&#125;)();  </span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></td><td align="center"></td><td align="right"></td></tr></tbody></table><h1 id="前端统计脚本"><a href="#前端统计脚本" class="headerlink" title="前端统计脚本"></a>前端统计脚本</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  </span><br><span class="line">    <span class="keyword">var</span> params = &#123;&#125;;  </span><br><span class="line">    <span class="comment">//Document对象数据  </span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">document</span>) &#123;  </span><br><span class="line">        params.domain = <span class="built_in">document</span>.domain || <span class="string">''</span>;  </span><br><span class="line">        params.url = <span class="built_in">document</span>.URL || <span class="string">''</span>;  </span><br><span class="line">        params.title = <span class="built_in">document</span>.title || <span class="string">''</span>;  </span><br><span class="line">        params.referrer = <span class="built_in">document</span>.referrer || <span class="string">''</span>;  </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="comment">//Window对象数据  </span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span> &amp;&amp; <span class="built_in">window</span>.screen) &#123;  </span><br><span class="line">        params.sh = <span class="built_in">window</span>.screen.height || <span class="number">0</span>;  </span><br><span class="line">        params.sw = <span class="built_in">window</span>.screen.width || <span class="number">0</span>;  </span><br><span class="line">        params.cd = <span class="built_in">window</span>.screen.colorDepth || <span class="number">0</span>;  </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="comment">//navigator对象数据  </span></span><br><span class="line">    <span class="keyword">if</span>(navigator) &#123;  </span><br><span class="line">        params.lang = navigator.language || <span class="string">''</span>;  </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="comment">//解析_maq配置  </span></span><br><span class="line">    <span class="keyword">if</span>(_maq) &#123;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> _maq) &#123;  </span><br><span class="line">            <span class="keyword">switch</span>(_maq[i][<span class="number">0</span>]) &#123;  </span><br><span class="line">                <span class="keyword">case</span> <span class="string">'_setAccount'</span>:  </span><br><span class="line">                    params.account = _maq[i][<span class="number">1</span>];  </span><br><span class="line">                    <span class="keyword">break</span>;  </span><br><span class="line">                <span class="keyword">default</span>:  </span><br><span class="line">                    <span class="keyword">break</span>;  </span><br><span class="line">            &#125;    </span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="comment">//拼接参数串  </span></span><br><span class="line">    <span class="keyword">var</span> args = <span class="string">''</span>;  </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> params) &#123;  </span><br><span class="line">        <span class="keyword">if</span>(args != <span class="string">''</span>) &#123;  </span><br><span class="line">            args += <span class="string">'&amp;'</span>;  </span><br><span class="line">        &#125;    </span><br><span class="line">        args += i + <span class="string">'='</span> + <span class="built_in">encodeURIComponent</span>(params[i]);  </span><br><span class="line">    &#125;    </span><br><span class="line">   </span><br><span class="line">    <span class="comment">//通过Image对象请求后端脚本  </span></span><br><span class="line">    <span class="keyword">var</span> img = <span class="keyword">new</span> Image(<span class="number">1</span>, <span class="number">1</span>);  </span><br><span class="line">    img.src = <span class="string">'http://tj.tongji.com/1.gif?'</span> + args;  </span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h1 id="日志格式"><a href="#日志格式" class="headerlink" title="日志格式"></a>日志格式</h1><p>需要在nginx的配置文件中定义日志格式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#日志采用每行一条记录的方式，采用不可见字符^A（ascii码0x01，Linux下可通过ctrl + v ctrl + a输入，下文均用“^A”表示不可见字符0x01），具体格式如下：</span></span><br><span class="line"><span class="comment">#时间^AIP^A域名^AURL^A页面标题^AReferrer^A分辨率高^A分辨率宽^A颜色深度^A语言^A客户端信息^A用户标识^A网站标识。</span></span><br><span class="line"><span class="comment">#注意这里以u_开头的是我们待会会自己定义的变量，其它的是nginx内置变量</span></span><br><span class="line">log_format tick <span class="string">"<span class="variable">$msec</span>^A<span class="variable">$remote_addr</span>^A<span class="variable">$u_domain</span>^A<span class="variable">$u_url</span>^A<span class="variable">$u_title</span>^A<span class="variable">$u_referrer</span>^A<span class="variable">$u_sh</span>^A<span class="variable">$u_sw</span>^A<span class="variable">$u_cd</span>^A<span class="variable">$u_lang</span>^A<span class="variable">$http_user_agent</span>^A<span class="variable">$u_utrace</span>^A<span class="variable">$u_account</span>"</span>;</span><br></pre></td></tr></table></figure><h1 id="Nginx-Lua配置"><a href="#Nginx-Lua配置" class="headerlink" title="Nginx+Lua配置"></a>Nginx+Lua配置</h1><p>nginx配置本身的逻辑表达能力有限，这里选用了OpenResty做这个事情。OpenResty是一个基于Nginx扩展出的高性能应用开发平台，内部集成了诸多有用的模块，其中的核心是通过ngx_lua模块集成了 Lua，从而在nginx配置文件中可以通过Lua来表述业务。这里用到了诸多第三方ngxin模块（全都包含在OpenResty中了）</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> /<span class="number">1</span>.gif &#123;  </span><br><span class="line">    <span class="comment">#伪装成gif文件  </span></span><br><span class="line">    <span class="attribute">default_type</span> image/gif;     </span><br><span class="line">    <span class="comment">#本身关闭access_log，通过subrequest记录log  </span></span><br><span class="line">    <span class="attribute">access_log</span> <span class="literal">off</span>;  </span><br><span class="line">   </span><br><span class="line">    <span class="attribute">access_by_lua</span> <span class="string">"  </span></span><br><span class="line"><span class="string">        -- 用户跟踪cookie名为__utrace  </span></span><br><span class="line"><span class="string">        local uid = ngx.var.cookie___utrace         </span></span><br><span class="line"><span class="string">        if not uid then  </span></span><br><span class="line"><span class="string">            -- 如果没有则生成一个跟踪cookie，算法为md5(时间戳+IP+客户端信息)  </span></span><br><span class="line"><span class="string">            uid = ngx.md5(ngx.now() .. ngx.var.remote_addr .. ngx.var.http_user_agent)  </span></span><br><span class="line"><span class="string">        end  </span></span><br><span class="line"><span class="string">        ngx.header['Set-Cookie'] = &#123;'__utrace=' .. uid .. '; path=/'&#125;  </span></span><br><span class="line"><span class="string">        if ngx.var.arg_domain then  </span></span><br><span class="line"><span class="string">            -- 通过subrequest到/i-log记录日志，将参数和用户跟踪cookie带过去  </span></span><br><span class="line"><span class="string">            ngx.location.capture('/i-log?' .. ngx.var.args .. '&amp;utrace=' .. uid)  </span></span><br><span class="line"><span class="string">        end  </span></span><br><span class="line"><span class="string">    "</span>;   </span><br><span class="line">   </span><br><span class="line">    <span class="comment">#此请求不缓存  </span></span><br><span class="line">    <span class="attribute">add_header</span> Expires <span class="string">"Fri, 01 Jan 1980 00:00:00 GMT"</span>;  </span><br><span class="line">    <span class="attribute">add_header</span> Pragma <span class="string">"no-cache"</span>;  </span><br><span class="line">    <span class="attribute">add_header</span> Cache-Control <span class="string">"no-cache, max-age=0, must-revalidate"</span>;  </span><br><span class="line">   </span><br><span class="line">    <span class="comment">#返回一个1×1的空gif图片  </span></span><br><span class="line">    empty_gif;  </span><br><span class="line">&#125;    </span><br><span class="line">   </span><br><span class="line"><span class="attribute">location</span> /i-log &#123;  </span><br><span class="line">    <span class="comment">#内部location，不允许外部直接访问  </span></span><br><span class="line">    internal;  </span><br><span class="line">   </span><br><span class="line">    <span class="comment">#设置变量，注意需要unescape  </span></span><br><span class="line">    <span class="attribute">set_unescape_uri</span> <span class="variable">$u_domain</span> <span class="variable">$arg_domain</span>;  </span><br><span class="line">    <span class="attribute">set_unescape_uri</span> <span class="variable">$u_url</span> <span class="variable">$arg_url</span>;  </span><br><span class="line">    <span class="attribute">set_unescape_uri</span> <span class="variable">$u_title</span> <span class="variable">$arg_title</span>;  </span><br><span class="line">    <span class="attribute">set_unescape_uri</span> <span class="variable">$u_referrer</span> <span class="variable">$arg_referrer</span>;  </span><br><span class="line">    <span class="attribute">set_unescape_uri</span> <span class="variable">$u_sh</span> <span class="variable">$arg_sh</span>;  </span><br><span class="line">    <span class="attribute">set_unescape_uri</span> <span class="variable">$u_sw</span> <span class="variable">$arg_sw</span>;  </span><br><span class="line">    <span class="attribute">set_unescape_uri</span> <span class="variable">$u_cd</span> <span class="variable">$arg_cd</span>;  </span><br><span class="line">    <span class="attribute">set_unescape_uri</span> <span class="variable">$u_lang</span> <span class="variable">$arg_lang</span>;  </span><br><span class="line">    <span class="attribute">set_unescape_uri</span> <span class="variable">$u_utrace</span> <span class="variable">$arg_utrace</span>;  </span><br><span class="line">    <span class="attribute">set_unescape_uri</span> <span class="variable">$u_account</span> <span class="variable">$arg_account</span>;  </span><br><span class="line">   </span><br><span class="line">    <span class="comment">#打开日志  </span></span><br><span class="line">    <span class="attribute">log_subrequest</span> <span class="literal">on</span>;  </span><br><span class="line">    <span class="comment">#记录日志到ma.log，实际应用中最好加buffer，格式为tick  </span></span><br><span class="line">    <span class="attribute">access_log</span> /path/to/logs/directory/ma.log tick;  </span><br><span class="line">   </span><br><span class="line">    <span class="comment">#输出空字符串  </span></span><br><span class="line">    <span class="attribute">echo</span> <span class="string">''</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="日志轮转"><a href="#日志轮转" class="headerlink" title="日志轮转"></a>日志轮转</h1><p>真正的日志收集系统访问日志会非常多，时间一长文件变得很大，而且日志放在一个文件不便于管理。所以通常要按时间段将日志切分，例如每天或每小时切分一个日志。这里为了效果明显，每一小时切分一个日志。并通过crontab定时调用一个shell脚本实现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#这个脚本将ma.log移动到指定文件夹并重命名为ma-&#123;yyyymmddhh&#125;.log，然后向nginx发送USR1信号令其重新打开日志文件。</span></span><br><span class="line">_prefix=<span class="string">"/path/to/nginx"</span> </span><br><span class="line">time=`date +%Y%m%d%H`  </span><br><span class="line">   </span><br><span class="line">mv <span class="variable">$&#123;_prefix&#125;</span>/logs/ma.log <span class="variable">$&#123;_prefix&#125;</span>/logs/ma/ma-<span class="variable">$&#123;time&#125;</span>.<span class="built_in">log</span>  </span><br><span class="line"><span class="built_in">kill</span> -USR1 `cat <span class="variable">$&#123;_prefix&#125;</span>/logs/nginx.pid`</span><br></pre></td></tr></table></figure><p>Contab配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">59  *  *  *  * root /path/to/directory/rotatelog.sh</span><br></pre></td></tr></table></figure><h1 id="关于分析"><a href="#关于分析" class="headerlink" title="关于分析"></a>关于分析</h1><p>注意，原始日志最好尽量多的保留信息而不要做过多过滤和处理。例如上面的MyAnalytics保留了毫秒级时间戳而不是格式化后的时间，时间的格式化是后面的系统做的事而不是日志收集系统的责任。后面的系统根据原始日志可以分析出很多东西，例如通过IP库可以定位访问者的地域、user agent中可以得到访问者的操作系统、浏览器等信息，再结合复杂的分析模型，就可以做流量、来源、访客、地域、路径等分析了。当然，一般不会直接对原始日志分析，而是会将其清洗格式化后转存到其它地方，如MySQL或HBase中再做分析。</p><img src="/article/1758295789/5ced591f3d264fd288be442c591cb26b.png" title="日志记录">]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之插入排序的实现</title>
      <link href="/article/1225165845.html"/>
      <url>/article/1225165845.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>有一个已经有序的数据序列，要求在这个已经排好的数据序列中插入一个数，但要求插入后此数据序列仍然有序，这个时候就要用到一种新的排序方法——插入排序法,插入排序的基本操作就是将一个数据插入到已经排好序的有序数据中，从而得到一个新的、个数加一的有序数据，算法适用于少量数据的排序，时间复杂度为O(n^2)。是稳定的排序方法。插入算法把要排序的数组分成两部分：第一部分包含了这个数组的所有元素，但将最后一个元素除外（让数组多一个空间才有插入的位置），而第二部分就只包含这一个元素（即待插入元素）。在第一部分排序完成后，再将这个最后元素插入到已排好序的第一部分中。<br>插入排序的基本思想是：每步将一个待排序的纪录，按其关键码值的大小插入前面已经排序的文件中适当位置上，直到全部插入完为止。</p><a id="more"></a><h1 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h1><img src="/article/1225165845/6ab27c0b22dfba06bfff027f0eb4e89399.gif" title="原理图"><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 插入排序法函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertion_sort</span><span class="params">(&amp;$array)</span> </span>&#123;</span><br><span class="line">$array_length = count($array); <span class="comment">// 数组的长度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 进行数组排序，视第一个数组元素属于一个有序的数组。</span></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">1</span>; $i &lt; $array_length; $i++) &#123;</span><br><span class="line">$inserted_value = $array[$i]; <span class="comment">// 待插入的数组元素</span></span><br><span class="line">$inserted_index = $i - <span class="number">1</span>; <span class="comment">// 待插入的位置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 当$inserted_value前面还有其他数组元素并且值比它小的时候</span></span><br><span class="line"><span class="keyword">while</span> (($inserted_index &gt;= <span class="number">0</span>) &amp;&amp; ($inserted_value &lt; $array[$inserted_index])) &#123;</span><br><span class="line">$array[$inserted_index + <span class="number">1</span>] = $array[$inserted_index]; <span class="comment">// $inserted_value的前一个数组元素被后移</span></span><br><span class="line">$inserted_index--; <span class="comment">// 待插入的位置递减变化</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 当$inserted_index的值发生了变化才进行插入操作</span></span><br><span class="line"><span class="keyword">if</span> (($inserted_index + <span class="number">1</span>) != $i) &#123;</span><br><span class="line"><span class="comment">// 找到了$inserted_value的正确位置，插入该元素。</span></span><br><span class="line">$array[$inserted_index + <span class="number">1</span>] = $inserted_value;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组打印函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">print_array</span><span class="params">($array)</span> </span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> ($array <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\$array[$key] = $value &lt;br /&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化数组</span></span><br><span class="line">$array = <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">-1</span>, <span class="number">3</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">9</span>, <span class="number">-10</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用函数</span></span><br><span class="line">insertion_sort($array);</span><br><span class="line">print_array($array);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 输出</span></span><br><span class="line"><span class="comment">$array[0] = -10 </span></span><br><span class="line"><span class="comment">$array[1] = -1 </span></span><br><span class="line"><span class="comment">$array[2] = 1 </span></span><br><span class="line"><span class="comment">$array[3] = 2 </span></span><br><span class="line"><span class="comment">$array[4] = 3 </span></span><br><span class="line"><span class="comment">$array[5] = 3 </span></span><br><span class="line"><span class="comment">$array[6] = 5 </span></span><br><span class="line"><span class="comment">$array[7] = 6 </span></span><br><span class="line"><span class="comment">$array[8] = 7 </span></span><br><span class="line"><span class="comment">$array[9] = 9</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 算法实现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之RBAC权限开发</title>
      <link href="/article/400587758.html"/>
      <url>/article/400587758.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>基于角色的访问控制（Role-Based Access Control）作为传统访问控制（自主访问，强制访问）的有前景的代替受到广泛的关注。在RBAC中，权限与角色相关联，用户通过成为适当角色的成员而得到这些角色的权限。这就极大地简化了权限的管理。在一个组织中，角色是为了完成各种工作而创造，用户则依据它的责任和资格来被指派相应的角色，用户可以很容易地从一个角色被指派到另一个角色。角色可依新的需求和系统的合并而赋予新的权限，而权限也可根据需要而从某角色中回收。角色与角色的关系可以建立起来以囊括更广泛的客观情况。</p><a id="more"></a><img src="/article/400587758/167f5a1eda6f687af6cdc01d7623802d.png" title="原理图"><h1 id="关于设计"><a href="#关于设计" class="headerlink" title="关于设计"></a>关于设计</h1><p>RBAC支持三个著名的安全原则：最小权限原则，责任分离原则，数据抽象原则。</p><ol><li>最小权限原则之所以被RBAC所支持，是因为RBAC可以将其角色配置成其完成任务所需要的最小的权限集。</li><li>责任分离原则可以通过调用相互独立互斥的角色来共同完成敏感的任务而体现，比如要求一个计帐员和财务管理员共参与同一过帐。</li><li>数据抽象可以通过权限的抽象来体现，如财务操作用借款、存款等抽象权限，而不用操作系统提供的典型的读、写、执行权限。然而这些原则必须通过RBAC各部件的详细配置才能得以体现。</li></ol><h1 id="RBAC实现参考ThinkPHP"><a href="#RBAC实现参考ThinkPHP" class="headerlink" title="RBAC实现参考ThinkPHP"></a>RBAC实现参考ThinkPHP</h1><h2 id="数据库设计"><a href="#数据库设计" class="headerlink" title="数据库设计"></a>数据库设计</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="keyword">access</span><span class="string">` (</span></span><br><span class="line"><span class="string">  `</span>role_id<span class="string">` smallint(6) unsigned NOT NULL COMMENT '角色ID',</span></span><br><span class="line"><span class="string">  `</span>node_id<span class="string">` smallint(6) unsigned NOT NULL COMMENT '节点ID',</span></span><br><span class="line"><span class="string">  `</span><span class="keyword">level</span><span class="string">` tinyint(1) NOT NULL,</span></span><br><span class="line"><span class="string">  `</span><span class="keyword">module</span><span class="string">` varchar(50) DEFAULT NULL,</span></span><br><span class="line"><span class="string">  KEY `</span>groupId<span class="string">` (`</span>role_id<span class="string">`),</span></span><br><span class="line"><span class="string">  KEY `</span>nodeId<span class="string">` (`</span>node_id<span class="string">`)</span></span><br><span class="line"><span class="string">) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT '角色节点关联表';</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CREATE TABLE IF NOT EXISTS `</span>node<span class="string">` (</span></span><br><span class="line"><span class="string">  `</span><span class="keyword">id</span><span class="string">` smallint(6) unsigned NOT NULL AUTO_INCREMENT COMMENT '节点ID',</span></span><br><span class="line"><span class="string">  `</span><span class="keyword">name</span><span class="string">` varchar(20) NOT NULL  COMMENT '节点名称',</span></span><br><span class="line"><span class="string">  `</span>title<span class="string">` varchar(50) DEFAULT NULL COMMENT '节点中文名',</span></span><br><span class="line"><span class="string">  `</span><span class="keyword">status</span><span class="string">` tinyint(1) DEFAULT '0' COMMENT '启用状态',</span></span><br><span class="line"><span class="string">  `</span>remark<span class="string">` varchar(255) DEFAULT NULL COMMENT '备注信息',</span></span><br><span class="line"><span class="string">  `</span><span class="keyword">sort</span><span class="string">` smallint(6) unsigned DEFAULT NULL COMMENT '排序值',</span></span><br><span class="line"><span class="string">  `</span>pid<span class="string">` smallint(6) unsigned NOT NULL COMMENT '父节点ID',</span></span><br><span class="line"><span class="string">  `</span><span class="keyword">level</span><span class="string">` tinyint(1) unsigned NOT NULL COMMENT '节点类型：1:表示应用（模块）；2:表示控制器；3：表示方法',</span></span><br><span class="line"><span class="string">  PRIMARY KEY (`</span><span class="keyword">id</span><span class="string">`),</span></span><br><span class="line"><span class="string">  KEY `</span><span class="keyword">level</span><span class="string">` (`</span><span class="keyword">level</span><span class="string">`),</span></span><br><span class="line"><span class="string">  KEY `</span>pid<span class="string">` (`</span>pid<span class="string">`),</span></span><br><span class="line"><span class="string">  KEY `</span><span class="keyword">status</span><span class="string">` (`</span><span class="keyword">status</span><span class="string">`),</span></span><br><span class="line"><span class="string">  KEY `</span><span class="keyword">name</span><span class="string">` (`</span><span class="keyword">name</span><span class="string">`)</span></span><br><span class="line"><span class="string">) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COMMENT '节点表';</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CREATE TABLE IF NOT EXISTS `</span><span class="keyword">role</span><span class="string">` (</span></span><br><span class="line"><span class="string">  `</span><span class="keyword">id</span><span class="string">` smallint(6) unsigned NOT NULL AUTO_INCREMENT COMMENT '角色ID',</span></span><br><span class="line"><span class="string">  `</span><span class="keyword">name</span><span class="string">` varchar(20) NOT NULL COMMENT '角色名称',</span></span><br><span class="line"><span class="string">  `</span>pid<span class="string">` smallint(6) DEFAULT NULL COMMENT '父角色对应ID',</span></span><br><span class="line"><span class="string">  `</span><span class="keyword">status</span><span class="string">` tinyint(1) unsigned DEFAULT NULL COMMENT '状态',</span></span><br><span class="line"><span class="string">  `</span>remark<span class="string">` varchar(255) DEFAULT NULL COMMENT '备注',</span></span><br><span class="line"><span class="string">  PRIMARY KEY (`</span><span class="keyword">id</span><span class="string">`),</span></span><br><span class="line"><span class="string">  KEY `</span>pid<span class="string">` (`</span>pid<span class="string">`),</span></span><br><span class="line"><span class="string">  KEY `</span><span class="keyword">status</span><span class="string">` (`</span><span class="keyword">status</span><span class="string">`)</span></span><br><span class="line"><span class="string">) ENGINE=MyISAM  DEFAULT CHARSET=utf8 COMMENT '角色表' ;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CREATE TABLE IF NOT EXISTS `</span>role_user<span class="string">` (</span></span><br><span class="line"><span class="string">  `</span>role_id<span class="string">` mediumint(9) unsigned DEFAULT NULL COMMENT '角色ID',</span></span><br><span class="line"><span class="string">  `</span>user_id<span class="string">` char(32) DEFAULT NULL COMMENT '用户ID',</span></span><br><span class="line"><span class="string">  KEY `</span><span class="keyword">group_id</span><span class="string">` (`</span>role_id<span class="string">`),</span></span><br><span class="line"><span class="string">  KEY `</span>user_id<span class="string">` (`</span>user_id<span class="string">`)</span></span><br><span class="line"><span class="string">) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='角色用户关联表';</span></span><br></pre></td></tr></table></figure><h2 id="核心实现代码"><a href="#核心实现代码" class="headerlink" title="核心实现代码"></a>核心实现代码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Org</span>\<span class="title">Util</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Think</span>\<span class="title">Db</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> +------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> * 基于角色的数据库方式验证类</span></span><br><span class="line"><span class="comment"> +------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 配置文件增加设置</span></span><br><span class="line"><span class="comment">// USER_AUTH_ON 是否需要认证</span></span><br><span class="line"><span class="comment">// USER_AUTH_TYPE 认证类型</span></span><br><span class="line"><span class="comment">// USER_AUTH_KEY 认证识别号</span></span><br><span class="line"><span class="comment">// REQUIRE_AUTH_MODULE  需要认证模块</span></span><br><span class="line"><span class="comment">// NOT_AUTH_MODULE 无需认证模块</span></span><br><span class="line"><span class="comment">// USER_AUTH_GATEWAY 认证网关</span></span><br><span class="line"><span class="comment">// RBAC_DB_DSN  数据库连接DSN</span></span><br><span class="line"><span class="comment">// RBAC_ROLE_TABLE 角色表名称</span></span><br><span class="line"><span class="comment">// RBAC_USER_TABLE 用户表名称</span></span><br><span class="line"><span class="comment">// RBAC_ACCESS_TABLE 权限表名称</span></span><br><span class="line"><span class="comment">// RBAC_NODE_TABLE 节点表名称</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Rbac</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 认证方法</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">authenticate</span><span class="params">($map,$model=<span class="string">''</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($model)) $model =  C(<span class="string">'USER_AUTH_MODEL'</span>);</span><br><span class="line">        <span class="comment">//使用给定的Map进行认证</span></span><br><span class="line">        <span class="keyword">return</span> M($model)-&gt;where($map)-&gt;find();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用于检测用户权限的方法,并保存到Session中</span></span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">saveAccessList</span><span class="params">($authId=null)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">null</span>===$authId)   $authId = $_SESSION[C(<span class="string">'USER_AUTH_KEY'</span>)];</span><br><span class="line">        <span class="comment">// 如果使用普通权限模式，保存当前用户的访问权限列表</span></span><br><span class="line">        <span class="comment">// 对管理员开发所有权限</span></span><br><span class="line">        <span class="keyword">if</span>(C(<span class="string">'USER_AUTH_TYPE'</span>) !=<span class="number">2</span> &amp;&amp; !$_SESSION[C(<span class="string">'ADMIN_AUTH_KEY'</span>)] )</span><br><span class="line">            $_SESSION[<span class="string">'_ACCESS_LIST'</span>]=<span class="keyword">self</span>::getAccessList($authId);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取得模块的所属记录访问权限列表 返回有权限的记录ID数组</span></span><br><span class="line"><span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getRecordAccessList</span><span class="params">($authId=null,$module=<span class="string">''</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">null</span>===$authId)   $authId = $_SESSION[C(<span class="string">'USER_AUTH_KEY'</span>)];</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($module))  $module=CONTROLLER_NAME;</span><br><span class="line">        <span class="comment">//获取权限访问列表</span></span><br><span class="line">        $accessList = <span class="keyword">self</span>::getModuleAccessList($authId,$module);</span><br><span class="line">        <span class="keyword">return</span> $accessList;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//检查当前操作是否需要认证</span></span><br><span class="line">    <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkAccess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//如果项目要求认证，并且当前模块需要认证，则进行权限认证</span></span><br><span class="line">        <span class="keyword">if</span>( C(<span class="string">'USER_AUTH_ON'</span>) )&#123;</span><br><span class="line">$_module=<span class="keyword">array</span>();</span><br><span class="line">$_action=<span class="keyword">array</span>();</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">""</span> != C(<span class="string">'REQUIRE_AUTH_MODULE'</span>)) &#123;</span><br><span class="line">                <span class="comment">//需要认证的模块</span></span><br><span class="line">                $_module[<span class="string">'yes'</span>] = explode(<span class="string">','</span>,strtoupper(C(<span class="string">'REQUIRE_AUTH_MODULE'</span>)));</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//无需认证的模块</span></span><br><span class="line">                $_module[<span class="string">'no'</span>] = explode(<span class="string">','</span>,strtoupper(C(<span class="string">'NOT_AUTH_MODULE'</span>)));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//检查当前模块是否需要认证</span></span><br><span class="line">            <span class="keyword">if</span>((!<span class="keyword">empty</span>($_module[<span class="string">'no'</span>]) &amp;&amp; !in_array(strtoupper(CONTROLLER_NAME),$_module[<span class="string">'no'</span>])) || (!<span class="keyword">empty</span>($_module[<span class="string">'yes'</span>]) &amp;&amp; in_array(strtoupper(CONTROLLER_NAME),$_module[<span class="string">'yes'</span>]))) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">""</span> != C(<span class="string">'REQUIRE_AUTH_ACTION'</span>)) &#123;</span><br><span class="line"><span class="comment">//需要认证的操作</span></span><br><span class="line">$_action[<span class="string">'yes'</span>] = explode(<span class="string">','</span>,strtoupper(C(<span class="string">'REQUIRE_AUTH_ACTION'</span>)));</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">//无需认证的操作</span></span><br><span class="line">$_action[<span class="string">'no'</span>] = explode(<span class="string">','</span>,strtoupper(C(<span class="string">'NOT_AUTH_ACTION'</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//检查当前操作是否需要认证</span></span><br><span class="line"><span class="keyword">if</span>((!<span class="keyword">empty</span>($_action[<span class="string">'no'</span>]) &amp;&amp; !in_array(strtoupper(ACTION_NAME),$_action[<span class="string">'no'</span>])) || (!<span class="keyword">empty</span>($_action[<span class="string">'yes'</span>]) &amp;&amp; in_array(strtoupper(ACTION_NAME),$_action[<span class="string">'yes'</span>]))) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 登录检查</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkLogin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//检查当前操作是否需要认证</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">self</span>::checkAccess()) &#123;</span><br><span class="line">            <span class="comment">//检查认证识别号</span></span><br><span class="line">            <span class="keyword">if</span>(!$_SESSION[C(<span class="string">'USER_AUTH_KEY'</span>)]) &#123;</span><br><span class="line">                <span class="keyword">if</span>(C(<span class="string">'GUEST_AUTH_ON'</span>)) &#123;</span><br><span class="line">                    <span class="comment">// 开启游客授权访问</span></span><br><span class="line">                    <span class="keyword">if</span>(!<span class="keyword">isset</span>($_SESSION[<span class="string">'_ACCESS_LIST'</span>]))</span><br><span class="line">                        <span class="comment">// 保存游客权限</span></span><br><span class="line">                        <span class="keyword">self</span>::saveAccessList(C(<span class="string">'GUEST_AUTH_ID'</span>));</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="comment">// 禁止游客访问跳转到认证网关</span></span><br><span class="line">                    redirect(PHP_FILE.C(<span class="string">'USER_AUTH_GATEWAY'</span>));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//权限认证的过滤器方法</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">AccessDecision</span><span class="params">($appName=MODULE_NAME)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//检查是否需要认证</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">self</span>::checkAccess()) &#123;</span><br><span class="line">            <span class="comment">//存在认证识别号，则进行进一步的访问决策</span></span><br><span class="line">            $accessGuid   =   md5($appName.CONTROLLER_NAME.ACTION_NAME);</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">empty</span>($_SESSION[C(<span class="string">'ADMIN_AUTH_KEY'</span>)])) &#123;</span><br><span class="line">                <span class="keyword">if</span>(C(<span class="string">'USER_AUTH_TYPE'</span>)==<span class="number">2</span>) &#123;</span><br><span class="line">                    <span class="comment">//加强验证和即时验证模式 更加安全 后台权限修改可以即时生效</span></span><br><span class="line">                    <span class="comment">//通过数据库进行访问检查</span></span><br><span class="line">                    $accessList = <span class="keyword">self</span>::getAccessList($_SESSION[C(<span class="string">'USER_AUTH_KEY'</span>)]);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 如果是管理员或者当前操作已经认证过，无需再次认证</span></span><br><span class="line">                    <span class="keyword">if</span>( $_SESSION[$accessGuid]) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//登录验证模式，比较登录后保存的权限访问列表</span></span><br><span class="line">                    $accessList = $_SESSION[<span class="string">'_ACCESS_LIST'</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//判断是否为组件化模式，如果是，验证其全模块名</span></span><br><span class="line">                <span class="keyword">if</span>(!<span class="keyword">isset</span>($accessList[strtoupper($appName)][strtoupper(CONTROLLER_NAME)][strtoupper(ACTION_NAME)])) &#123;</span><br><span class="line">                    $_SESSION[$accessGuid]  =   <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    $_SESSION[$accessGuid]=<span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//管理员无需认证</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     +----------------------------------------------------------</span></span><br><span class="line"><span class="comment">     * 取得当前认证号的所有权限列表</span></span><br><span class="line"><span class="comment">     +----------------------------------------------------------</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> integer $authId 用户ID</span></span><br><span class="line"><span class="comment">     +----------------------------------------------------------</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@access</span> public</span></span><br><span class="line"><span class="comment">     +----------------------------------------------------------</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAccessList</span><span class="params">($authId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Db方式权限数据</span></span><br><span class="line">        $db     =   Db::getInstance(C(<span class="string">'RBAC_DB_DSN'</span>));</span><br><span class="line">        $table = <span class="keyword">array</span>(<span class="string">'role'</span>=&gt;C(<span class="string">'RBAC_ROLE_TABLE'</span>),<span class="string">'user'</span>=&gt;C(<span class="string">'RBAC_USER_TABLE'</span>),<span class="string">'access'</span>=&gt;C(<span class="string">'RBAC_ACCESS_TABLE'</span>),<span class="string">'node'</span>=&gt;C(<span class="string">'RBAC_NODE_TABLE'</span>));</span><br><span class="line">        $sql    =   <span class="string">"select node.id,node.name from "</span>.</span><br><span class="line">                    $table[<span class="string">'role'</span>].<span class="string">" as role,"</span>.</span><br><span class="line">                    $table[<span class="string">'user'</span>].<span class="string">" as user,"</span>.</span><br><span class="line">                    $table[<span class="string">'access'</span>].<span class="string">" as access ,"</span>.</span><br><span class="line">                    $table[<span class="string">'node'</span>].<span class="string">" as node "</span>.</span><br><span class="line">                    <span class="string">"where user.user_id='&#123;$authId&#125;' and user.role_id=role.id and ( access.role_id=role.id  or (access.role_id=role.pid and role.pid!=0 ) ) and role.status=1 and access.node_id=node.id and node.level=1 and node.status=1"</span>;</span><br><span class="line">        $apps =   $db-&gt;query($sql);</span><br><span class="line">        $access =  <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">foreach</span>($apps <span class="keyword">as</span> $key=&gt;$app) &#123;</span><br><span class="line">            $appId=$app[<span class="string">'id'</span>];</span><br><span class="line">            $appName = $app[<span class="string">'name'</span>];</span><br><span class="line">            <span class="comment">// 读取项目的模块权限</span></span><br><span class="line">            $access[strtoupper($appName)]   =  <span class="keyword">array</span>();</span><br><span class="line">            $sql    =   <span class="string">"select node.id,node.name from "</span>.</span><br><span class="line">                    $table[<span class="string">'role'</span>].<span class="string">" as role,"</span>.</span><br><span class="line">                    $table[<span class="string">'user'</span>].<span class="string">" as user,"</span>.</span><br><span class="line">                    $table[<span class="string">'access'</span>].<span class="string">" as access ,"</span>.</span><br><span class="line">                    $table[<span class="string">'node'</span>].<span class="string">" as node "</span>.</span><br><span class="line">                    <span class="string">"where user.user_id='&#123;$authId&#125;' and user.role_id=role.id and ( access.role_id=role.id  or (access.role_id=role.pid and role.pid!=0 ) ) and role.status=1 and access.node_id=node.id and node.level=2 and node.pid=&#123;$appId&#125; and node.status=1"</span>;</span><br><span class="line">            $modules =   $db-&gt;query($sql);</span><br><span class="line">            <span class="comment">// 判断是否存在公共模块的权限</span></span><br><span class="line">            $publicAction  = <span class="keyword">array</span>();</span><br><span class="line">            <span class="keyword">foreach</span>($modules <span class="keyword">as</span> $key=&gt;$module) &#123;</span><br><span class="line">                $moduleId = $module[<span class="string">'id'</span>];</span><br><span class="line">                $moduleName = $module[<span class="string">'name'</span>];</span><br><span class="line">                <span class="keyword">if</span>(<span class="string">'PUBLIC'</span>== strtoupper($moduleName)) &#123;</span><br><span class="line">                $sql    =   <span class="string">"select node.id,node.name from "</span>.</span><br><span class="line">                    $table[<span class="string">'role'</span>].<span class="string">" as role,"</span>.</span><br><span class="line">                    $table[<span class="string">'user'</span>].<span class="string">" as user,"</span>.</span><br><span class="line">                    $table[<span class="string">'access'</span>].<span class="string">" as access ,"</span>.</span><br><span class="line">                    $table[<span class="string">'node'</span>].<span class="string">" as node "</span>.</span><br><span class="line">                    <span class="string">"where user.user_id='&#123;$authId&#125;' and user.role_id=role.id and ( access.role_id=role.id  or (access.role_id=role.pid and role.pid!=0 ) ) and role.status=1 and access.node_id=node.id and node.level=3 and node.pid=&#123;$moduleId&#125; and node.status=1"</span>;</span><br><span class="line">                    $rs =   $db-&gt;query($sql);</span><br><span class="line">                    <span class="keyword">foreach</span> ($rs <span class="keyword">as</span> $a)&#123;</span><br><span class="line">                        $publicAction[$a[<span class="string">'name'</span>]] = $a[<span class="string">'id'</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">unset</span>($modules[$key]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 依次读取模块的操作权限</span></span><br><span class="line">            <span class="keyword">foreach</span>($modules <span class="keyword">as</span> $key=&gt;$module) &#123;</span><br><span class="line">                $moduleId = $module[<span class="string">'id'</span>];</span><br><span class="line">                $moduleName = $module[<span class="string">'name'</span>];</span><br><span class="line">                $sql    =   <span class="string">"select node.id,node.name from "</span>.</span><br><span class="line">                    $table[<span class="string">'role'</span>].<span class="string">" as role,"</span>.</span><br><span class="line">                    $table[<span class="string">'user'</span>].<span class="string">" as user,"</span>.</span><br><span class="line">                    $table[<span class="string">'access'</span>].<span class="string">" as access ,"</span>.</span><br><span class="line">                    $table[<span class="string">'node'</span>].<span class="string">" as node "</span>.</span><br><span class="line">                    <span class="string">"where user.user_id='&#123;$authId&#125;' and user.role_id=role.id and ( access.role_id=role.id  or (access.role_id=role.pid and role.pid!=0 ) ) and role.status=1 and access.node_id=node.id and node.level=3 and node.pid=&#123;$moduleId&#125; and node.status=1"</span>;</span><br><span class="line">                $rs =   $db-&gt;query($sql);</span><br><span class="line">                $action = <span class="keyword">array</span>();</span><br><span class="line">                <span class="keyword">foreach</span> ($rs <span class="keyword">as</span> $a)&#123;</span><br><span class="line">                    $action[$a[<span class="string">'name'</span>]] = $a[<span class="string">'id'</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 和公共模块的操作权限合并</span></span><br><span class="line">                $action += $publicAction;</span><br><span class="line">                $access[strtoupper($appName)][strtoupper($moduleName)]   =  array_change_key_case($action,CASE_UPPER);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $access;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读取模块所属的记录访问权限</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getModuleAccessList</span><span class="params">($authId,$module)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Db方式</span></span><br><span class="line">        $db     =   Db::getInstance(C(<span class="string">'RBAC_DB_DSN'</span>));</span><br><span class="line">        $table = <span class="keyword">array</span>(<span class="string">'role'</span>=&gt;C(<span class="string">'RBAC_ROLE_TABLE'</span>),<span class="string">'user'</span>=&gt;C(<span class="string">'RBAC_USER_TABLE'</span>),<span class="string">'access'</span>=&gt;C(<span class="string">'RBAC_ACCESS_TABLE'</span>));</span><br><span class="line">        $sql    =   <span class="string">"select access.node_id from "</span>.</span><br><span class="line">                    $table[<span class="string">'role'</span>].<span class="string">" as role,"</span>.</span><br><span class="line">                    $table[<span class="string">'user'</span>].<span class="string">" as user,"</span>.</span><br><span class="line">                    $table[<span class="string">'access'</span>].<span class="string">" as access "</span>.</span><br><span class="line">                    <span class="string">"where user.user_id='&#123;$authId&#125;' and user.role_id=role.id and ( access.role_id=role.id  or (access.role_id=role.pid and role.pid!=0 ) ) and role.status=1 and  access.module='&#123;$module&#125;' and access.status=1"</span>;</span><br><span class="line">        $rs =   $db-&gt;query($sql);</span><br><span class="line">        $access=<span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">foreach</span> ($rs <span class="keyword">as</span> $node)&#123;</span><br><span class="line">            $access[]=$node[<span class="string">'node_id'</span>];</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">return</span> $access;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之快速排序的实现</title>
      <link href="/article/3462090578.html"/>
      <url>/article/3462090578.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>快速排序（Quicksort）是对冒泡排序的一种改进。<br>快速排序由C. A. R. Hoare在1962年提出。它的基本思想是：通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列。</p><a id="more"></a><h1 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h1><img src="/article/3462090578/1aa428cc6735892441c0fb1f0aa783c8.gif" title="原理图"><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quick_sort</span><span class="params">($arr)</span></span>&#123;</span><br><span class="line">    <span class="comment">//先判断是否需要继续进行</span></span><br><span class="line">    $length = count($arr);</span><br><span class="line">    <span class="keyword">if</span>($length &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> $arr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//选择第一个元素作为基准</span></span><br><span class="line">    $base_num = $arr[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">//遍历除了标尺外的所有元素，按照大小关系放入两个数组内</span></span><br><span class="line">    <span class="comment">//初始化两个数组</span></span><br><span class="line">    $left_array = <span class="keyword">array</span>();  <span class="comment">//小于基准的</span></span><br><span class="line">    $right_array = <span class="keyword">array</span>();  <span class="comment">//大于基准的</span></span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">1</span>; $i&lt;$length; $i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>($base_num &gt; $arr[$i]) &#123;</span><br><span class="line">            <span class="comment">//放入左边数组</span></span><br><span class="line">            $left_array[] = $arr[$i];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//放入右边</span></span><br><span class="line">            $right_array[] = $arr[$i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//再分别对左边和右边的数组进行相同的排序处理方式递归调用这个函数</span></span><br><span class="line">    $left_array = quick_sort($left_array);</span><br><span class="line">    $right_array = quick_sort($right_array);</span><br><span class="line">    <span class="comment">//合并</span></span><br><span class="line">    <span class="keyword">return</span> array_merge($left_array, <span class="keyword">array</span>($base_num), $right_array);;</span><br><span class="line">&#125;</span><br><span class="line">$arr=<span class="keyword">array</span>(<span class="number">5</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">59</span>,<span class="number">41</span>,<span class="number">78</span>,<span class="number">56</span>,<span class="number">45</span>,<span class="number">47</span>,<span class="number">12</span>,<span class="number">15</span>,<span class="number">45</span>,<span class="number">11</span>);</span><br><span class="line">$rs=quick_sort($arr);</span><br><span class="line">print_r($rs);</span><br><span class="line"><span class="comment">//结果</span></span><br><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [<span class="number">0</span>] =&gt; <span class="number">0</span></span><br><span class="line">    [<span class="number">1</span>] =&gt; <span class="number">1</span></span><br><span class="line">    [<span class="number">2</span>] =&gt; <span class="number">3</span></span><br><span class="line">    [<span class="number">3</span>] =&gt; <span class="number">5</span></span><br><span class="line">    [<span class="number">4</span>] =&gt; <span class="number">9</span></span><br><span class="line">    [<span class="number">5</span>] =&gt; <span class="number">10</span></span><br><span class="line">    [<span class="number">6</span>] =&gt; <span class="number">11</span></span><br><span class="line">    [<span class="number">7</span>] =&gt; <span class="number">12</span></span><br><span class="line">    [<span class="number">8</span>] =&gt; <span class="number">15</span></span><br><span class="line">    [<span class="number">9</span>] =&gt; <span class="number">41</span></span><br><span class="line">    [<span class="number">10</span>] =&gt; <span class="number">45</span></span><br><span class="line">    [<span class="number">11</span>] =&gt; <span class="number">45</span></span><br><span class="line">    [<span class="number">12</span>] =&gt; <span class="number">47</span></span><br><span class="line">    [<span class="number">13</span>] =&gt; <span class="number">56</span></span><br><span class="line">    [<span class="number">14</span>] =&gt; <span class="number">59</span></span><br><span class="line">    [<span class="number">15</span>] =&gt; <span class="number">78</span></span><br><span class="line">)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 算法实现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之冒泡排序的实现</title>
      <link href="/article/1792372328.html"/>
      <url>/article/1792372328.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>冒泡排序（Bubble Sort），是一种计算机科学领域的较简单的排序算法。<br>它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。<br>这个算法的名字由来是因为越大的元素会经由交换慢慢“浮”到数列的顶端，故名。</p><a id="more"></a><h1 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h1><img src="/article/1792372328/5b8385253604380494ee9f3453493a9d.gif" title="原理图"><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 冒泡排序算法示例</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里以一维数组做演示</span></span><br><span class="line">$demo_array = <span class="keyword">array</span>(<span class="number">23</span>,<span class="number">15</span>,<span class="number">43</span>,<span class="number">25</span>,<span class="number">54</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">82</span>,<span class="number">11</span>,<span class="number">5</span>,<span class="number">21</span>,<span class="number">32</span>,<span class="number">65</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 第一层for循环可以理解为从数组中键为0开始循环到最后一个</span></span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>;$i&lt;count($demo_array);$i++) &#123;</span><br><span class="line">    <span class="comment">// 第二层将从键为$i的地方循环到数组最后</span></span><br><span class="line">    <span class="keyword">for</span> ($j=$i+<span class="number">1</span>;$j&lt;count($demo_array);$j++) &#123;</span><br><span class="line">        <span class="comment">// 比较数组中相邻两个值的大小</span></span><br><span class="line">        <span class="keyword">if</span> ($demo_array[$i] &gt; $demo_array[$j]) &#123;</span><br><span class="line">            $tmp            = $demo_array[$i]; <span class="comment">// 这里的tmp是临时变量</span></span><br><span class="line">            $demo_array[$i] = $demo_array[$j]; <span class="comment">// 第一次更换位置</span></span><br><span class="line">            $demo_array[$j] = $tmp;            <span class="comment">// 完成位置互换</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 打印结果集</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>;</span><br><span class="line">var_dump($demo_array);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;/pre&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结果</span></span><br><span class="line"><span class="keyword">array</span>(<span class="number">13</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>] =&gt; int(<span class="number">2</span>)</span><br><span class="line">  [<span class="number">1</span>] =&gt; int(<span class="number">5</span>)</span><br><span class="line">  [<span class="number">2</span>] =&gt; int(<span class="number">6</span>)</span><br><span class="line">  [<span class="number">3</span>] =&gt; int(<span class="number">11</span>)</span><br><span class="line">  [<span class="number">4</span>] =&gt; int(<span class="number">15</span>)</span><br><span class="line">  [<span class="number">5</span>] =&gt; int(<span class="number">21</span>)</span><br><span class="line">  [<span class="number">6</span>] =&gt; int(<span class="number">23</span>)</span><br><span class="line">  [<span class="number">7</span>] =&gt; int(<span class="number">25</span>)</span><br><span class="line">  [<span class="number">8</span>] =&gt; int(<span class="number">32</span>)</span><br><span class="line">  [<span class="number">9</span>] =&gt; int(<span class="number">43</span>)</span><br><span class="line">  [<span class="number">10</span>] =&gt; int(<span class="number">54</span>)</span><br><span class="line">  [<span class="number">11</span>] =&gt; int(<span class="number">65</span>)</span><br><span class="line">  [<span class="number">12</span>] =&gt; int(<span class="number">82</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 算法实现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之选择排序的实现</title>
      <link href="/article/3434685696.html"/>
      <url>/article/3434685696.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>选择排序（Selection sort）是一种简单直观的排序算法。它的工作原理是每一次从待排序的数据元素中选出最小（或最大）的一个元素，存放在序列的起始位置，直到全部待排序的数据元素排完。 选择排序是不稳定的排序方法（比如序列[5， 5， 3]第一次就将第一个[5]与[3]交换，导致第一个5挪动到第二个5后面）。</p><a id="more"></a><h1 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h1><img src="/article/3434685696/ff3da1c3c3134ff17356f58e3759c6ce13.gif" title="原理图"><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//选择排序</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">selectSort</span><span class="params">($arr)</span> </span>&#123;</span><br><span class="line"><span class="comment">//双重循环完成，外层控制轮数，内层控制比较次数</span></span><br><span class="line"> $len=count($arr);</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;$len<span class="number">-1</span>; $i++) &#123;</span><br><span class="line">        <span class="comment">//先假设最小的值的位置</span></span><br><span class="line">        $p = $i;</span><br><span class="line">        <span class="keyword">for</span>($j=$i+<span class="number">1</span>; $j&lt;$len; $j++) &#123;</span><br><span class="line">            <span class="comment">//$arr[$p] 是当前已知的最小值</span></span><br><span class="line">            <span class="keyword">if</span>($arr[$p] &gt; $arr[$j]) &#123;</span><br><span class="line">            <span class="comment">//比较，发现更小的,记录下最小值的位置；并且在下次比较时采用已知的最小值进行比较。</span></span><br><span class="line">                $p = $j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//已经确定了当前的最小值的位置，保存到$p中。如果发现最小值的位置与当前假设的位置$i不同，则位置互换即可。</span></span><br><span class="line">        <span class="keyword">if</span>($p != $i) &#123;</span><br><span class="line">            $tmp = $arr[$p];</span><br><span class="line">            $arr[$p] = $arr[$i];</span><br><span class="line">            $arr[$i] = $tmp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//返回最终结果</span></span><br><span class="line">    <span class="keyword">return</span> $arr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 算法实现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之二分查找的实现</title>
      <link href="/article/395626462.html"/>
      <url>/article/395626462.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>二分查找又称折半查找，优点是比较次数少，查找速度快，平均性能好；其缺点是要求待查表为有序表，且插入删除困难。因此，折半查找方法适用于不经常变动而查找频繁的有序列表。首先，假设表中元素是按升序排列，将表中间位置记录的关键字与查找关键字比较，如果两者相等，则查找成功；否则利用中间位置记录将表分成前、后两个子表，如果中间位置记录的关键字大于查找关键字，则进一步查找前一子表，否则进一步查找后一子表。重复以上过程，直到找到满足条件的记录，使查找成功，或直到子表不存在为止，此时查找不成功。</p><a id="more"></a><h1 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h1><img src="/article/395626462/3d7531d4c0f936cda3dc7671ea0389d8.gif" title="原理图"><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">#二分查找</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">binarySearch</span><span class="params">(Array $arr, $target)</span> </span>&#123;</span><br><span class="line">        $low = <span class="number">0</span>;</span><br><span class="line">        $high = count($arr) - <span class="number">1</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>($low &lt;= $high) &#123;</span><br><span class="line">            $mid = floor(($low + $high) / <span class="number">2</span>);</span><br><span class="line">            <span class="comment">#找到元素</span></span><br><span class="line">            <span class="keyword">if</span>($arr[$mid] == $target) <span class="keyword">return</span> $mid;</span><br><span class="line">            <span class="comment">#中元素比目标大,查找左部</span></span><br><span class="line">            <span class="keyword">if</span>($arr[$mid] &gt; $target) $high = $mid - <span class="number">1</span>;</span><br><span class="line">            <span class="comment">#重元素比目标小,查找右部</span></span><br><span class="line">            <span class="keyword">if</span>($arr[$mid] &lt; $target) $low = $mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">#查找失败</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $arr = <span class="keyword">array</span>(<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>);</span><br><span class="line">    $inx = binarySearch($arr, <span class="number">1</span>);</span><br><span class="line">    var_dump($inx);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 算法实现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSO之CAS原理和协议说明</title>
      <link href="/article/2389204915.html"/>
      <url>/article/2389204915.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>当用户第一次访问应用系统1的时候，因为还没有登录，会被引导到认证系统中进行登录；根据用户提供的登录信息，认证系统进行身份校验，如果通过校验，应该返回给用户一个认证的凭据－－ticket；用户再访问别的应用的时候就会将这个ticket带上，作为自己认证的凭据，应用系统接受到请求之后会把ticket送到认证系统进行校验，检查ticket的合法性。如果通过校验，用户就可以在不用再次登录的情况下访问应用系统2和应用系统3了。</p><a id="more"></a><h1 id="基础模式"><a href="#基础模式" class="headerlink" title="基础模式"></a>基础模式</h1><ol><li>访问服务： SSO 客户端发送请求访问应用系统提供的服务资源。</li><li>定向认证： SSO 客户端会重定向用户请求到 SSO 服务器。</li><li>用户认证：用户身份认证。</li><li>发放票据： SSO 服务器会产生一个随机的 Service Ticket 。</li><li>验证票据： SSO 服务器验证票据 Service Ticket 的合法性，验证通过后，允许客户端访问服务。</li><li>传输用户信息： SSO 服务器验证票据通过后，传输用户认证结果信息给客户端。</li></ol><h1 id="协议过程图"><a href="#协议过程图" class="headerlink" title="协议过程图"></a>协议过程图</h1><img src="/article/2389204915/859fbbf3cc94a0e1a1feb5f1461f3c76.jpg" title="CAS协议过程"><p>如 上图： CAS Client 与受保护的客户端应用部署在一起，以 Filter 方式保护 Web 应用的受保护资源，过滤从客户端过来的每一个 Web 请求，同 时， CAS Client 会分析 HTTP 请求中是否包含请求 Service Ticket( ST 上图中的 Ticket) ，如果没有，则说明该用户是没有经过认证的；于是 CAS Client 会重定向用户请求到 CAS Server （ Step 2 ），并传递 Service （要访问的目的资源地址）。 Step 3 是用户认证过程，如果用户提供了正确的 Credentials ， CAS Server 随机产生一个相当长度、唯一、不可伪造的 Service Ticket ，并缓存以待将来验证，并且重定向用户到 Service 所在地址（附带刚才产生的 Service Ticket ） , 并为客户端浏览器设置一个 Ticket Granted Cookie （ TGC ） ； CAS Client 在拿到 Service 和新产生的 Ticket 过后，在 Step 5 和 Step6 中与 CAS Server 进行身份核实，以确保 Service Ticket 的合法性。</p><p>在该协议中，所有与 CAS Server 的交互均采用 SSL 协议，以确保 ST 和 TGC 的安全性。协议工作过程中会有 2 次重定向 的过程。但是 CAS Client 与 CAS Server 之间进行 Ticket 验证的过程对于用户是透明的（使用 HttpsURLConnection ）。</p><p>#请求认证时序图</p><img src="/article/2389204915/199544d72a1af5e0f065426e0f46abe8.gif" title="请求认证时序图"><h1 id="CAS如何实现SSO"><a href="#CAS如何实现SSO" class="headerlink" title="CAS如何实现SSO"></a>CAS如何实现SSO</h1><blockquote><p>当用户访问另一个应用的服务再次被重定向到 CAS Server 的时候， CAS Server 会主动获到这个 TGC cookie ，然后做下面的事情：</p></blockquote><ol><li><p>如果 User 持有 TGC 且其还没失效，那么就走基础协议图的 Step4 ，达到了 SSO 的效果；</p></li><li><p>如果 TGC 失效，那么用户还是要重新认证 ( 走基础协议图的 Step3) 。</p></li></ol><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://www.cnblogs.com/notDog/p/5252973.html" target="_blank" rel="noopener">CAS单点登录原理以及debug跟踪登录流程</a></p><p><a href="http://www.open-open.com/lib/view/open1432381488005.html" target="_blank" rel="noopener">CAS实现SSO单点登录原理</a></p><p><a href="http://www.open-open.com/lib/view/open1423663190904.html" target="_blank" rel="noopener">CAS实现SSO（单点登录）</a></p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Supervisor的使用和配置</title>
      <link href="/article/2050126218.html"/>
      <url>/article/2050126218.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Supervisor是一个进程监控程序。<br>满足的需求是：我现在有一个进程需要每时每刻不断的跑，但是这个进程又有可能由于各种原因有可能中断。当进程中断的时候我希望能自动重新启动它，此时，我就需要使用到了Supervisor</p><a id="more"></a><h1 id="先弄懂两个命令"><a href="#先弄懂两个命令" class="headerlink" title="先弄懂两个命令:"></a>先弄懂两个命令:</h1><p>supervisord : supervisor的服务器端部分，启动supervisor就是运行这个命令<br>supervisorctl：启动supervisor的命令行窗口。</p><h1 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h1><p>redis-server这个进程是运行redis的服务。我们要求这个服务能在意外停止后自动重启。</p><h1 id="安装（Centos）："><a href="#安装（Centos）：" class="headerlink" title="安装（Centos）："></a>安装（Centos）：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install python-setuptools</span><br><span class="line">easy_install supervisor</span><br></pre></td></tr></table></figure><h1 id="测试是否安装成功："><a href="#测试是否安装成功：" class="headerlink" title="测试是否安装成功："></a>测试是否安装成功：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo_supervisord_conf</span><br></pre></td></tr></table></figure><h1 id="创建配置文件："><a href="#创建配置文件：" class="headerlink" title="创建配置文件："></a>创建配置文件：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo_supervisord_conf &gt; /etc/supervisord.conf</span><br></pre></td></tr></table></figure><h1 id="修改配置文件："><a href="#修改配置文件：" class="headerlink" title="修改配置文件："></a>修改配置文件：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#在supervisord.conf最后增加：</span><br><span class="line">[program:redis]</span><br><span class="line">command = redis-server   //需要执行的命令</span><br><span class="line">autostart=true    //supervisor启动的时候是否随着同时启动</span><br><span class="line">autorestart=true   //当程序跑出exit的时候，这个program会自动重启</span><br><span class="line">startsecs=3  //程序重启时候停留在runing状态的秒数</span><br><span class="line">//（更多配置说明请参考：http://supervisord.org/configuration.html）</span><br></pre></td></tr></table></figure><h1 id="运行命令："><a href="#运行命令：" class="headerlink" title="运行命令："></a>运行命令：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@vm14211 ~]# service supervisord start    //启动supervisor</span><br><span class="line">[root@vm14211 ~]# supervisorctl   //打开命令行</span><br><span class="line">redis                            RUNNING    pid 24068, uptime 3:41:55</span><br><span class="line">supervisor&gt; help   //查看命令</span><br><span class="line">supervisor&gt; status //查看状态</span><br></pre></td></tr></table></figure><h1 id="遇到的问题："><a href="#遇到的问题：" class="headerlink" title="遇到的问题："></a>遇到的问题：</h1><ol><li><p>redis出现的不是running而是FATAL 状态<br>应该要去查看log<br>log在/tmp/supervisord.log</p></li><li><p>日志中显示<br>gave up: redis entered FATAL state, too many start retries too quickly<br>修改redis.conf的daemonize为no</p></li></ol><h1 id="完成验证："><a href="#完成验证：" class="headerlink" title="完成验证："></a>完成验证：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@vm1~]<span class="comment"># ps aux | grep redis </span></span><br><span class="line">root     30582  0.0  0.0   9668  1584 ?        S    14:12   0:00 redis-server</span><br><span class="line">[root@vm1~]<span class="comment"># kill 30582</span></span><br><span class="line">[root@vm1~]<span class="comment"># ps aux | grep redis </span></span><br><span class="line">root     30846  0.0  0.0   9668  1552 ?        S    15:19   0:00 redis-server</span><br><span class="line">//看到这个时候pid更新了。完成,庆祝。</span><br></pre></td></tr></table></figure><hr><h1 id="Supervisor详细说明-："><a href="#Supervisor详细说明-：" class="headerlink" title="Supervisor详细说明 ："></a>Supervisor详细说明 ：</h1><p>supervisor:C/S架构的进程控制系统，可使用户在类UNIX系统中监控、管理进程。常用于管理与某个用户或项目相关的进程。</p><h2 id="组成部分"><a href="#组成部分" class="headerlink" title="组成部分"></a>组成部分</h2><p>supervisord：服务守护进程<br>supervisorctl：命令行客户端<br>Web Server：提供与supervisorctl功能相当的WEB操作界面<br>XML-RPC Interface：XML-RPC接口</p><h2 id="文件路径"><a href="#文件路径" class="headerlink" title="文件路径"></a>文件路径</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#日志</span><br><span class="line">vim /var/log/supervisor/supervisord.log</span><br><span class="line">#配置文件</span><br><span class="line">vim /etc/supervisord.conf</span><br></pre></td></tr></table></figure><h2 id="配置样例"><a href="#配置样例" class="headerlink" title="配置样例"></a>配置样例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#[program:x]中配置要监控的进程</span></span><br><span class="line"></span><br><span class="line">[supervisord]</span><br><span class="line">http_port=/var/tmp/supervisor.sock ; (default is to run a UNIX domain socket server)</span><br><span class="line">;http_port=127.0.0.1:9001  ; (alternately, ip_address:port specifies AF_INET)</span><br><span class="line">;sockchmod=0700              ; AF_UNIX socketmode (AF_INET ignore, default 0700)</span><br><span class="line">;sockchown=nobody.nogroup    ; AF_UNIX socket uid.gid owner (AF_INET ignores)</span><br><span class="line">;<span class="built_in">umask</span>=022                  ; (process file creation <span class="built_in">umask</span>;default 022)</span><br><span class="line">logfile=/var/<span class="built_in">log</span>/supervisor/supervisord.log ; (main <span class="built_in">log</span> file;default <span class="variable">$CWD</span>/supervisord.log)</span><br><span class="line">logfile_maxbytes=50MB      ; (max main logfile bytes b4 rotation;default 50MB)</span><br><span class="line">logfile_backups=10          ; (num of main logfile rotation backups;default 10)</span><br><span class="line">loglevel=info              ; (logging level;default info; others: debug,warn)</span><br><span class="line">pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)</span><br><span class="line">nodaemon=<span class="literal">false</span>              ; (start <span class="keyword">in</span> foreground <span class="keyword">if</span> <span class="literal">true</span>;default <span class="literal">false</span>)</span><br><span class="line">minfds=1024                ; (min. avail startup file descriptors;default 1024)</span><br><span class="line">minprocs=200                ; (min. avail process descriptors;default 200)</span><br><span class="line">;nocleanup=<span class="literal">true</span>              ; (don<span class="string">'t clean up tempfiles at start;default false)</span></span><br><span class="line"><span class="string">;http_username=user          ; (default is no username (open system))</span></span><br><span class="line"><span class="string">;http_password=123          ; (default is no password (open system))</span></span><br><span class="line"><span class="string">;childlogdir=/tmp            ; ('</span>AUTO<span class="string">' child log dir, default $TEMP)</span></span><br><span class="line"><span class="string">;user=chrism                ; (default is current user, required if root)</span></span><br><span class="line"><span class="string">;directory=/tmp              ; (default is not to cd during start)</span></span><br><span class="line"><span class="string">;environment=KEY=value      ; (key value pairs to add to environment)</span></span><br><span class="line"><span class="string">[supervisorctl]</span></span><br><span class="line"><span class="string">serverurl=unix:///var/tmp/supervisor.sock ; use a unix:// URL  for a unix socket</span></span><br><span class="line"><span class="string">;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket</span></span><br><span class="line"><span class="string">;username=chris              ; should be same as http_username if set</span></span><br><span class="line"><span class="string">;password=123                ; should be same as http_password if set</span></span><br><span class="line"><span class="string">;prompt=mysupervisor        ; cmd line prompt (default "supervisor")</span></span><br><span class="line"><span class="string">; The below sample program section shows all possible program subsection values,</span></span><br><span class="line"><span class="string">; create one or more '</span>real<span class="string">' program: sections to be able to control them under</span></span><br><span class="line"><span class="string">; supervisor.</span></span><br><span class="line"><span class="string">;[program:example]</span></span><br><span class="line"><span class="string">;command=/bin/echo; the program (relative uses PATH, can take args)</span></span><br><span class="line"><span class="string">;priority=999                ; the relative start priority (default 999)</span></span><br><span class="line"><span class="string">;autostart=true              ; start at supervisord start (default: true)</span></span><br><span class="line"><span class="string">;autorestart=true            ; retstart at unexpected quit (default: true)</span></span><br><span class="line"><span class="string">;startsecs=10                ; number of secs prog must stay running (def. 10)</span></span><br><span class="line"><span class="string">;startretries=3              ; max # of serial start failures (default 3)</span></span><br><span class="line"><span class="string">;exitcodes=0,2              ; '</span>expected<span class="string">' exit codes for process (default 0,2)</span></span><br><span class="line"><span class="string">;stopsignal=QUIT            ; signal used to kill process (default TERM)</span></span><br><span class="line"><span class="string">;stopwaitsecs=10            ; max num secs to wait before SIGKILL (default 10)</span></span><br><span class="line"><span class="string">;user=chrism                ; setuid to this UNIX account to run the program</span></span><br><span class="line"><span class="string">;log_stdout=true            ; if true, log program stdout (default true)</span></span><br><span class="line"><span class="string">;log_stderr=true            ; if true, log program stderr (def false)</span></span><br><span class="line"><span class="string">;logfile=/var/log/supervisor.log    ; child log path, use NONE for none; default AUTO</span></span><br><span class="line"><span class="string">;logfile_maxbytes=1MB        ; max # logfile bytes b4 rotation (default 50MB)</span></span><br><span class="line"><span class="string">;logfile_backups=10          ; # of logfile backups (default 10)</span></span><br><span class="line"><span class="string">“;”为注释。各参数的含义都很明确。可以根据官方手册结合实验来进一步深入了解。重点说几个[program:example]中的参数</span></span><br><span class="line"><span class="string">;command=/bin/echo;   supervisor启动时将要开启的进程。相对或绝对路径均可。若是相对路径则会从supervisord的$PATH变中查找。命令可带参数。</span></span><br><span class="line"><span class="string">;priority=999                 指明进程启动和关闭的顺序。低优先级表明进程启动时较先启动关闭时较后关闭。高优先级表明进程启动时启动时较后启动关闭时较先关闭。</span></span><br><span class="line"><span class="string">;autostart=true               是否随supervisord启动而启动</span></span><br><span class="line"><span class="string">;autorestart=true             进程意外退出后是否自动重启</span></span><br><span class="line"><span class="string">;startsecs=10                 进程持续运行多久才认为是启动成功</span></span><br><span class="line"><span class="string">;startretries=3               重启失败的连续重试次数</span></span><br><span class="line"><span class="string">;exitcodes=0,2               若autostart设置为unexpected且监控的进程并非因为supervisord停止而退出，那么如果进程的退出码不在exitcode列表中supervisord将重启进程</span></span><br><span class="line"><span class="string">;stopsignal=QUIT             杀进程的信号</span></span><br><span class="line"><span class="string">;stopwaitsecs=10             向进程发出stopsignal后等待OS向supervisord返回SIGCHILD 的时间。若超时则supervisord将使用SIGKILL杀进程</span></span><br><span class="line"><span class="string">一个Rabbitmq项目中生产者和消费者进程使用supervisor监控的配置情况：(配置中的其他部分略)</span></span><br><span class="line"><span class="string">[program:worker_for_summary]</span></span><br><span class="line"><span class="string">command=/home/op1/scripts/rabbitmqclient/worker_for_summary.py</span></span><br><span class="line"><span class="string">priority=1</span></span><br><span class="line"><span class="string">log_stderr=true            ; if true, log program stderr (def false)</span></span><br><span class="line"><span class="string">[program:worker_for_detail_all]</span></span><br><span class="line"><span class="string">command=/home/op1/scripts/rabbitmqclient/worker_for_detail_all.py</span></span><br><span class="line"><span class="string">priority=1</span></span><br><span class="line"><span class="string">log_stderr=true            ; if true, log program stderr (def false)</span></span><br><span class="line"><span class="string">[program:worker_for_detail_recent_list]</span></span><br><span class="line"><span class="string">command=/home/op1/scripts/rabbitmqclient/worker_for_detail_recent_list.py</span></span><br><span class="line"><span class="string">priority=1</span></span><br><span class="line"><span class="string">log_stderr=true            ; if true, log program stderr (def false)</span></span><br><span class="line"><span class="string">[program:worker_for_detail_recent_sset]</span></span><br><span class="line"><span class="string">command=/home/op1/scripts/rabbitmqclient/worker_for_detail_recent_sset.py</span></span><br><span class="line"><span class="string">priority=1</span></span><br><span class="line"><span class="string">log_stderr=true            ; if true, log program stderr (def false)</span></span><br><span class="line"><span class="string">[program:publisher_for_summary]</span></span><br><span class="line"><span class="string">command=/home/op1/scripts/rabbitmqclient/publisher_for_summary.py</span></span><br><span class="line"><span class="string">priority=999</span></span><br><span class="line"><span class="string">log_stderr=true            ; if true, log program stderr (def false)</span></span><br><span class="line"><span class="string">[program:publisher_for_summary_nt]</span></span><br><span class="line"><span class="string">command=/home/op1/scripts/rabbitmqclient/publisher_for_summary_nt.py</span></span><br><span class="line"><span class="string">priority=999</span></span><br><span class="line"><span class="string">log_stderr=true            ; if true, log program stderr (def false)</span></span><br><span class="line"><span class="string">[program:publisher_for_detail]</span></span><br><span class="line"><span class="string">command=/home/op1/scripts/rabbitmqclient/publisher_for_detail.py</span></span><br><span class="line"><span class="string">priority=999</span></span><br><span class="line"><span class="string">log_stderr=true            ; if true, log program stderr (def false)</span></span><br><span class="line"><span class="string">[program:publisher_for_detail_nt]</span></span><br><span class="line"><span class="string">command=/home/op1/scripts/rabbitmqclient/publisher_for_detail_nt.py</span></span><br><span class="line"><span class="string">priority=999</span></span><br><span class="line"><span class="string">log_stderr=true            ; if true, log program stderr (def false)</span></span><br></pre></td></tr></table></figure><h2 id="查看帮助"><a href="#查看帮助" class="headerlink" title="查看帮助"></a>查看帮助</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">supervisor&gt; help</span><br><span class="line">Documented commands (type help &lt;topic&gt;):</span><br><span class="line">========================================</span><br><span class="line">EOF    exit  maintail  quit    restart  start  stop</span><br><span class="line">clear  help  open      reload  shutdown  status  tail</span><br><span class="line">supervisor&gt; help stop</span><br><span class="line">stop &lt;processname&gt;   Stop a process.</span><br><span class="line">stop &lt;processname&gt; &lt;processname&gt; Stop multiple processes</span><br><span class="line">stop all    Stop all processes</span><br><span class="line">  When all processes are stopped, they are stopped in</span><br><span class="line">  reverse priority order (see config file)</span><br><span class="line">supervisor&gt; help status</span><br><span class="line">status   Get all process status info.</span><br><span class="line">status &lt;name&gt;  Get status on a single process by name.</span><br><span class="line">status &lt;name&gt; &lt;name&gt; Get status on multiple named processes.</span><br></pre></td></tr></table></figure><h2 id="停止某个进程"><a href="#停止某个进程" class="headerlink" title="停止某个进程"></a>停止某个进程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">supervisor&gt; stop publisher_for_summary</span><br><span class="line">publisher_for_summary: stopped</span><br></pre></td></tr></table></figure><h2 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">supervisor&gt; status</span><br><span class="line">publisher_for_detail RUNNING    pid 27557, uptime 0:05:41</span><br><span class="line">publisher_for_detail_nt RUNNING    pid 27567, uptime 0:05:41</span><br><span class="line">publisher_for_summary STOPPED    Feb 27 02:48 PM</span><br><span class="line">publisher_for_summary_nt RUNNING    pid 27568, uptime 0:05:41</span><br><span class="line">worker_for_detail_all RUNNING    pid 27581, uptime 0:05:41</span><br><span class="line">worker_for_detail_recent RUNNING    pid 27582, uptime 0:05:41</span><br><span class="line">worker_for_summary RUNNING    pid 27559, uptime 0:05:41</span><br></pre></td></tr></table></figure><h2 id="开启停掉的进程"><a href="#开启停掉的进程" class="headerlink" title="开启停掉的进程"></a>开启停掉的进程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">supervisor&gt; start publisher_for_summary</span><br><span class="line">publisher_for_summary: started</span><br><span class="line">supervisor&gt; status</span><br><span class="line">publisher_for_detail RUNNING    pid 27557, uptime 0:08:02</span><br><span class="line">publisher_for_detail_nt RUNNING    pid 27567, uptime 0:08:02</span><br><span class="line">publisher_for_summary RUNNING    pid 3035, uptime 0:00:04</span><br><span class="line">publisher_for_summary_nt RUNNING    pid 27568, uptime 0:08:02</span><br><span class="line">worker_for_detail_all RUNNING    pid 27581, uptime 0:08:02</span><br><span class="line">worker_for_detail_recent RUNNING    pid 27582, uptime 0:08:02</span><br><span class="line">worker_for_summary RUNNING    pid 27559, uptime 0:08:02</span><br></pre></td></tr></table></figure><h2 id="停掉所有进程"><a href="#停掉所有进程" class="headerlink" title="停掉所有进程"></a>停掉所有进程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">supervisor&gt; stop all</span><br><span class="line">worker_for_detail_recent: stopped</span><br><span class="line">worker_for_detail_all: stopped</span><br><span class="line">publisher_for_summary_nt: stopped</span><br><span class="line">publisher_for_detail_nt: stopped</span><br><span class="line">publisher_for_summary: stopped</span><br><span class="line">worker_for_summary: stopped</span><br><span class="line">publisher_for_detail: stopped</span><br><span class="line">supervisor&gt; status</span><br><span class="line">publisher_for_detail STOPPED    Feb 27 02:51 PM</span><br><span class="line">publisher_for_detail_nt STOPPED    Feb 27 02:51 PM</span><br><span class="line">publisher_for_summary STOPPED    Feb 27 02:51 PM</span><br><span class="line">publisher_for_summary_nt STOPPED    Feb 27 02:51 PM</span><br><span class="line">worker_for_detail_all STOPPED    Feb 27 02:51 PM</span><br><span class="line">worker_for_detail_recent STOPPED    Feb 27 02:51 PM</span><br><span class="line">worker_for_summary STOPPED    Feb 27 02:51 PM</span><br></pre></td></tr></table></figure><h2 id="开启所有进程"><a href="#开启所有进程" class="headerlink" title="开启所有进程"></a>开启所有进程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">supervisor&gt; start all</span><br><span class="line">publisher_for_detail: started</span><br><span class="line">worker_for_summary: started</span><br><span class="line">publisher_for_summary: started</span><br><span class="line">publisher_for_detail_nt: started</span><br><span class="line">publisher_for_summary_nt: started</span><br><span class="line">worker_for_detail_all: started</span><br><span class="line">worker_for_detail_recent: started</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git配置和常用命令</title>
      <link href="/article/3737903822.html"/>
      <url>/article/3737903822.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Git是一个分布式版本控制／软件配置管理软件，原来是linux内核开发者林纳斯·托瓦兹（Linus Torvalds）为了更好地管理linux内核开发而创立的。</p><a id="more"></a><h1 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;yourname&quot;</span><br><span class="line">git config --global user.email &quot;youemail@gmail.com&quot;</span><br><span class="line">git config --global color.ui true</span><br><span class="line">git config --global alias.co checkout</span><br><span class="line">git config --global alias.ci commit</span><br><span class="line">git config --global alias.st status</span><br><span class="line">git config --global alias.br branch</span><br><span class="line">git config -l  # 列举所有配置</span><br></pre></td></tr></table></figure><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#用户的git配置文件在~/.gitconfig</span><br><span class="line">cat .gitconfig </span><br><span class="line">[user]</span><br><span class="line">    email = workwsl@163.com</span><br><span class="line">    name = flow</span><br><span class="line">[color]</span><br><span class="line">    ui = auto</span><br><span class="line">[color &quot;branch&quot;]</span><br><span class="line">    current = yellow reverse</span><br><span class="line">    local = yellow</span><br><span class="line">    remote = green</span><br><span class="line">[color &quot;diff&quot;]</span><br><span class="line">    meta = yellow bold</span><br><span class="line">    frag = magenta bold</span><br><span class="line">    old = red bold</span><br><span class="line">    new = green bold</span><br><span class="line">[color &quot;status&quot;]</span><br><span class="line">    added = yellow</span><br><span class="line">    changed = green</span><br><span class="line">    untracked = cyan</span><br><span class="line">[alias]</span><br><span class="line">    st = &quot;status&quot;</span><br><span class="line">    co = checkout</span><br><span class="line">    ls = &quot;ls-files&quot;</span><br><span class="line">    ci = commit</span><br><span class="line">    br = branch</span><br><span class="line">    rt = reset --hard</span><br><span class="line">    unstage = reset HEAD</span><br><span class="line">    uncommit = reset --soft HEAD^</span><br><span class="line">    l = log --pretty=oneline --abbrev-commit --graph --decorate</span><br><span class="line">   amend = commit --amend </span><br><span class="line">   who = shortlog -n -s --no-merges </span><br><span class="line">    g = grep -n --color -E </span><br><span class="line">    cp = cherry-pick -x </span><br><span class="line">    cb = checkout -b </span><br><span class="line">[core]</span><br><span class="line">    filemode = true</span><br></pre></td></tr></table></figure><h1 id="查看帮助命令"><a href="#查看帮助命令" class="headerlink" title="查看帮助命令"></a>查看帮助命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git help &lt;command&gt;  # 显示command的help</span><br><span class="line">git show            # 显示某次提交的内容</span><br><span class="line">git show $id</span><br></pre></td></tr></table></figure><h1 id="查看提交记录"><a href="#查看提交记录" class="headerlink" title="查看提交记录"></a>查看提交记录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br><span class="line">git log &lt;file&gt;      # 查看该文件每次提交记录</span><br><span class="line">git log -p &lt;file&gt;   #显示版本历史，以及版本间的内容差异</span><br><span class="line">git log -p -2       # 查看最近两次详细修改内容的diff</span><br><span class="line">git log --stat      # 查看提交统计信息</span><br><span class="line">git log --since=&quot;6 hours&quot;  # 显示最近6小时提交</span><br><span class="line">git log --before=&quot;2 days&quot;  # 显示2天前提交</span><br><span class="line">git log -1 HEAD~3          #显示比HEAD早3个提交的那个提交</span><br><span class="line">git log -1 HEAD^^^</span><br><span class="line">git reflog                 # 查看操作记录</span><br></pre></td></tr></table></figure><h1 id="添加、提交、删除、找回，重置修改文件"><a href="#添加、提交、删除、找回，重置修改文件" class="headerlink" title="添加、提交、删除、找回，重置修改文件"></a>添加、提交、删除、找回，重置修改文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">git co  -- &lt;file&gt;   # 抛弃工作区修改</span><br><span class="line">git co  .           # 抛弃工作区修改</span><br><span class="line">git co HEAD &lt;file&gt;  # 抛弃工作目录区中文件的修改</span><br><span class="line">git add &lt;file&gt;      # 将工作文件修改提交到本地暂存区</span><br><span class="line">git add .           # 将所有修改过的工作文件提交暂存区</span><br><span class="line">git rm &lt;file&gt;       # 从版本库中删除文件</span><br><span class="line">git rm &lt;file&gt; --cached  # 从版本库中删除文件，但不删除文件</span><br><span class="line">git reset &lt;file&gt;    # 从暂存区恢复到工作文件</span><br><span class="line">git reset -- .      # 从暂存区恢复到工作文件</span><br><span class="line">git reset --hard  HEAD^ #恢复最近一次提交过的状态，即放弃上次提交后的所有本次修改</span><br><span class="line">git reset --hard &lt;commit id&gt;  # 恢复到某一次提交的状态</span><br><span class="line">git reset HEAD &lt;file&gt; # 抛弃暂存区中文件的修改</span><br><span class="line">git ci &lt;file&gt;</span><br><span class="line">git ci .</span><br><span class="line">git ci -a           # 将git add, git rm和git ci等操作都合并在一起做</span><br><span class="line">git ci -am &quot;some comments&quot;</span><br><span class="line">git ci --amend      # 修改最后一次提交记录</span><br><span class="line">git revert &lt;$id&gt;    # 恢复某次提交的状态，恢复动作本身也创建了一次提交对象</span><br><span class="line">git revert HEAD     # 恢复最后一次提交的状态</span><br></pre></td></tr></table></figure><h1 id="查看文件diff"><a href="#查看文件diff" class="headerlink" title="查看文件diff"></a>查看文件diff</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git diff &lt;file&gt;     # 比较当前文件和暂存区文件差异</span><br><span class="line">git diff</span><br><span class="line">git diff &lt;$id1&gt; &lt;$id2&gt;      # 比较两次提交之间的差异</span><br><span class="line">git diff &lt;branch1&gt;..&lt;branch2&gt;   # 在两个分支之间比较 </span><br><span class="line">git diff --staged   # 比较暂存区和版本库差异</span><br><span class="line">git diff --cached   # 比较暂存区和版本库差异</span><br><span class="line">git diff --stat     # 仅仅比较统计信息</span><br></pre></td></tr></table></figure><h1 id="查看、切换、创建和删除分支"><a href="#查看、切换、创建和删除分支" class="headerlink" title="查看、切换、创建和删除分支"></a>查看、切换、创建和删除分支</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">git br -r           # 查看远程分支</span><br><span class="line">git br -v           # 查看各个分支最后提交信息</span><br><span class="line">git br -a           # 列出所有分支</span><br><span class="line">git br --merged     # 查看已经被合并到当前分支的分支</span><br><span class="line">git br --no-merged  # 查看尚未被合并到当前分支的分支</span><br><span class="line">git br &lt;new_branch&gt; # 基于当前分支创建新的分支</span><br><span class="line">git br &lt;new_branch&gt;  &lt;start_point&gt;      # 基于另一个起点（分支名称，提交名称或则标签名称），创建新的分支</span><br><span class="line">git br -f &lt;existing_branch&gt;  &lt;start_point&gt; # 创建同名新分支，覆盖已有分支</span><br><span class="line">git br -d &lt;branch&gt;  # 删除某个分支</span><br><span class="line">git br -D &lt;branch&gt;  # 强制删除某个分支 (未被合并的分支被删除的时候需要强制)</span><br><span class="line">git co &lt;branch&gt;         # 切换到某个分支</span><br><span class="line">git co -b &lt;new_branch&gt;  # 创建新的分支，并且切换过去</span><br><span class="line">git co -b &lt;new_branch&gt; &lt;branch&gt;       # 基于branch创建新的new_branch</span><br><span class="line">git co -m &lt;existing_branch&gt; &lt;new_branch&gt;  # 移动或重命名分支，当新分支不存在时</span><br><span class="line">git co -M &lt;existing_branch&gt; &lt;new_branch&gt;  # 移动或重命名分支，当新分支存在时就覆盖</span><br><span class="line">git co $id               # 把某次历史提交记录checkout出来，但无分支信息，切换到其他分支会自动删除</span><br><span class="line">git co $id -b &lt;new_branch&gt;       # 把某次历史提交记录checkout出来，创建成一个分支</span><br></pre></td></tr></table></figure><h1 id="分支合并和rebase"><a href="#分支合并和rebase" class="headerlink" title="分支合并和rebase"></a>分支合并和rebase</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git merge &lt;branch&gt;                  # 将branch分支合并到当前分支</span><br><span class="line">git merge origin/master --no-ff     # 不要Fast-Foward合并，这样可以生成merge提交</span><br><span class="line">git merge --no-commit &lt;branch&gt;      # 合并但不提交</span><br><span class="line">git merge --squash &lt;branch&gt;         # 把一条分支上的内容合并到另一个分支上的一个提交</span><br><span class="line">git rebase master &lt;branch&gt;          # 将master rebase到branch，相当于：</span><br><span class="line">git co &lt;branch&gt; &amp;&amp; git rebase master &amp;&amp; git co master &amp;&amp; git merge &lt;branch&gt;</span><br></pre></td></tr></table></figure><h1 id="Git补丁管理"><a href="#Git补丁管理" class="headerlink" title="Git补丁管理"></a>Git补丁管理</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git diff &gt; ../sync.patch         # 生成补丁</span><br><span class="line">git apply ../sync.patch          # 打补丁</span><br><span class="line">git apply --check ../sync.patch  # 测试补丁能否成功</span><br><span class="line">git format-patch -X              # 根据提交的log生成patch，X为数字，表示最近的几个日志</span><br></pre></td></tr></table></figure><h1 id="Git暂存管理"><a href="#Git暂存管理" class="headerlink" title="Git暂存管理"></a>Git暂存管理</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git stash                        # 暂存</span><br><span class="line">git stash list                   # 列所有stash</span><br><span class="line">git stash apply                  # 恢复暂存的内容</span><br><span class="line">git stash drop                   # 删除暂存区</span><br></pre></td></tr></table></figure><h1 id="Git远程分支管理"><a href="#Git远程分支管理" class="headerlink" title="Git远程分支管理"></a>Git远程分支管理</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">git pull                         # 抓取远程仓库所有分支更新并合并到本地</span><br><span class="line">git pull --no-ff                 # 抓取远程仓库所有分支更新并合并到本地，不要快进合并</span><br><span class="line">git fetch origin                 # 抓取远程仓库所有更新</span><br><span class="line">git fetch origin remote-branch:local-branch #抓取remote-branch分支的更新</span><br><span class="line">git fetch origin --tags          # 抓取远程上的所有分支</span><br><span class="line">git checkout -b &lt;new-branch&gt; &lt;remote_tag&gt; # 抓取远程上的分支</span><br><span class="line">git merge origin/master          # 将远程主分支合并到本地当前分支</span><br><span class="line">git co --track origin/branch     # 跟踪某个远程分支创建相应的本地分支</span><br><span class="line">git co -b &lt;local_branch&gt; origin/&lt;remote_branch&gt;  # 基于远程分支创建本地分支，功能同上</span><br><span class="line">git push                         # push所有分支</span><br><span class="line">git push origin master           # 将本地主分支推到远程主分支</span><br><span class="line">git push -u origin master        # 将本地主分支推到远程(如无远程主分支则创建，用于初始化远程仓库)</span><br><span class="line">git push origin &lt;local_branch&gt;   # 创建远程分支， origin是远程仓库名</span><br><span class="line">git push origin &lt;local_branch&gt;:&lt;remote_branch&gt;  # 创建远程分支</span><br><span class="line">git push origin :&lt;remote_branch&gt;  #先删除本地分支(git br -d &lt;branch&gt;)，然后再push删除远程分支</span><br></pre></td></tr></table></figure><h1 id="Git远程仓库管理"><a href="#Git远程仓库管理" class="headerlink" title="Git远程仓库管理"></a>Git远程仓库管理</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git remote -v                    # 查看远程服务器地址和仓库名称</span><br><span class="line">git remote show origin           # 查看远程服务器仓库状态</span><br><span class="line">git remote add origin git@github:XXX/test.git         # 添加远程仓库地址</span><br><span class="line">git remote set-url origin git@github.com:XXX/test.git # 设置远程仓库地址(用于修改远程仓库地址)</span><br><span class="line">git remote rm &lt;repository&gt;       # 删除远程仓库</span><br><span class="line">git remote set-head origin master   # 设置远程仓库的HEAD指向master分支</span><br><span class="line">git branch --set-upstream master origin/master</span><br><span class="line">git branch --set-upstream develop origin/develop</span><br></pre></td></tr></table></figure><h1 id="打patch过程"><a href="#打patch过程" class="headerlink" title="打patch过程"></a>打patch过程</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br><span class="line">git diff --cached &gt;XXX.patch</span><br><span class="line">git ci -m &apos;add patch&apos;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux查看CPU信息</title>
      <link href="/article/474643588.html"/>
      <url>/article/474643588.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="查看逻辑CPU个数："><a href="#查看逻辑CPU个数：" class="headerlink" title="查看逻辑CPU个数："></a>查看逻辑CPU个数：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#cat /proc/cpuinfo |grep "processor"|sort -u|wc -l</span></span><br><span class="line">24</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="查看物理CPU个数："><a href="#查看物理CPU个数：" class="headerlink" title="查看物理CPU个数："></a>查看物理CPU个数：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#grep "physical id" /proc/cpuinfo|sort -u|wc -l     </span></span><br><span class="line">2</span><br><span class="line"><span class="comment">#grep "physical id" /proc/cpuinfo|sort -u             </span></span><br><span class="line">physical id     : 0</span><br><span class="line">physical id     : 1</span><br><span class="line">``` </span><br><span class="line"><span class="comment"># 查看每个物理CPU内核个数：</span></span><br><span class="line">```bash</span><br><span class="line"><span class="comment">#grep "cpu cores" /proc/cpuinfo|uniq</span></span><br><span class="line">cpu cores       : 6</span><br></pre></td></tr></table></figure><h1 id="每个物理CPU上逻辑CPU个数："><a href="#每个物理CPU上逻辑CPU个数：" class="headerlink" title="每个物理CPU上逻辑CPU个数："></a>每个物理CPU上逻辑CPU个数：</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#grep "siblings" /proc/cpuinfo|uniq</span></span><br><span class="line">siblings        : 12</span><br></pre></td></tr></table></figure><h1 id="判断是否开启了超线程："><a href="#判断是否开启了超线程：" class="headerlink" title="判断是否开启了超线程："></a>判断是否开启了超线程：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如果多个逻辑CPU的&quot;physical id&quot;和&quot;core id&quot;均相同，说明开启了超线程</span><br><span class="line">或者换句话说</span><br><span class="line"> 逻辑CPU个数 &gt; 物理CPU个数 * CPU内核数   开启了超线程</span><br><span class="line"> 逻辑CPU个数 = 物理CPU个数 * CPU内核数   没有开启超线程</span><br></pre></td></tr></table></figure><h1 id="查询CPU所有信息"><a href="#查询CPU所有信息" class="headerlink" title="查询CPU所有信息:"></a>查询CPU所有信息:</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"> </span><br><span class="line">physicalNumber=0</span><br><span class="line">coreNumber=0</span><br><span class="line">logicalNumber=0</span><br><span class="line">HTNumber=0</span><br><span class="line"> </span><br><span class="line">logicalNumber=$(grep <span class="string">"processor"</span> /proc/cpuinfo|sort -u|wc -l)</span><br><span class="line">physicalNumber=$(grep <span class="string">"physical id"</span> /proc/cpuinfo|sort -u|wc -l)</span><br><span class="line">coreNumber=$(grep <span class="string">"cpu cores"</span> /proc/cpuinfo|uniq|awk -F<span class="string">':'</span> <span class="string">'&#123;print $2&#125;'</span>|xargs)</span><br><span class="line">HTNumber=$((logicalNumber / (physicalNumber * coreNumber)))</span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"****** CPU Information ******"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Logical CPU Number  : <span class="variable">$&#123;logicalNumber&#125;</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Physical CPU Number : <span class="variable">$&#123;physicalNumber&#125;</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"CPU Core Number     : <span class="variable">$&#123;coreNumber&#125;</span>"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"HT Number           : <span class="variable">$&#123;HTNumber&#125;</span>"</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">"*****************************"</span></span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#./cpuinfo  </span><br><span class="line">****** CPU Information ******</span><br><span class="line">Logical CPU Number  : 24</span><br><span class="line">Physical CPU Number : 2</span><br><span class="line">CPU Core Number     : 6</span><br><span class="line">HT Number           : 2</span><br><span class="line">*****************************</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dockerfile文件说明</title>
      <link href="/article/2974468587.html"/>
      <url>/article/2974468587.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>指令的一般格式为 INSTRUCTION arguments ，指令包括 FROM 、 MAINTAINER 、 RUN 等。</p><a id="more"></a><h1 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h1><p>格式为 FROM image 或 FROM image:tag 。<br>第一条指令必须为 FROM    指令。并且，如果在同一个Dockerfile中创建多个镜像时，可以使用多个 FROM 指令（每个镜像一次）。</p><h1 id="MAINTAINER"><a href="#MAINTAINER" class="headerlink" title="MAINTAINER"></a>MAINTAINER</h1><p>格式为 MAINTAINER name ，指定维护者信息。</p><h1 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h1><p>格式为 RUN command 或 RUN [“executable”, “param1”, “param2”] 。<br>前者将在shell终端中运行命令，即 /bin/sh -c ；后者则使用 exec 执行。指定使用其它终端可以通过第二种方式实现，例如 RUN [“/bin/bash”, “-c”, “echo hello”] 。<br>每条 RUN 指令将在当前镜像基础上执行指定命令，并提交为新的镜像。当命令较长时可以使用 \ 来换行。</p><h1 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h1><p>支持三种格式<br> CMD [“executable”,”param1”,”param2”] 使用 exec 执行，推荐方式；<br> CMD command param1 param2 在 /bin/sh 中执行，提供给需要交互的应用；<br> CMD [“param1”,”param2”] 提供给 ENTRYPOINT 的默认参数；<br>指定启动容器时执行的命令，每个Dockerfile只能有一条 CMD 命令。如果指定了多条命令，只有最后一条会被执行。<br>如果用户启动容器时候指定了运行的命令，则会覆盖掉 CMD 指定的命令。</p><h1 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h1><p>格式为 EXPOSE port [port…] 。<br>告诉Docker服务端容器暴露的端口号，供互联系统使用。</p><h1 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h1><p>格式为 ENV key value 。 指定一个环境变量，会被后续 RUN 指令使用，并在容器运行时保持。<br>例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ENV PG_MAJOR 9.3</span><br><span class="line">ENV PG_VERSION 9.3.4</span><br><span class="line">RUN curl -SL http://example.com/postgres-$PG_VERSION.tar.xz | tar -xJC /usr/src/postgress &amp;&amp; …</span><br><span class="line">ENV PATH /usr/local/postgres-$PG_MAJOR/bin:$PATH</span><br></pre></td></tr></table></figure><h1 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h1><p>格式为 ADD src dest 。<br>该命令将复制指定的 src 到容器中的 dest 。 其中 src 可以是Dockerfile所在目录的一个相对路径；也可以是一个URL；还可以是一个tar文件（自动解压为目录）。则。</p><h1 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h1><p>格式为 COPY src dest 。<br>复制本地主机的 src （为Dockerfile所在目录的相对路径）到容器中的dest。<br>当使用本地目录为源目录时，推荐使用 COPY 。</p><h1 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h1><p>两种格式：<br>  ENTRYPOINT [“executable”, “param1”, “param2”]<br>  ENTRYPOINT command param1 param2 （shell中执行）。<br>配置容器启动后执行的命令，并且不可被 docker run 提供的参数覆盖。<br>每个Dockerfile中只能有一个 ENTRYPOINT ，当指定多个时，只有最后一个起效。</p><h1 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a>VOLUME</h1><p>格式为 VOLUME [“/data”] 。<br>创建一个可以从本地主机或其他容器挂载的挂载点，一般用来存放数据库和需要保持的数据等。</p><h1 id="USER"><a href="#USER" class="headerlink" title="USER"></a>USER</h1><p>格式为 USER daemon 。<br>指定运行容器时的用户名或UID，后续的 RUN 也会使用指定用户。<br>当服务不需要管理员权限时，可以通过该命令指定运行用户。并且可以在之前创建所需要的用户，例如： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RUN groupadd -r postgres &amp;&amp; useradd -r -g postgres postgres</span><br></pre></td></tr></table></figure><p>要临时获取管理员权限可以使用 gosu ，而不推荐 sudo。</p><h1 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a>WORKDIR</h1><p>格式为 WORKDIR /path/to/workdir 。<br>为后续的 RUN 、 CMD 、 ENTRYPOINT 指令配置工作目录。<br>可以使用多个 WORKDIR 指令，后续命令如果参数是相对路径，则会基于之前命令指定的路径。例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WORKDIR /a</span><br><span class="line">WORKDIR b</span><br><span class="line">WORKDIR c</span><br><span class="line">RUN pwd</span><br></pre></td></tr></table></figure><p>则最终路径为 /a/b/c 。</p><h1 id="ONBUILD"><a href="#ONBUILD" class="headerlink" title="ONBUILD"></a>ONBUILD</h1><p>格式为 ONBUILD [INSTRUCTION] 。<br>配置当所创建的镜像作为其它新创建镜像的基础镜像时，所执行的操作指令。<br>例如，Dockerfile使用如下的内容创建了镜像 image-A 。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[...]</span><br><span class="line">ONBUILD ADD . /app/src</span><br><span class="line">ONBUILD RUN /usr/local/bin/python-build --dir /app/src</span><br><span class="line">[...]</span><br></pre></td></tr></table></figure><p>如果基于A创建新的镜像时，新的Dockerfile中使用 FROM image-A 指定基础镜像时，会自动执行 ONBUILD 指令内容，等价于在后面添加了两条指令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM image-A</span><br><span class="line">#Automatically run the following</span><br><span class="line">ADD . /app/src</span><br><span class="line">RUN /usr/local/bin/python-build --dir /app/src</span><br></pre></td></tr></table></figure><p>使用 ONBUILD 指令的镜像，推荐在标签中注明，例如 ruby:1.9-onbuild 。</p><h1 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h1><p>Dockerfile build 时默认会发送dockerfile所在目录的所有文件<br>Dockerfile 的镜像大小和RUN命令行数相关</p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装ODBC_MYSQL连接</title>
      <link href="/article/1999156721.html"/>
      <url>/article/1999156721.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>ODBC连接器是一个数据库抽象层，它可以让Asterisk与广泛 的数据库进行通信，而无需开发人员为Asterisk需要的每一个数据库创建一个单独的数据库连接。这样可以节省大量的开发工作和代码维护。因为我们在 Asterisk和数据库之间添加了其他应用层可能会有轻微的性能损失，但当你需要Asterisk系统功能强大，灵活的数据库功能时可以缓解适当的设计 是值得的。</p><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在安装连接器在Asterisk前，您必须安装ODBC到Linux上。要安装的ODBC驱动程序，请使用以下命令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install unixODBC unixODBC-devel libtool-ltdl libtool-ltdl-devel</span><br></pre></td></tr></table></figure><p>默认情况下，CentOS会安装通过ODBC连接PostgreSQL的驱动。要安装ODBC连接MySQL的驱动请执行下面的指令。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum install mysql-connector-odbc</span><br></pre></td></tr></table></figure><h1 id="为MySQL配置ODBC"><a href="#为MySQL配置ODBC" class="headerlink" title="为MySQL配置ODBC"></a>为MySQL配置ODBC</h1><p>MySQL的配置文件在/etc/odbcinst.ini</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#CentOS上默认文件已经包含了一些数据，包括MySQL的也存在，但我们需要一些更改。用下面的数据进行更改。</span><br><span class="line">[MySQL]</span><br><span class="line">Description = ODBC for MySQL</span><br><span class="line">Driver = /usr/lib/libmyodbc3.so</span><br><span class="line">Setup = /usr/lib/libodbcmyS.so</span><br><span class="line">FileUsage = 1</span><br></pre></td></tr></table></figure><p>通过运行下面的指令验证系统能找到驱动，如果一切都OK，会返回MySQL的标题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ odbcinst -q -d</span><br></pre></td></tr></table></figure><p>接下来，配置/etc/odbc.ini文件，根据自己的需要配置这里的文件，使数据库能被你的软件使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[MySQL]</span><br><span class="line">[asterisk-connector]</span><br><span class="line">Description           = MySQL connection to &apos;asterisk&apos; database</span><br><span class="line">Driver                = MySQL</span><br><span class="line">Database              = asterisk</span><br><span class="line">Server                = localhost</span><br><span class="line">UserName              = asterisk</span><br><span class="line">Password              = welcome</span><br><span class="line">Port                  = 3306</span><br><span class="line">Socket                = /var/lib/mysql/mysql.sock</span><br></pre></td></tr></table></figure><h1 id="验证ODBC连接器"><a href="#验证ODBC连接器" class="headerlink" title="验证ODBC连接器"></a>验证ODBC连接器</h1><p>现在利用isql功能验证能连到你的数据库上，当你输入指令后会看到结果为1的返回值就表明连接成功了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ echo &quot;select 1&quot; | isql -v asterisk-connector</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| Connected!                            |</span><br><span class="line">|                                       |</span><br><span class="line">| sql-statement                         |</span><br><span class="line">| help [tablename]                      |</span><br><span class="line">| quit                                  |</span><br><span class="line">|                                       |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">SQL&gt; </span><br><span class="line">+------------+</span><br><span class="line">| ?column?   |</span><br><span class="line">+------------+</span><br><span class="line">| 1          |</span><br><span class="line">+------------+</span><br><span class="line">SQLRowCount returns 1</span><br><span class="line">1 rows fetched</span><br><span class="line">$ exit</span><br></pre></td></tr></table></figure><p>到这里就达到我要连接MySQL的目的了。</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx SSL-https配置</title>
      <link href="/article/1090748342.html"/>
      <url>/article/1090748342.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>要保证Web浏览器到服务器的安全连接，HTTPS几乎是唯一选择。HTTPS其实就是HTTP over SSL，也就是让HTTP连接建立在SSL安全连接之上。</p><a id="more"></a><h1 id="nginx配置说明"><a href="#nginx配置说明" class="headerlink" title="nginx配置说明"></a>nginx配置说明</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">listen 80; //监听80端口</span><br><span class="line">listen 443;//监听443端口</span><br><span class="line">ssl on; //开启SSL</span><br><span class="line">ssl_certificate /usr/local/nginx/conf/server.crt; //配置CRT路径</span><br><span class="line">ssl_certificate_key /usr/local/nginx/conf/server.key; //配置KEY路径</span><br></pre></td></tr></table></figure><p>最近在研究nginx，整好遇到一个需求就是希望服务器与客户端之间传输内容是加密的，防止中间监听泄露信息，但是去证书服务商那边申请证书又不合算，因为访问服务器的都是内部人士，所以自己给自己颁发证书，忽略掉浏览器的不信任警报即可。下面是颁发证书和配置过程。</p><h1 id="安装openssl和openssl-devel"><a href="#安装openssl和openssl-devel" class="headerlink" title="安装openssl和openssl-devel"></a>安装openssl和openssl-devel</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//首先确保机器上安装了openssl和openssl-devel</span><br><span class="line"><span class="comment">#yum install openssl</span></span><br><span class="line"><span class="comment">#yum install openssl-devel</span></span><br></pre></td></tr></table></figure><h1 id="颁发证书"><a href="#颁发证书" class="headerlink" title="颁发证书"></a>颁发证书</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#cd /usr/local/nginx/conf</span></span><br><span class="line"><span class="comment">#openssl genrsa -des3 -out server.key 1024</span></span><br><span class="line"><span class="comment">#openssl req -new -key server.key -out server.csr</span></span><br><span class="line"><span class="comment">#openssl rsa -in server.key -out server_nopwd.key</span></span><br><span class="line"><span class="comment">#openssl x509 -req -days 365 -in server.csr -signkey server_nopwd.key -out server.crt</span></span><br></pre></td></tr></table></figure><h1 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">//至此证书已经生成完毕，下面就是配置nginx</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">443</span>;</span><br><span class="line">    <span class="attribute">ssl</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">ssl_certificate</span>  /usr/local/nginx/conf/server.crt;</span><br><span class="line">    <span class="attribute">ssl_certificate_key</span>  /usr/local/nginx/conf/server.key;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重启nginx即可。<br>ps： 如果出现“[emerg] 10464#0: unknown directive “ssl” in /usr/local/nginx-0.6.32/conf/nginx.conf:74”<br>则说明没有将ssl模块编译进nginx，在configure的时候加上“–with-http_ssl_module”即可</p>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 信号说明</title>
      <link href="/article/3489224698.html"/>
      <url>/article/3489224698.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>信号是进程之间互传消息的一种方法,俗称软件中断。它提供了一种处理异步事件的方法。</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">SIGHUP     #终止进程     终端线路挂断</span><br><span class="line">SIGINT     #终止进程     中断进程</span><br><span class="line">SIGQUIT    #建立CORE文件终止进程，并且生成core文件</span><br><span class="line">SIGILL     #建立CORE文件       非法指令</span><br><span class="line">SIGTRAP    #建立CORE文件       跟踪自陷</span><br><span class="line">SIGBUS     #建立CORE文件       总线错误</span><br><span class="line">SIGSEGV    #建立CORE文件       段非法错误</span><br><span class="line">SIGFPE     #建立CORE文件       浮点异常</span><br><span class="line">SIGIOT     #建立CORE文件       执行I/O自陷</span><br><span class="line">SIGKILL    #终止进程     杀死进程</span><br><span class="line">SIGPIPE    #终止进程     向一个没有读进程的管道写数据</span><br><span class="line">SIGALARM   #终止进程     计时器到时</span><br><span class="line">SIGTERM    #终止进程     软件终止信号</span><br><span class="line">SIGSTOP    #停止进程     非终端来的停止信号</span><br><span class="line">SIGTSTP    #停止进程     终端来的停止信号</span><br><span class="line">SIGCONT    #忽略信号     继续执行一个停止的进程</span><br><span class="line">SIGURG     #忽略信号     I/O紧急信号</span><br><span class="line">SIGIO      #忽略信号     描述符上可以进行I/O</span><br><span class="line">SIGCHLD    #忽略信号     当子进程停止或退出时通知父进程</span><br><span class="line">SIGTTOU    #停止进程     后台进程写终端</span><br><span class="line">SIGTTIN    #停止进程     后台进程读终端</span><br><span class="line">SIGXGPU    #终止进程     CPU时限超时</span><br><span class="line">SIGXFSZ    #终止进程     文件长度过长</span><br><span class="line">SIGWINCH   #忽略信号     窗口大小发生变化</span><br><span class="line">SIGPROF    #终止进程     统计分布图用计时器到时</span><br><span class="line">SIGUSR1    #终止进程     用户定义信号1</span><br><span class="line">SIGUSR2    #终止进程     用户定义信号2</span><br><span class="line">SIGVTALRM  #终止进程     虚拟计时器到时</span><br></pre></td></tr></table></figure><h1 id="SIGHUP"><a href="#SIGHUP" class="headerlink" title="SIGHUP"></a>SIGHUP</h1><p>本信号在用户终端连接(正常或非正常)结束时发出, 通常是在终端的控<br>制进程结束时, 通知同一session内的各个作业, 这时它们与控制终端<br>不再关联. </p><h1 id="SIGINT"><a href="#SIGINT" class="headerlink" title="SIGINT"></a>SIGINT</h1><p>程序终止(interrupt)信号, 在用户键入INTR字符(通常是Ctrl-C)时发出 </p><h1 id="SIGQUIT"><a href="#SIGQUIT" class="headerlink" title="SIGQUIT"></a>SIGQUIT</h1><p>和SIGINT类似, 但由QUIT字符(通常是Ctrl-)来控制. 进程在因收到<br>SIGQUIT退出时会产生core文件, 在这个意义上类似于一个程序错误信<br>号. </p><h1 id="SIGILL"><a href="#SIGILL" class="headerlink" title="SIGILL"></a>SIGILL</h1><p>执行了非法指令. 通常是因为可执行文件本身出现错误, 或者试图执行<br>数据段. 堆栈溢出时也有可能产生这个信号. </p><h1 id="SIGTRAP"><a href="#SIGTRAP" class="headerlink" title="SIGTRAP"></a>SIGTRAP</h1><p>由断点指令或其它trap指令产生. 由debugger使用. </p><h1 id="SIGABRT"><a href="#SIGABRT" class="headerlink" title="SIGABRT"></a>SIGABRT</h1><p>程序自己发现错误并调用abort时产生. </p><h1 id="SIGIOT"><a href="#SIGIOT" class="headerlink" title="SIGIOT"></a>SIGIOT</h1><p>在PDP-11上由iot指令产生, 在其它机器上和SIGABRT一样. </p><h1 id="SIGBUS"><a href="#SIGBUS" class="headerlink" title="SIGBUS"></a>SIGBUS</h1><p>非法地址, 包括内存地址对齐(alignment)出错. eg: 访问一个四个字长<br>的整数, 但其地址不是4的倍数. </p><h1 id="SIGFPE"><a href="#SIGFPE" class="headerlink" title="SIGFPE"></a>SIGFPE</h1><p>在发生致命的算术运算错误时发出. 不仅包括浮点运算错误, 还包括溢<br>出及除数为0等其它所有的算术的错误. </p><h1 id="SIGKILL"><a href="#SIGKILL" class="headerlink" title="SIGKILL"></a>SIGKILL</h1><p>用来立即结束程序的运行. 本信号不能被阻塞, 处理和忽略. </p><h1 id="SIGUSR1"><a href="#SIGUSR1" class="headerlink" title="SIGUSR1"></a>SIGUSR1</h1><p>留给用户使用 </p><h1 id="SIGSEGV"><a href="#SIGSEGV" class="headerlink" title="SIGSEGV"></a>SIGSEGV</h1><p>试图访问未分配给自己的内存, 或试图往没有写权限的内存地址写数据. </p><h1 id="SIGUSR2"><a href="#SIGUSR2" class="headerlink" title="SIGUSR2"></a>SIGUSR2</h1><p>留给用户使用 </p><h1 id="SIGPIPE"><a href="#SIGPIPE" class="headerlink" title="SIGPIPE"></a>SIGPIPE</h1><p>Broken pipe </p><h1 id="SIGALRM"><a href="#SIGALRM" class="headerlink" title="SIGALRM"></a>SIGALRM</h1><p>时钟定时信号, 计算的是实际的时间或时钟时间. alarm函数使用该<br>信号. </p><h1 id="SIGTERM"><a href="#SIGTERM" class="headerlink" title="SIGTERM"></a>SIGTERM</h1><p>程序结束(terminate)信号, 与SIGKILL不同的是该信号可以被阻塞和<br>处理. 通常用来要求程序自己正常退出. shell命令kill缺省产生这<br>个信号. </p><h1 id="SIGCHLD"><a href="#SIGCHLD" class="headerlink" title="SIGCHLD"></a>SIGCHLD</h1><p>子进程结束时, 父进程会收到这个信号. </p><h1 id="SIGCONT"><a href="#SIGCONT" class="headerlink" title="SIGCONT"></a>SIGCONT</h1><p>让一个停止(stopped)的进程继续执行. 本信号不能被阻塞. 可以用<br>一个handler来让程序在由stopped状态变为继续执行时完成特定的<br>工作. 例如, 重新显示提示符 </p><h1 id="SIGSTOP"><a href="#SIGSTOP" class="headerlink" title="SIGSTOP"></a>SIGSTOP</h1><p>停止(stopped)进程的执行. 注意它和terminate以及interrupt的区别: 该进程还未结束, 只是暂停执行. 本信号不能被阻塞, 处理或忽略. </p><h1 id="SIGTSTP"><a href="#SIGTSTP" class="headerlink" title="SIGTSTP"></a>SIGTSTP</h1><p>停止进程的运行, 但该信号可以被处理和忽略. 用户键入SUSP字符时<br>(通常是Ctrl-Z)发出这个信号 </p><h1 id="SIGTTIN"><a href="#SIGTTIN" class="headerlink" title="SIGTTIN"></a>SIGTTIN</h1><p>当后台作业要从用户终端读数据时, 该作业中的所有进程会收到SIGTTIN<br>信号. 缺省时这些进程会停止执行. </p><h1 id="SIGTTOU"><a href="#SIGTTOU" class="headerlink" title="SIGTTOU"></a>SIGTTOU</h1><p>类似于SIGTTIN, 但在写终端(或修改终端模式)时收到. </p><h1 id="SIGURG"><a href="#SIGURG" class="headerlink" title="SIGURG"></a>SIGURG</h1><p>有”紧急”数据或out-of-band数据到达socket时产生. </p><h1 id="SIGXCPU"><a href="#SIGXCPU" class="headerlink" title="SIGXCPU"></a>SIGXCPU</h1><p>超过CPU时间资源限制. 这个限制可以由getrlimit/setrlimit来读取/改变 </p><h1 id="SIGXFSZ"><a href="#SIGXFSZ" class="headerlink" title="SIGXFSZ"></a>SIGXFSZ</h1><p>超过文件大小资源限制. </p><h1 id="SIGVTALRM"><a href="#SIGVTALRM" class="headerlink" title="SIGVTALRM"></a>SIGVTALRM</h1><p>虚拟时钟信号. 类似于SIGALRM, 但是计算的是该进程占用的CPU时间. </p><h1 id="SIGPROF"><a href="#SIGPROF" class="headerlink" title="SIGPROF"></a>SIGPROF</h1><p>类似于SIGALRM/SIGVTALRM, 但包括该进程用的CPU时间以及系统调用的时间. </p><h1 id="SIGWINCH"><a href="#SIGWINCH" class="headerlink" title="SIGWINCH"></a>SIGWINCH</h1><p>窗口大小改变时发出. </p><h1 id="SIGIO"><a href="#SIGIO" class="headerlink" title="SIGIO"></a>SIGIO</h1><p>文件描述符准备就绪, 可以开始进行输入/输出操作. </p><h1 id="SIGPWR"><a href="#SIGPWR" class="headerlink" title="SIGPWR"></a>SIGPWR</h1><p>Power failure </p><h1 id="SIGSYS"><a href="#SIGSYS" class="headerlink" title="SIGSYS"></a>SIGSYS</h1><p>非法的系统调用。</p><p>有两个信号可以停止进程:SIGTERM和SIGKILL。 SIGTERM比较友好，进程能捕捉这个信号，根据您的需要来关闭程序。在关闭程序之前，您可以结束打开的记录文件和完成正在做的任务。在某些情况下，假 如进程正在进行作业而且不能中断，那么进程可以忽略这个SIGTERM信号。</p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux网络设置</title>
      <link href="/article/3139455287.html"/>
      <url>/article/3139455287.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="dns设置"><a href="#dns设置" class="headerlink" title="dns设置"></a>dns设置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#修改文件 vi /etc/resolv.conf</span><br><span class="line">#修改内容</span><br><span class="line">nameserver 114.114.114.114</span><br><span class="line">nameserver 8.8.8.8</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="ip设置"><a href="#ip设置" class="headerlink" title="ip设置"></a>ip设置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#修改文件: vi /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line">#修改内容</span><br><span class="line">DEVICE=eth0 #描述网卡对应的设备别名，例如ifcfg-eth0的文件中它为eth0</span><br><span class="line">BOOTPROTO=static #设置网卡获得ip地址的方式，可能的选项为static，dhcp或bootp，分别对应静态指定的 ip地址，通过dhcp协议获得的ip地址，通过bootp协议获得的ip地址</span><br><span class="line">BROADCAST=192.168.1.255 #对应的子网广播地址</span><br><span class="line">HWADDR=00:0C:29:68:AD:61 #对应的网卡物理地址</span><br><span class="line">IPADDR=192.168.1.99 #如果设置网卡获得 ip地址的方式为静态指定，此字段就指定了网卡对应的ip地址 </span><br><span class="line">IPV6INIT=no</span><br><span class="line">IPV6_AUTOCONF=no</span><br><span class="line">NETMASK=255.255.255.0 #网卡对应的网络掩码</span><br><span class="line">NETWORK=192.168.1.0 #网卡对应的网络地址</span><br><span class="line">ONBOOT=yes #系统启动时是否设置此网络接口，设置为yes时，系统启动时激活此设备</span><br><span class="line">DNS1=114.114.114.114</span><br><span class="line">DNS2=8.8.8.8</span><br><span class="line">#注:在centos6.3及以上版本，若/etc/resolv.conf设置好之后，出现域名还不能解析的情况下，则在此文件加上面红色部分</span><br></pre></td></tr></table></figure><h1 id="gateway网关设置"><a href="#gateway网关设置" class="headerlink" title="gateway网关设置"></a>gateway网关设置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#修改文件: vi /etc/sysconfig/network</span><br><span class="line">#修改内容</span><br><span class="line">NETWORKING=yes #表示系统是否使用网络，一般设置为yes。如果设为no，则不能使用网络，而且很多系统服务程序将无法启动</span><br><span class="line">HOSTNAME=localhost.localdomain #设置本机的主机名，这里设置的主机名要和/etc/hosts中设置的主机名对应</span><br><span class="line">GATEWAY=192.168.1.253 #ip网关地址，跟据你的实际情况设置</span><br></pre></td></tr></table></figure><p>注:    </p><ul><li>在vmware虚拟机中，通过以上设置;且在网络适配器选择“桥接模式”就可和你电脑的系统相互通信，还可访问外网哦(前提是你的外网可以访问)</li><li>以上都是修改的配置文件,也就是说系统重启后也会生效；下面说一些临时的修改方法（重启系统会失效）<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">修改IP地址 ifconfig eth0 192.168.0.2 netmask 255.255.255.0 </span><br><span class="line">修改网关 route add default gw 192.168.0.1 dev eth0</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Metasploit安装</title>
      <link href="/article/237147173.html"/>
      <url>/article/237147173.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="安装pgsql"><a href="#安装pgsql" class="headerlink" title="安装pgsql"></a>安装pgsql</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ruby</span><br><span class="line">sudo apt-get install postgresql-9.3 postgresql-client-9.3</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="修改pgsql用户密码"><a href="#修改pgsql用户密码" class="headerlink" title="修改pgsql用户密码"></a>修改pgsql用户密码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo su postgres  </span><br><span class="line">psql postgres  </span><br><span class="line">alter user postgres with password &apos;new password&apos;  </span><br><span class="line">sudo -u postgres psql postgres</span><br></pre></td></tr></table></figure><h1 id="连接Pgsql"><a href="#连接Pgsql" class="headerlink" title="连接Pgsql"></a>连接Pgsql</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo -u postgres psql -U postgres -d postgres -h 127.0.0.1</span><br></pre></td></tr></table></figure><h1 id="安装Metasploit"><a href="#安装Metasploit" class="headerlink" title="安装Metasploit"></a>安装Metasploit</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall</span><br><span class="line">chmod 755 msfinstall &amp;&amp; ./msfinstall</span><br><span class="line">msfconsole              #启动msf</span><br><span class="line">db_connect postgres:hehehe@127.0.0.1/msfdb</span><br><span class="line">db_status                # 查看数据库连接状态</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Metasploit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySql避免重复插入记录方法</title>
      <link href="/article/58818159.html"/>
      <url>/article/58818159.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="使用Ignore"><a href="#使用Ignore" class="headerlink" title="使用Ignore"></a>使用Ignore</h1><p>如果是用主键primary或者唯一索引unique区分了记录的唯一性,避免重复插入记录可以使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#这样当有重复记录就会忽略,执行后返回数字0</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">IGNORE</span> <span class="keyword">INTO</span> <span class="string">`table_name`</span> (<span class="string">`email`</span>, <span class="string">`phone`</span>, <span class="string">`user_id`</span>) <span class="keyword">VALUES</span> (<span class="string">'test9@163.com'</span>, <span class="string">'99999'</span>, <span class="string">'9999'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#还有个应用就是复制表,避免重复记录</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">IGNORE</span> <span class="keyword">INTO</span> <span class="string">`table_1`</span> (<span class="string">`name`</span>) <span class="keyword">SELECT</span> <span class="string">`name`</span> <span class="keyword">FROM</span> <span class="string">`table_2`</span>;</span><br></pre></td></tr></table></figure><a id="more"></a><h1 id="使用Replace"><a href="#使用Replace" class="headerlink" title="使用Replace"></a>使用Replace</h1><p>replace into 跟 insert 功能类似，不同点在于：replace into 首先尝试插入数据到表中</p><ul><li>如果发现表中已经有此行数据（根据主键或者唯一索引判断）则先删除此行数据，然后插入新的数据。 </li><li>否则，直接插入新数据。<br><font color="red">要注意的是：插入数据的表必须有主键或者是唯一索引！否则的话，replace into 会直接插入数据，这将导致表中出现重复的数据。</font><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#MySQL replace into 的三种形式：</span></span><br><span class="line"><span class="keyword">replace</span> <span class="keyword">into</span> tbl_name(col_name, ...) <span class="keyword">values</span>(...)</span><br><span class="line"><span class="keyword">replace</span> <span class="keyword">into</span> tbl_name(col_name, ...) <span class="keyword">select</span> ...</span><br><span class="line"><span class="keyword">replace</span> <span class="keyword">into</span> tbl_name <span class="keyword">set</span> col_name=<span class="keyword">value</span>, ...</span><br></pre></td></tr></table></figure></li></ul><h2 id="Replace描述"><a href="#Replace描述" class="headerlink" title="Replace描述"></a>Replace描述</h2><p>REPLACE的运行与INSERT很相似。只有一点例外，假如表中的一个旧记录与一个用于PRIMARY KEY或一个UNIQUE索引的新记录具有相同的值，则在新记录被插入之前，旧记录被删除。注意，除非表有一个PRIMARY KEY或UNIQUE索引，否则，使用一个REPLACE语句没有意义。该语句会与INSERT相同，因为没有索引被用于确定是否新行复制了其它的行。</p><p>所有列的值均取自在REPLACE语句中被指定的值。所有缺失的列被设置为各自的默认值，这和INSERT一样。您不能从当前行中引用值，也不能在新行中使用值。如果您使用一个例如“SET col_name = col_name + 1”的赋值，则对位于右侧的列名称的引用会被作为DEFAULT(col_name)处理。因此，该赋值相当于SET col_name = DEFAULT(col_name) + 1。为了能够使用REPLACE，您必须同时拥有表的INSERT和DELETE权限。</p><p>REPLACE语句会返回一个数，来指示受影响的行的数目。该数是被删除和被插入的行数的和。如果对于一个单行REPLACE该数为1，则一行被插入，同时没有行被删除。如果该数大于1，则在新行被插入前，有一个或多个旧行被删除。如果表包含多个唯一索引，并且新行复制了在不同的唯一索引中的不同旧行的值，则有可能是一个单一行替换了多个旧行。</p><p>受影响的行数可以容易地确定是否REPLACE只添加了一行，或者是否REPLACE也替换了其它行：检查该数是否为1（添加）或更大（替换）。</p><ol><li>尝试把新行插入到表中</li><li>当因为对于主键或唯一关键字出现重复关键字错误而造成插入失败时：<ul><li>从表中删除含有重复关键字值的冲突行</li><li>再次尝试把新行插入到表中</li></ul></li></ol><p>REPLACE [LOW_PRIORITY | DELAYED]<br>[INTO] tbl_name [(col_name,…)]<br>VALUES ({expr | DEFAULT},…),(…),…<br>或：<br>REPLACE [LOW_PRIORITY | DELAYED]<br>[INTO] tbl_name<br>SET col_name={expr | DEFAULT}, …<br>或：<br>REPLACE [LOW_PRIORITY | DELAYED]<br>[INTO] tbl_name [(col_name,…)]<br>SELECT …</p><p>REPLACE INTO <code>table</code> (<code>unique_column</code>,<code>num</code>) VALUES (‘$unique_value’,$num);跟INSERT INTO <code>table</code> (<code>unique_column</code>,<code>num</code>) VALUES(‘$unique_value’,$num) ON DUPLICATE UPDATE num=$num;还是有些区别的，区别就是replace into的时候会删除老记录。如果表中有一个自增的主键。那么就要出问题了。</p><p>首先，因为新纪录与老记录的主键值不同，所以其他表中所有与本表老数据主键id建立的关联全部会被破坏。<br>其次，就是，频繁的REPLACE INTO 会造成新纪录的主键的值迅速增大。总有一天。达到最大值后就会因为数据太大溢出了。就没法再插入新纪录了。数据表满了，不是因为空间不够了，而是因为主键的值没法再增加了。</p><h1 id="使用ON-DUPLICATE-KEY-UPDATE"><a href="#使用ON-DUPLICATE-KEY-UPDATE" class="headerlink" title="使用ON DUPLICATE KEY UPDATE"></a>使用ON DUPLICATE KEY UPDATE</h1><p>MySQL 自4.1版以后开始支持INSERT … ON DUPLICATE KEY UPDATE语法，使得原本需要执行3条SQL语句（SELECT,INSERT,UPDATE），缩减为1条语句即可完成。<br>INSERT … ON DUPLICATE KEY UPDATE，<strong>当插入的记录会引发主键冲突或者违反唯一约束时，则使用UPDATE更新旧的记录，否则插入新记录</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#ipstats表结构</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> ipstats (</span><br><span class="line">    ip <span class="built_in">VARCHAR</span>(<span class="number">15</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">    clicks <span class="built_in">SMALLINT</span>(<span class="number">5</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">#注意，要使用这条语句，前提条件是这个表必须有一个唯一索引或主键。</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> ipstats <span class="keyword">VALUES</span>(<span class="string">'192.168.0.1'</span>, <span class="number">1</span>) <span class="keyword">ON</span> <span class="keyword">DUPLICATE</span> <span class="keyword">KEY</span> <span class="keyword">UPDATE</span> clicks=clicks+<span class="number">1</span>;</span><br><span class="line"><span class="comment">#如果行作为新记录被插入，则受影响行的值为1；如果原有的记录被更新，则受影响行的值为2。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设置mysql重启后, Events自启动</title>
      <link href="/article/2934597634.html"/>
      <url>/article/2934597634.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>mysql5.1版本开始引进event概念。event既“时间触发器”，与triggers的事件触发不同，event类似与linux crontab计划任务，用于时间触发。通过单独或调用存储过程使用，在某一特定的时间点，触发相关的SQL语句或存储过程。</p><a id="more"></a><h1 id="适用范围"><a href="#适用范围" class="headerlink" title="适用范围"></a>适用范围</h1><p>对于每隔一段时间就有固定需求的操作，如创建表，删除数据等操作，可以使用event来处理。<br>例如：使用event在每月的1日凌晨1点自动创建下个月需要使用的三张表。</p><h1 id="使用权限"><a href="#使用权限" class="headerlink" title="使用权限"></a>使用权限</h1><p>单独使用event调用SQL语句时，查看和创建需要用户具有event权限，调用该SQL语句时，需要用户具有执行该SQL的权限。Event权限的设置保存在mysql.user表和mysql.db表的Event_priv字段中。 </p><h1 id="配置Events自动启动"><a href="#配置Events自动启动" class="headerlink" title="配置Events自动启动"></a>配置Events自动启动</h1><p>编辑/etc/my.cnf文件,mysql重启后,job能自动启动，在[mysqld]下添加event_scheduler=1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 etc]# more my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line">user=mysql</span><br><span class="line">symbolic-links=0</span><br><span class="line">#在[mysqld]下添加event_scheduler=1</span><br><span class="line">event_scheduler=1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql的主从配置实现</title>
      <link href="/article/3259372363.html"/>
      <url>/article/3259372363.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>mysql内建的复制功能是构建大型，高性能应用程序的基础。将Mysql的数据分布到多个系统上去，这种分布的机制，是通过将Mysql的某一台主机的数据复制到其它主机（slaves）上，并重新执行一遍来实现的。复制过程中一个服务器充当主服务器，而一个或多个其它服务器充当从服务器。主服务器将更新写入二进制日志文件，并维护文件的一个索引以跟踪日志循环。这些日志可以记录发送到从服务器的更新。当一个从服务器连接主服务器时，它通知主服务器从服务器在日志中读取的最后一次成功更新的位置。从服务器接收从那时起发生的任何更新，然后封锁并等待主服务器通知新的更新。</p><p><span style="color:red;"><strong>PS:当你进行复制时，所有对复制中的表的更新必须在主服务器上进行。否则，你必须要小心，以避免用户对主服务器上的表进行的更新与对从服务器上的表所进行的更新之间的冲突。</strong></span></p><a id="more"></a><h1 id="Mysql复制类型"><a href="#Mysql复制类型" class="headerlink" title="Mysql复制类型"></a>Mysql复制类型</h1><ul><li><p>基于语句的复制</p><blockquote><p>在主服务器上执行的SQL语句，在从服务器上执行同样的语句。MySQL默认采用基于语句的复制，效率比较高。一旦发现没法精确复制时，   会自动选着基于行的复制。   </p></blockquote></li><li><p>基于行的复制</p><blockquote><p>把改变的内容复制过去，而不是把命令在从服务器上执行一遍. 从mysql5.0开始支持</p></blockquote></li><li><p>混合类型的复制</p><blockquote><p>默认采用基于语句的复制，一旦发现基于语句的无法精确的复制时，就会采用基于行的复制。</p></blockquote></li></ul><h1 id="可以解决的问题"><a href="#可以解决的问题" class="headerlink" title="可以解决的问题"></a>可以解决的问题</h1><ul><li>数据分布 (Data distribution )</li><li>负载平衡(load balancing)</li><li>备份(Backups) </li><li>高可用性和容错行 High availability and failover </li></ul><h1 id="Mysql主从配置说明"><a href="#Mysql主从配置说明" class="headerlink" title="Mysql主从配置说明"></a>Mysql主从配置说明</h1><p>ps: 1.注意防火墙,这里直接关闭 systemctl stop firewalld.service</p><p>ps: 2.注意mysql的sql_model,这里去掉STRICT_TRANS_TABLES</p><h2 id="安装Mysql"><a href="#安装Mysql" class="headerlink" title="安装Mysql"></a>安装Mysql</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">yum install mysql-community-server</span><br></pre></td></tr></table></figure><h2 id="Master配置"><a href="#Master配置" class="headerlink" title="Master配置"></a>Master配置</h2><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database db_1;</span><br><span class="line">mysql&gt; create database db_2;</span><br></pre></td></tr></table></figure><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; insert into mysql.user(Host,User,Password) values('localhost','user_1',password('123456'));</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure><h3 id="用户授权"><a href="#用户授权" class="headerlink" title="用户授权"></a>用户授权</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#授权用户user_1只能从172.23.150.82这个IP访问主服务器172.23.151.43上面的数据库，并且只具有数据库备份的权限</span></span><br><span class="line">mysql&gt; grant replication slave  on *.* to 'user_1'@'172.23.150.82' identified by '123456' with grant option;</span><br></pre></td></tr></table></figure><h3 id="修改my-cnf"><a href="#修改my-cnf" class="headerlink" title="修改my.cnf"></a>修改my.cnf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line"><span class="comment">#设置服务器id，为1表示主服务器。</span></span><br><span class="line">server-id=1  </span><br><span class="line"> <span class="comment">#启动MySQ二进制日志系统。</span></span><br><span class="line">log_bin=mysql-bin </span><br><span class="line"><span class="comment">#需要同步的数据库名，如果有多个数据库，每个数据库一行</span></span><br><span class="line">binlog-do-db=db_1  </span><br><span class="line">binlog-do-db=db_2  </span><br><span class="line"><span class="comment">#不同步mysql系统数据库</span></span><br><span class="line">binlog-ignore-db=mysql</span><br></pre></td></tr></table></figure><h3 id="查看主服务器"><a href="#查看主服务器" class="headerlink" title="查看主服务器"></a>查看主服务器</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status;</span><br><span class="line">+<span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+<span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line">| mysql-bin.000002 |      252 | k8s,k9s      | mysql            |                   |</span><br><span class="line">+<span class="comment">------------------+----------+--------------+------------------+-------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"><span class="comment">#记住File，Position稍后使用</span></span><br></pre></td></tr></table></figure><h2 id="Slave配置"><a href="#Slave配置" class="headerlink" title="Slave配置"></a>Slave配置</h2><p>MySQL 5.1.7版本之后，已经不支持把master配置属性写入my.cnf配置文件中了，只需要把同步的数据库和要忽略的数据库写入即可。</p><h3 id="修改my-cnf-1"><a href="#修改my-cnf-1" class="headerlink" title="修改my.cnf"></a>修改my.cnf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br><span class="line"><span class="comment">#设置服务器id。</span></span><br><span class="line">server-id=2  </span><br><span class="line"> <span class="comment">#启动MySQ二进制日志系统。</span></span><br><span class="line">log_bin=mysql-bin </span><br><span class="line"><span class="comment">#需要同步的数据库名，如果有多个数据库，每个数据库一行</span></span><br><span class="line">replicate-do-db=db_1  </span><br><span class="line">replicate-do-db=db_2  </span><br><span class="line"><span class="comment">#不同步mysql系统数据库</span></span><br><span class="line">replicate-ignore-db=mysql</span><br></pre></td></tr></table></figure><h3 id="写入Master信息"><a href="#写入Master信息" class="headerlink" title="写入Master信息"></a>写入Master信息</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#停止slave同步进程</span></span><br><span class="line">mysql&gt; stop slave; </span><br><span class="line"><span class="comment">#同步信息</span></span><br><span class="line">mysql&gt; change master to master_host='172.23.151.43',master_user='user_1',master_password='123456',master_log_file='mysql-bin.000002' ,master_log_pos=252; </span><br><span class="line"><span class="comment">#开启slave同步进程</span></span><br><span class="line">mysql&gt; start slave;</span><br></pre></td></tr></table></figure><h3 id="查看slave信息"><a href="#查看slave信息" class="headerlink" title="查看slave信息"></a>查看slave信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show slave status \G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: 172.23.151.43</span><br><span class="line">                  Master_User: user_1</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000002</span><br><span class="line">          Read_Master_Log_Pos: 252</span><br><span class="line">               Relay_Log_File: mysqld-relay-bin.000005</span><br><span class="line">                Relay_Log_Pos: 415</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000002</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: k8s,k9s</span><br><span class="line">          Replicate_Ignore_DB: mysql</span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: </span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error: </span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 252</span><br><span class="line">              Relay_Log_Space: 752</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File: </span><br><span class="line">           Master_SSL_CA_Path: </span><br><span class="line">              Master_SSL_Cert: </span><br><span class="line">            Master_SSL_Cipher: </span><br><span class="line">               Master_SSL_Key: </span><br><span class="line">        Seconds_Behind_Master: 0</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 0</span><br><span class="line">                Last_IO_Error: </span><br><span class="line">               Last_SQL_Errno: 0</span><br><span class="line">               Last_SQL_Error: </span><br><span class="line">  Replicate_Ignore_Server_Ids: </span><br><span class="line">             Master_Server_Id: 1</span><br><span class="line">                  Master_UUID: c5836ee2-9a81-11e6-825f-080027d8142b</span><br><span class="line">             Master_Info_File: /var/lib/mysql/master.info</span><br><span class="line">                    SQL_Delay: 0</span><br><span class="line">          SQL_Remaining_Delay: NULL</span><br><span class="line">      Slave_SQL_Running_State: Slave has read all relay log; waiting for the slave I/O thread to <span class="keyword">update</span> it</span><br><span class="line">           Master_Retry_Count: <span class="number">86400</span></span><br><span class="line">                  Master_Bind: </span><br><span class="line">      Last_IO_Error_Timestamp: </span><br><span class="line">     Last_SQL_Error_Timestamp: </span><br><span class="line">               Master_SSL_Crl: </span><br><span class="line">           Master_SSL_Crlpath: </span><br><span class="line">           Retrieved_Gtid_Set: </span><br><span class="line">            Executed_Gtid_Set: </span><br><span class="line">                Auto_Position: <span class="number">0</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>PS:</p><ul><li><p>成功</p><blockquote><p>Slave_IO_Running: Yes<br>Slave_SQL_Running: Yes<br>以上这两个参数的值为Yes，即说明配置成功！</p></blockquote></li><li><p>错误信息</p><blockquote><p>使用show slave status;查看Last_IO_Errno,Last_IO_Error来查看错误信息</p></blockquote></li><li><p>排查</p><blockquote><p>使用show variables like ‘server_id’;来检查server_id,server_id要不一样</p></blockquote></li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://blog.csdn.net/hguisu/article/details/7325124/" target="_blank" rel="noopener">高性能Mysql主从架构的复制原理及配置详解</a><br><a href="http://blog.csdn.net/wyzxg/article/details/8787878" target="_blank" rel="noopener">mysql的sql_mode合理设置</a><br><a href="http://blog.csdn.net/lanonola/article/details/52571651" target="_blank" rel="noopener">MySQL主从复制结构中常用参数</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql索引的使用</title>
      <link href="/article/3739381465.html"/>
      <url>/article/3739381465.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。更通俗的说，数据库索引好比是一本书前面的目录，能加快数据库的查询速度。</p><a id="more"></a><h1 id="索引类型"><a href="#索引类型" class="headerlink" title="索引类型"></a>索引类型</h1><p>索引分为聚簇索引和非聚簇索引两种，聚簇索引是按照数据存放的物理位置为顺序的，而非聚簇索引就不一样了；聚簇索引能提高多行检索的速度，而非聚簇索引对于单行的检索很快。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html" target="_blank" rel="noopener">MySQL索引背后的数据结构及算法原理</a><br><a href="https://yq.aliyun.com/articles/50625" target="_blank" rel="noopener">MySQL · 引擎特性 · 初识 MySQL GIS 及 InnoDB R-TREE</a><br><a href="http://dev.mysql.com/doc/refman/5.7/en/fulltext-search.html" target="_blank" rel="noopener">Full-Text Search Functions</a><br><a href="http://dev.mysql.com/doc/refman/5.7/en/index-btree-hash.html" target="_blank" rel="noopener">Comparison of B-Tree and Hash Indexes</a><br><a href="http://www.ganktools.com/blog/post/backtrack843/Mysql%E6%9F%A5%E7%9C%8B%E7%B4%A2%E5%BC%95%E4%BD%BF%E7%94%A8%E7%8A%B6%E6%80%81" target="_blank" rel="noopener">Mysql查看索引使用状态</a></p><h2 id="B-Tree"><a href="#B-Tree" class="headerlink" title="B-Tree"></a>B-Tree</h2><p>最常见的索引类型，基于B-Tree数据结构。B-Tree的基本思想是，所有值（被索引的列）都是排过序的，每个叶节点到跟节点距离相等。所以B-Tree适合用来查找某一范围内的数据，而且可以直接支持数据排序（ORDERBY）。但是当索引多列时，列的顺序特别重要，需要格外注意。InnoDB和MyISAM都支持B-Tree索引。InnoDB用的是一个变种B+Tree，而MyISAM为了节省空间对索引进行了压缩，从而牺牲了性能。</p><h2 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h2><p>基于hash表。所以这种索引只支持精确查找，不支持范围查找，不支持排序。这意味着范围查找或ORDER BY都要依赖server层的额外工作。目前只有Memory引擎支持显式的hash索引（但是它的hash是nonunique的，冲突太多时也会影响查找性能）。Memory引擎默认的索引类型即是Hash索引，虽然它也支持B-Tree索引。</p><h2 id="R-Tree"><a href="#R-Tree" class="headerlink" title="R-Tree"></a>R-Tree</h2><p>RTREE在mysql很少使用，仅支持geometry数据类型，支持该类型的存储引擎只有MyISAM、BDb、InnoDb、NDb、Archive几种。相对于BTREE，RTREE的优势在于范围查找。</p><h2 id="Full-text"><a href="#Full-text" class="headerlink" title="Full-text"></a>Full-text</h2><p><strong>MySQL从3.23.23版开始支持全文索引和全文检索</strong>,主要用来查找文本中的关键字，而不是直接与索引中的值相比较。Full-text索引跟其它索引大不相同，它更像是一个搜索引擎，而不是简单的WHERE语句的参数匹配。你可以对某列分别进行full-text索引和B-Tree索引，两者互不冲突。Full-text索引配合MATCH AGAINST操作使用，而不是一般的WHERE语句加LIKE。</p><h1 id="索引的使用"><a href="#索引的使用" class="headerlink" title="索引的使用"></a>索引的使用</h1><h2 id="普通索引"><a href="#普通索引" class="headerlink" title="普通索引"></a>普通索引</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">–直接创建索引</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> index_name <span class="keyword">ON</span> <span class="keyword">table</span>(<span class="keyword">column</span>(<span class="keyword">length</span>))</span><br><span class="line">–修改表结构的方式添加索引</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">ADD</span> <span class="keyword">INDEX</span> index_name <span class="keyword">ON</span> (<span class="keyword">column</span>(<span class="keyword">length</span>))</span><br><span class="line">–创建表的时候同时创建索引</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`table`</span> (</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT ,</span><br><span class="line"><span class="string">`title`</span> <span class="built_in">char</span>(<span class="number">255</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line"><span class="string">`content`</span> <span class="built_in">text</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> ,</span><br><span class="line"><span class="string">`time`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> ,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line"><span class="keyword">INDEX</span> index_name (title(<span class="keyword">length</span>))</span><br><span class="line">)</span><br><span class="line">–删除索引</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">INDEX</span> index_name <span class="keyword">ON</span> <span class="keyword">table</span></span><br></pre></td></tr></table></figure><h2 id="唯一索引"><a href="#唯一索引" class="headerlink" title="唯一索引"></a>唯一索引</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">–创建唯一索引</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">UNIQUE</span> <span class="keyword">INDEX</span> indexName <span class="keyword">ON</span> <span class="keyword">table</span>(<span class="keyword">column</span>(<span class="keyword">length</span>))</span><br><span class="line">–修改表结构</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> indexName <span class="keyword">ON</span> (<span class="keyword">column</span>(<span class="keyword">length</span>))</span><br><span class="line">–创建表的时候直接指定</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`table`</span> (</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT ,</span><br><span class="line"><span class="string">`title`</span> <span class="built_in">char</span>(<span class="number">255</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line"><span class="string">`content`</span> <span class="built_in">text</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> ,</span><br><span class="line"><span class="string">`time`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> ,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line"><span class="keyword">UNIQUE</span> indexName (title(<span class="keyword">length</span>))</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="全文索引"><a href="#全文索引" class="headerlink" title="全文索引"></a>全文索引</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">–创建表的时候添加全文索引</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`table`</span> (</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT ,</span><br><span class="line"><span class="string">`title`</span> <span class="built_in">char</span>(<span class="number">255</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line"><span class="string">`content`</span> <span class="built_in">text</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="literal">NULL</span> ,</span><br><span class="line"><span class="string">`time`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> ,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">FULLTEXT (<span class="keyword">content</span>)</span><br><span class="line">);</span><br><span class="line">–修改表结构添加全文索引</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> article <span class="keyword">ADD</span> FULLTEXT index_content(<span class="keyword">content</span>)</span><br><span class="line">–直接创建索引</span><br><span class="line"><span class="keyword">CREATE</span> FULLTEXT <span class="keyword">INDEX</span> index_content <span class="keyword">ON</span> article(<span class="keyword">content</span>)</span><br></pre></td></tr></table></figure><h2 id="组合索引"><a href="#组合索引" class="headerlink" title="组合索引"></a>组合索引</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">–创建表的时候添加组合索引</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`test`</span> (<span class="string">'aaa'</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="string">''</span>, <span class="string">'bbb'</span> <span class="built_in">varchar</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="string">''</span>,  <span class="string">'ccc'</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="number">0</span>, <span class="keyword">KEY</span> <span class="string">`sindex`</span> (<span class="string">`aaa`</span>,<span class="string">`bbb`</span>,<span class="string">`ccc`</span>) )  <span class="keyword">ENGINE</span>=MyISAM <span class="keyword">COMMENT</span>=<span class="string">''</span>;</span><br><span class="line">–修改表结构添加组合索引</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> mytable <span class="keyword">ADD</span> <span class="keyword">INDEX</span> name_city_age (<span class="keyword">name</span>(<span class="number">10</span>),city,age);</span><br></pre></td></tr></table></figure><h2 id="主键索引"><a href="#主键索引" class="headerlink" title="主键索引"></a>主键索引</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">–创建表的时候添加主键索引</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> mytable( <span class="keyword">ID</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>, username <span class="built_in">VARCHAR</span>(<span class="number">16</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>, PRIMARY <span class="keyword">KEY</span>(<span class="keyword">ID</span>) );</span><br><span class="line">–修改表结构添加主键索引</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> mytable <span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span> PK_testNoPK(<span class="keyword">id</span>);</span><br></pre></td></tr></table></figure><h1 id="查看索引信息"><a href="#查看索引信息" class="headerlink" title="查看索引信息"></a>查看索引信息</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方法1</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">index</span> <span class="keyword">from</span> k8s_user \G;</span><br><span class="line"><span class="comment">#结果:</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">        Table: k8s_user</span><br><span class="line">   Non_unique: 0</span><br><span class="line">     Key_name: PRIMARY</span><br><span class="line"> Seq_in_index: 1</span><br><span class="line">  Column_name: id</span><br><span class="line">    Collation: A</span><br><span class="line">  Cardinality: 1</span><br><span class="line">     Sub_part: NULL</span><br><span class="line">       Packed: NULL</span><br><span class="line">         Null: </span><br><span class="line">   Index_type: BTREE</span><br><span class="line">      <span class="keyword">Comment</span>: </span><br><span class="line">Index_comment: </span><br><span class="line">*************************** <span class="number">2.</span> <span class="keyword">row</span> ***************************</span><br><span class="line">        <span class="keyword">Table</span>: k8s_user</span><br><span class="line">   Non_unique: <span class="number">0</span></span><br><span class="line">     Key_name: UserName</span><br><span class="line"> Seq_in_index: <span class="number">1</span></span><br><span class="line">  Column_name: username</span><br><span class="line">    <span class="keyword">Collation</span>: A</span><br><span class="line">  Cardinality: <span class="number">1</span></span><br><span class="line">     Sub_part: <span class="literal">NULL</span></span><br><span class="line">       Packed: <span class="literal">NULL</span></span><br><span class="line">         <span class="literal">Null</span>: </span><br><span class="line">   Index_type: BTREE</span><br><span class="line">      <span class="keyword">Comment</span>: </span><br><span class="line">Index_comment: </span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"><span class="comment">#方法2</span></span><br><span class="line"><span class="keyword">select</span> INDEX_NAME,INDEX_TYPE <span class="keyword">from</span> INFORMATION_SCHEMA.STATISTICS <span class="keyword">where</span> TABLE_NAME=<span class="string">"k8s_user"</span>;</span><br><span class="line"><span class="comment">#结果:</span></span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">| INDEX_NAME | INDEX_TYPE |</span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">| PRIMARY    | BTREE      |</span><br><span class="line">| UserName   | BTREE      |</span><br><span class="line">+<span class="comment">------------+------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql查看索引使用状态</title>
      <link href="/article/1119887905.html"/>
      <url>/article/1119887905.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在分析查询性能时，考虑EXPLAIN关键字同样很管用。EXPLAIN关键字一般放在SELECT查询语句的前面，用于描述MySQL如何执行查询操作、以及MySQL成功返回结果集需要执行的行数。explain 可以帮助我们分析 select 语句,让我们知道查询效率低下的原因,从而改进我们查询,让查询优化器能够更好的工作。</p><a id="more"></a><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> * <span class="keyword">from</span> k8s_user <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>；</span><br><span class="line"><span class="comment">#结果：</span></span><br><span class="line">+<span class="comment">----+-------------+----------+-------+---------------+---------+---------+-------+------+-------+</span></span><br><span class="line">| <span class="keyword">id</span> | select_type | <span class="keyword">table</span>    | <span class="keyword">type</span>  | possible_keys | <span class="keyword">key</span>     | key_len | <span class="keyword">ref</span>   | <span class="keyword">rows</span> | Extra |</span><br><span class="line">+<span class="comment">----+-------------+----------+-------+---------------+---------+---------+-------+------+-------+</span></span><br><span class="line">|  <span class="number">1</span> | SIMPLE      | k8s_user | const | PRIMARY       | PRIMARY | <span class="number">4</span>       | const |    <span class="number">1</span> |       |</span><br><span class="line">+<span class="comment">----+-------------+----------+-------+---------------+---------+---------+-------+------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h1 id="EXPLAIN列的解释："><a href="#EXPLAIN列的解释：" class="headerlink" title="EXPLAIN列的解释："></a>EXPLAIN列的解释：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">table：显示这一行的数据是关于哪张表的</span><br><span class="line">type：这是重要的列，显示连接使用了何种类型。从最好到最差的连接类型为const、eq_reg、ref、range、indexhe和ALL</span><br><span class="line">possible_keys：显示可能应用在这张表中的索引。如果为空，没有可能的索引。可以为相关的域从WHERE语句中选择一个合适的语句</span><br><span class="line">key： 实际使用的索引。如果为NULL，则没有使用索引。很少的情况下，MYSQL会选择优化不足的索引。这种情况下，可以在SELECT语句中使用USE INDEX（indexname）来强制使用一个索引或者用IGNORE INDEX（indexname）来强制MYSQL忽略索引</span><br><span class="line">key_len：使用的索引的长度。在不损失精确性的情况下，长度越短越好</span><br><span class="line">ref：显示索引的哪一列被使用了，如果可能的话，是一个常数</span><br><span class="line">rows：MYSQL认为必须检查的用来返回请求数据的行数</span><br><span class="line">Extra：关于MYSQL如何解析查询的额外信息。将在表4.3中讨论，但这里可以看到的坏的例子是Using temporary和Using filesort，意思MYSQL根本不能使用索引，结果是检索会很慢</span><br></pre></td></tr></table></figure><h1 id="extra列返回的描述的意义"><a href="#extra列返回的描述的意义" class="headerlink" title="extra列返回的描述的意义"></a>extra列返回的描述的意义</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Distinct:一旦MYSQL找到了与行相联合匹配的行，就不再搜索了</span><br><span class="line">Not exists: MYSQL优化了LEFT JOIN，一旦它找到了匹配LEFT JOIN标准的行，就不再搜索了</span><br><span class="line">Range checked for each Record（index map:#）:没有找到理想的索引，因此对于从前面表中来的每一个行组合，MYSQL检查使用哪个索引，并用它来从表中返回行。这是使用索引的最慢的连接之一</span><br><span class="line">Using filesort: 看到这个的时候，查询就需要优化了。MYSQL需要进行额外的步骤来发现如何对返回的行排序。它根据连接类型以及存储排序键值和匹配条件的全部行的行指针来排序全部行</span><br><span class="line">Using index: 列数据是从仅仅使用了索引中的信息而没有读取实际的行动的表返回的，这发生在对表的全部的请求列都是同一个索引的部分的时候</span><br><span class="line">Using temporary 看到这个的时候，查询需要优化了。这里，MYSQL需要创建一个临时表来存储结果，这通常发生在对不同的列集进行ORDER BY上，而不是GROUP BY上</span><br><span class="line">Where used 使用了WHERE从句来限制哪些行将与下一张表匹配或者是返回给用户。如果不想返回表中的全部行，并且连接类型ALL或index，这就会发生，或者是查询有问题不同连接类型的解释（按照效率高低的顺序排序）</span><br><span class="line">system 表只有一行：system表。这是const连接类型的特殊情况</span><br><span class="line">const:表中的一个记录的最大值能够匹配这个查询（索引可以是主键或惟一索引）。因为只有一行，这个值实际就是常数，因为MYSQL先读这个值然后把它当做常数来对待</span><br><span class="line">eq_ref:在连接中，MYSQL在查询时，从前面的表中，对每一个记录的联合都从表中读取一个记录，它在查询使用了索引为主键或惟一键的全部时使用</span><br><span class="line">ref:这个连接类型只有在查询使用了不是惟一或主键的键或者是这些类型的部分（比如，利用最左边前缀）时发生。对于之前的表的每一个行联合，全部记录都将从表中读出。这个类型严重依赖于根据索引匹配的记录多少—越少越好</span><br><span class="line">range:这个连接类型使用索引返回一个范围中的行，比如使用&gt;或&lt;查找东西时发生的情况</span><br><span class="line">index: 这个连接类型对前面的表中的每一个记录联合进行完全扫描（比ALL更好，因为索引一般小于表数据）</span><br><span class="line">ALL:这个连接类型对于前面的每一个记录联合进行完全扫描，这一般比较糟糕，应该尽量避免</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>my.ini常用配置说明</title>
      <link href="/article/2980798673.html"/>
      <url>/article/2980798673.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>MySQL配置文件在Windows下叫my.ini，在MySQL的安装根目录下；在Linux下叫my.cnf，该文件位于/etc/my.cnf</p><a id="more"></a><h1 id="缓存优化"><a href="#缓存优化" class="headerlink" title="缓存优化"></a>缓存优化</h1><p>在my.cnf 中添加/修改以下选项:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#取消文件系统的外部锁</span><br><span class="line">skip-locking</span><br><span class="line">#不进行域名反解析,注意由此带来的权限/授权问题</span><br><span class="line">skip-name-resolve</span><br><span class="line">#索引缓存,根据内存大小而定,如果是独立的db服务器,可以设置高达80%的内存总量</span><br><span class="line">key_buffer = 512M</span><br><span class="line">#连接排队列表总数</span><br><span class="line">back_log = 200</span><br><span class="line">max_allowed_packet = 2M</span><br><span class="line">#打开表缓存总数,可以避免频繁的打开数据表产生的开销</span><br><span class="line">table_cache = 512</span><br><span class="line">#每个线程排序所需的缓冲</span><br><span class="line">sort_buffer_size = 4M</span><br><span class="line">#每个线程读取索引所需的缓冲</span><br><span class="line">read_buffer_size = 4M</span><br><span class="line">#MyISAM表发生变化时重新排序所需的缓冲</span><br><span class="line">myisam_sort_buffer_size = 64M</span><br><span class="line">#缓存可重用的线程数</span><br><span class="line">thread_cache = 128</span><br><span class="line">#查询结果缓存</span><br><span class="line">query_cache_size = 128M</span><br><span class="line">#设置超时时间,能避免长连接</span><br><span class="line">set-variable = wait_timeout=60</span><br><span class="line">#最大并发线程数,cpu数量*2</span><br><span class="line">thread_concurrency = 4</span><br><span class="line">#记录慢查询,然后对慢查询一一优化</span><br><span class="line">log-slow-queries = slow.log</span><br><span class="line">long_query_time = 1</span><br><span class="line">#关闭不需要的表类型,如果你需要,就不要加上这个</span><br><span class="line">skip-innodb</span><br><span class="line">skip-bdb</span><br></pre></td></tr></table></figure><h1 id="配置例子"><a href="#配置例子" class="headerlink" title="配置例子"></a>配置例子</h1><p>此MySQL配置文件例子针对4G内存，并在两个日ip 2w ,pv 20w 测试过的。主要使用INNODB处理复杂队列并且连接数量较少的MySQL服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line"># 以下选项会被MySQL客户端应用读取.</span><br><span class="line"># 注意只有MySQL附带的客户端应用程序保证可以读取这段内容.</span><br><span class="line"># 如果你想你自己的MySQL应用程序获取这些值</span><br><span class="line"># 需要在MySQL客户端库初始化的时候指定这些选项</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">[client]</span><br><span class="line">#password = [your_password]</span><br><span class="line">port = @MYSQL_TCP_PORT@</span><br><span class="line">socket = @MYSQL_UNIX_ADDR@</span><br><span class="line"></span><br><span class="line"># *** 应用定制选项 ***</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># MySQL 服务端</span><br><span class="line">#</span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line"># 一般配置选项</span><br><span class="line">port = @MYSQL_TCP_PORT@</span><br><span class="line">socket = @MYSQL_UNIX_ADDR@</span><br><span class="line"></span><br><span class="line"># back_log 是操作系统在监听队列中所能保持的连接数,</span><br><span class="line"># 队列保存了在MySQL连接管理器线程处理之前的连接.</span><br><span class="line"># 如果你有非常高的连接率并且出现”connection refused” 报错,</span><br><span class="line"># 你就应该增加此处的值.</span><br><span class="line"># 检查你的操作系统文档来获取这个变量的最大值.</span><br><span class="line"># 如果将back_log设定到比你操作系统限制更高的值,将会没有效果</span><br><span class="line">back_log = 50</span><br><span class="line"></span><br><span class="line"># 不在TCP/IP端口上进行监听.</span><br><span class="line"># 如果所有的进程都是在同一台服务器连接到本地的mysqld,</span><br><span class="line"># 这样设置将是增强安全的方法</span><br><span class="line"># 所有mysqld的连接都是通过Unix sockets 或者命名管道进行的.</span><br><span class="line"># 注意在windows下如果没有打开命名管道选项而只是用此项</span><br><span class="line"># (通过 “enable-named-pipe” 选项) 将会导致mysql服务没有任何作用!</span><br><span class="line">#skip-networking</span><br><span class="line"></span><br><span class="line"># MySQL 服务所允许的同时会话数的上限</span><br><span class="line"># 其中一个连接将被SUPER权限保留作为管理员登录.</span><br><span class="line"># 即便已经达到了连接数的上限.</span><br><span class="line">max_connections = 100</span><br><span class="line"># 每个客户端连接最大的错误允许数量,如果达到了此限制.</span><br><span class="line"># 这个客户端将会被MySQL服务阻止直到执行了”FLUSH HOSTS” 或者服务重启</span><br><span class="line"># 非法的密码以及其他在链接时的错误会增加此值.</span><br><span class="line"># 查看 “Aborted_connects” 状态来获取全局计数器.</span><br><span class="line">max_connect_errors = 10</span><br><span class="line"></span><br><span class="line"># 所有线程所打开表的数量.</span><br><span class="line"># 增加此值就增加了mysqld所需要的文件描述符的数量</span><br><span class="line"># 这样你需要确认在[mysqld_safe]中 “open-files-limit” 变量设置打开文件数量允许至少4096</span><br><span class="line">table_cache = 2048</span><br><span class="line"></span><br><span class="line"># 允许外部文件级别的锁. 打开文件锁会对性能造成负面影响</span><br><span class="line"># 所以只有在你在同样的文件上运行多个数据库实例时才使用此选项(注意仍会有其他约束!)</span><br><span class="line"># 或者你在文件层面上使用了其他一些软件依赖来锁定MyISAM表</span><br><span class="line">#external-locking</span><br><span class="line"></span><br><span class="line"># 服务所能处理的请求包的最大大小以及服务所能处理的最大的请求大小(当与大的BLOB字段一起工作时相当必要)</span><br><span class="line"># 每个连接独立的大小.大小动态增加</span><br><span class="line">max_allowed_packet = 16M</span><br><span class="line"></span><br><span class="line"># 在一个事务中binlog为了记录SQL状态所持有的cache大小</span><br><span class="line"># 如果你经常使用大的,多声明的事务,你可以增加此值来获取更大的性能.</span><br><span class="line"># 所有从事务来的状态都将被缓冲在binlog缓冲中然后在提交后一次性写入到binlog中</span><br><span class="line"># 如果事务比此值大, 会使用磁盘上的临时文件来替代.</span><br><span class="line"># 此缓冲在每个连接的事务第一次更新状态时被创建</span><br><span class="line">binlog_cache_size = 1M</span><br><span class="line"></span><br><span class="line"># 独立的内存表所允许的最大容量.</span><br><span class="line"># 此选项为了防止意外创建一个超大的内存表导致永尽所有的内存资源.</span><br><span class="line">max_heap_table_size = 64M</span><br><span class="line"></span><br><span class="line"># 排序缓冲被用来处理类似ORDER BY以及GROUP BY队列所引起的排序</span><br><span class="line"># 如果排序后的数据无法放入排序缓冲,</span><br><span class="line"># 一个用来替代的基于磁盘的合并分类会被使用</span><br><span class="line"># 查看 “Sort_merge_passes” 状态变量.</span><br><span class="line"># 在排序发生时由每个线程分配</span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line"></span><br><span class="line"># 此缓冲被使用来优化全联合(full JOINs 不带索引的联合).</span><br><span class="line"># 类似的联合在极大多数情况下有非常糟糕的性能表现,</span><br><span class="line"># 但是将此值设大能够减轻性能影响.</span><br><span class="line"># 通过 “Select_full_join” 状态变量查看全联合的数量</span><br><span class="line"># 当全联合发生时,在每个线程中分配</span><br><span class="line">join_buffer_size = 8M</span><br><span class="line"></span><br><span class="line"># 我们在cache中保留多少线程用于重用</span><br><span class="line"># 当一个客户端断开连接后,如果cache中的线程还少于thread_cache_size,</span><br><span class="line"># 则客户端线程被放入cache中.</span><br><span class="line"># 这可以在你需要大量新连接的时候极大的减少线程创建的开销</span><br><span class="line"># (一般来说如果你有好的线程模型的话,这不会有明显的性能提升.)</span><br><span class="line">thread_cache_size = 8</span><br><span class="line"></span><br><span class="line"># 此允许应用程序给予线程系统一个提示在同一时间给予渴望被运行的线程的数量.</span><br><span class="line"># 此值只对于支持 thread_concurrency() 函数的系统有意义( 例如Sun Solaris).</span><br><span class="line"># 你可可以尝试使用 [CPU数量]*(2..4) 来作为thread_concurrency的值</span><br><span class="line">thread_concurrency = 8</span><br><span class="line"></span><br><span class="line"># 查询缓冲常被用来缓冲 SELECT 的结果并且在下一次同样查询的时候不再执行直接返回结果.</span><br><span class="line"># 打开查询缓冲可以极大的提高服务器速度, 如果你有大量的相同的查询并且很少修改表.</span><br><span class="line"># 查看 “Qcache_lowmem_prunes” 状态变量来检查是否当前值对于你的负载来说是否足够高.</span><br><span class="line"># 注意: 在你表经常变化的情况下或者如果你的查询原文每次都不同,</span><br><span class="line"># 查询缓冲也许引起性能下降而不是性能提升.转载请注明文章来源:http://www.linuxso.com/a/linuxrumen/413.html</span><br><span class="line"></span><br><span class="line">query_cache_size = 64M</span><br><span class="line"></span><br><span class="line"># 只有小于此设定值的结果才会被缓冲</span><br><span class="line"># 此设置用来保护查询缓冲,防止一个极大的结果集将其他所有的查询结果都覆盖.</span><br><span class="line">query_cache_limit = 2M</span><br><span class="line"></span><br><span class="line"># 被全文检索索引的最小的字长.</span><br><span class="line"># 你也许希望减少它,如果你需要搜索更短字的时候.</span><br><span class="line"># 注意在你修改此值之后,</span><br><span class="line"># 你需要重建你的 FULLTEXT 索引</span><br><span class="line">ft_min_word_len = 4</span><br><span class="line"></span><br><span class="line"># 如果你的系统支持 memlock() 函数,你也许希望打开此选项用以让运行中的mysql在在内存高度紧张的时候,数据在内存中保持锁定并且防止可能被swapping out</span><br><span class="line"># 此选项对于性能有益</span><br><span class="line">#memlock</span><br><span class="line"></span><br><span class="line"># 当创建新表时作为默认使用的表类型,</span><br><span class="line"># 如果在创建表示没有特别执行表类型,将会使用此值</span><br><span class="line">default_table_type = MYISAM</span><br><span class="line"></span><br><span class="line"># 线程使用的堆大小. 此容量的内存在每次连接时被预留.</span><br><span class="line"># MySQL 本身常不会需要超过64K的内存</span><br><span class="line"># 如果你使用你自己的需要大量堆的UDF函数</span><br><span class="line"># 或者你的操作系统对于某些操作需要更多的堆,</span><br><span class="line"># 你也许需要将其设置的更高一点.</span><br><span class="line">thread_stack = 192K</span><br><span class="line"></span><br><span class="line"># 设定默认的事务隔离级别.可用的级别如下:</span><br><span class="line"># READ-UNCOMMITTED, READ-COMMITTED, REPEATABLE-READ, SERIALIZABLE</span><br><span class="line">transaction_isolation = REPEATABLE-READ</span><br><span class="line"></span><br><span class="line"># 内部(内存中)临时表的最大大小</span><br><span class="line"># 如果一个表增长到比此值更大,将会自动转换为基于磁盘的表.</span><br><span class="line"># 此限制是针对单个表的,而不是总和.</span><br><span class="line">tmp_table_size = 64M</span><br><span class="line"></span><br><span class="line"># 打开二进制日志功能.</span><br><span class="line"># 在复制(replication)配置中,作为MASTER主服务器必须打开此项</span><br><span class="line"># 如果你需要从你最后的备份中做基于时间点的恢复,你也同样需要二进制日志.</span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"></span><br><span class="line"># 如果你在使用链式从服务器结构的复制模式 (A-&gt;B-&gt;C),</span><br><span class="line"># 你需要在服务器B上打开此项.</span><br><span class="line"># 此选项打开在从线程上重做过的更新的日志,</span><br><span class="line"># 并将其写入从服务器的二进制日志.</span><br><span class="line">#log_slave_updates</span><br><span class="line"></span><br><span class="line"># 打开全查询日志. 所有的由服务器接收到的查询 (甚至对于一个错误语法的查询)</span><br><span class="line"># 都会被记录下来. 这对于调试非常有用, 在生产环境中常常关闭此项.</span><br><span class="line">#log</span><br><span class="line"></span><br><span class="line"># 将警告打印输出到错误log文件. 如果你对于MySQL有任何问题</span><br><span class="line"># 你应该打开警告log并且仔细审查错误日志,查出可能的原因.</span><br><span class="line">#log_warnings</span><br><span class="line"></span><br><span class="line"># 记录慢速查询. 慢速查询是指消耗了比 “long_query_time” 定义的更多时间的查询.</span><br><span class="line"># 如果 log_long_format 被打开,那些没有使用索引的查询也会被记录.</span><br><span class="line"># 如果你经常增加新查询到已有的系统内的话. 一般来说这是一个好主意,</span><br><span class="line">log_slow_queries</span><br><span class="line"></span><br><span class="line"># 所有的使用了比这个时间(以秒为单位)更多的查询会被认为是慢速查询.</span><br><span class="line"># 不要在这里使用”1″, 否则会导致所有的查询,甚至非常快的查询页被记录下来(由于MySQL 目前时间的精确度只能达到秒的级别).</span><br><span class="line">long_query_time = 2</span><br><span class="line"></span><br><span class="line"># 在慢速日志中记录更多的信息.</span><br><span class="line"># 一般此项最好打开.</span><br><span class="line"># 打开此项会记录使得那些没有使用索引的查询也被作为到慢速查询附加到慢速日志里</span><br><span class="line">log_long_format</span><br><span class="line"></span><br><span class="line"># 此目录被MySQL用来保存临时文件.例如,</span><br><span class="line"># 它被用来处理基于磁盘的大型排序,和内部排序一样.</span><br><span class="line"># 以及简单的临时表.</span><br><span class="line"># 如果你不创建非常大的临时文件,将其放置到 swapfs/tmpfs 文件系统上也许比较好</span><br><span class="line"># 另一种选择是你也可以将其放置在独立的磁盘上.</span><br><span class="line"># 你可以使用”;”来放置多个路径</span><br><span class="line"># 他们会按照roud-robin方法被轮询使用.</span><br><span class="line">#tmpdir = /tmp</span><br><span class="line"></span><br><span class="line"># *** 复制有关的设置</span><br><span class="line"></span><br><span class="line"># 唯一的服务辨识号,数值位于 1 到 2^32-1之间.</span><br><span class="line"># 此值在master和slave上都需要设置.</span><br><span class="line"># 如果 “master-host” 没有被设置,则默认为1, 但是如果忽略此选项,MySQL不会作为master生效.</span><br><span class="line">server-id = 1</span><br><span class="line"></span><br><span class="line"># 复制的Slave (去掉master段的注释来使其生效)</span><br><span class="line">#</span><br><span class="line"># 为了配置此主机作为复制的slave服务器,你可以选择两种方法:</span><br><span class="line">#</span><br><span class="line"># 1) 使用 CHANGE MASTER TO 命令 (在我们的手册中有完整描述) -</span><br><span class="line"># 语法如下:</span><br><span class="line">#</span><br><span class="line"># CHANGE MASTER TO MASTER_HOST=, MASTER_PORT= ,</span><br><span class="line"># MASTER_USER=, MASTER_PASSWORD= ;</span><br><span class="line">#</span><br><span class="line"># 你需要替换掉 , , 等被尖括号包围的字段以及使用master的端口号替换 (默认3306).</span><br><span class="line">#</span><br><span class="line"># 例子:</span><br><span class="line">#</span><br><span class="line"># CHANGE MASTER TO MASTER_HOST=’125.564.12.1′, MASTER_PORT=3306,</span><br><span class="line"># MASTER_USER=’joe’, MASTER_PASSWORD=’secret’;</span><br><span class="line">#</span><br><span class="line"># 或者</span><br><span class="line">#</span><br><span class="line"># 2) 设置以下的变量. 不论如何, 在你选择这种方法的情况下, 然后第一次启动复制(甚至不成功的情况下,</span><br><span class="line"># 例如如果你输入错密码在master-password字段并且slave无法连接),</span><br><span class="line"># slave会创建一个 master.info 文件,并且之后任何对于包含在此文件内的参数的变化都会被忽略</span><br><span class="line"># 并且由 master.info 文件内的内容覆盖, 除非你关闭slave服务, 删除 master.info 并且重启slave 服务.</span><br><span class="line"># 由于这个原因,你也许不想碰一下的配置(注释掉的) 并且使用 CHANGE MASTER TO (查看上面) 来代替</span><br><span class="line">#</span><br><span class="line"># 所需要的唯一id号位于 2 和 2^32 – 1之间</span><br><span class="line"># (并且和master不同)</span><br><span class="line"># 如果master-host被设置了.则默认值是2</span><br><span class="line"># 但是如果省略,则不会生效</span><br><span class="line">#server-id = 2</span><br><span class="line">#</span><br><span class="line"># 复制结构中的master – 必须</span><br><span class="line">#master-host = </span><br><span class="line">#</span><br><span class="line"># 当连接到master上时slave所用来认证的用户名 – 必须</span><br><span class="line">#master-user = </span><br><span class="line">#</span><br><span class="line"># 当连接到master上时slave所用来认证的密码 – 必须</span><br><span class="line">#master-password = #转载请注明文章来源:http://www.linuxso.com/a/linuxrumen/413.html</span><br><span class="line"></span><br><span class="line"># master监听的端口.</span><br><span class="line"># 可选 – 默认是3306</span><br><span class="line">#master-port =</span><br><span class="line"></span><br><span class="line"># 使得slave只读.只有用户拥有SUPER权限和在上面的slave线程能够修改数据.</span><br><span class="line"># 你可以使用此项去保证没有应用程序会意外的修改slave而不是master上的数据</span><br><span class="line">#read_only</span><br><span class="line"></span><br><span class="line">#*** MyISAM 相关选项</span><br><span class="line"></span><br><span class="line"># 关键词缓冲的大小, 一般用来缓冲MyISAM表的索引块.</span><br><span class="line"># 不要将其设置大于你可用内存的30%,</span><br><span class="line"># 因为一部分内存同样被OS用来缓冲行数据</span><br><span class="line"># 甚至在你并不使用MyISAM 表的情况下, 你也需要仍旧设置起 8-64M 内存由于它同样会被内部临时磁盘表使用.</span><br><span class="line">key_buffer_size = 32M</span><br><span class="line"></span><br><span class="line"># 用来做MyISAM表全表扫描的缓冲大小.</span><br><span class="line"># 当全表扫描需要时,在对应线程中分配.</span><br><span class="line">read_buffer_size = 2M</span><br><span class="line"></span><br><span class="line"># 当在排序之后,从一个已经排序好的序列中读取行时,行数据将从这个缓冲中读取来防止磁盘寻道.</span><br><span class="line"># 如果你增高此值,可以提高很多ORDER BY的性能.</span><br><span class="line"># 当需要时由每个线程分配</span><br><span class="line">read_rnd_buffer_size = 16M</span><br><span class="line"></span><br><span class="line"># MyISAM 使用特殊的类似树的cache来使得突发插入</span><br><span class="line"># (这些插入是,INSERT … SELECT, INSERT … VALUES (…), (…), …, 以及 LOAD DATA</span><br><span class="line"># INFILE) 更快. 此变量限制每个进程中缓冲树的字节数.</span><br><span class="line"># 设置为 0 会关闭此优化.</span><br><span class="line"># 为了最优化不要将此值设置大于 “key_buffer_size”.</span><br><span class="line"># 当突发插入被检测到时此缓冲将被分配.</span><br><span class="line">bulk_insert_buffer_size = 64M</span><br><span class="line"></span><br><span class="line"># 此缓冲当MySQL需要在 REPAIR, OPTIMIZE, ALTER 以及 LOAD DATA INFILE 到一个空表中引起重建索引时被分配.</span><br><span class="line"># 这在每个线程中被分配.所以在设置大值时需要小心.</span><br><span class="line">myisam_sort_buffer_size = 128M</span><br><span class="line"></span><br><span class="line"># MySQL重建索引时所允许的最大临时文件的大小 (当 REPAIR, ALTER TABLE 或者 LOAD DATA INFILE).</span><br><span class="line"># 如果文件大小比此值更大,索引会通过键值缓冲创建(更慢)</span><br><span class="line">myisam_max_sort_file_size = 10G</span><br><span class="line"></span><br><span class="line"># 如果被用来更快的索引创建索引所使用临时文件大于制定的值,那就使用键值缓冲方法.</span><br><span class="line"># 这主要用来强制在大表中长字串键去使用慢速的键值缓冲方法来创建索引.</span><br><span class="line">myisam_max_extra_sort_file_size = 10G</span><br><span class="line"></span><br><span class="line"># 如果一个表拥有超过一个索引, MyISAM 可以通过并行排序使用超过一个线程去修复他们.</span><br><span class="line"># 这对于拥有多个CPU以及大量内存情况的用户,是一个很好的选择.</span><br><span class="line">myisam_repair_threads = 1</span><br><span class="line"></span><br><span class="line"># 自动检查和修复没有适当关闭的 MyISAM 表.</span><br><span class="line">myisam_recover</span><br><span class="line"></span><br><span class="line"># 默认关闭 Federated</span><br><span class="line">skip-federated</span><br><span class="line"></span><br><span class="line"># *** BDB 相关选项 ***</span><br><span class="line"></span><br><span class="line"># 如果你运行的MySQL服务有BDB支持但是你不准备使用的时候使用此选项. 这会节省内存并且可能加速一些事.</span><br><span class="line">skip-bdb</span><br><span class="line"></span><br><span class="line"># *** INNODB 相关选项 ***</span><br><span class="line"></span><br><span class="line"># 如果你的MySQL服务包含InnoDB支持但是并不打算使用的话,</span><br><span class="line"># 使用此选项会节省内存以及磁盘空间,并且加速某些部分</span><br><span class="line">#skip-innodb</span><br><span class="line"></span><br><span class="line"># 附加的内存池被InnoDB用来保存 metadata 信息</span><br><span class="line"># 如果InnoDB为此目的需要更多的内存,它会开始从OS这里申请内存.</span><br><span class="line"># 由于这个操作在大多数现代操作系统上已经足够快, 你一般不需要修改此值.</span><br><span class="line"># SHOW INNODB STATUS 命令会显示当先使用的数量.</span><br><span class="line">innodb_additional_mem_pool_size = 16M</span><br><span class="line"></span><br><span class="line"># InnoDB使用一个缓冲池来保存索引和原始数据, 不像 MyISAM.</span><br><span class="line"># 这里你设置越大,你在存取表里面数据时所需要的磁盘I/O越少.</span><br><span class="line"># 在一个独立使用的数据库服务器上,你可以设置这个变量到服务器物理内存大小的80%</span><br><span class="line"># 不要设置过大,否则,由于物理内存的竞争可能导致操作系统的换页颠簸.</span><br><span class="line"># 注意在32位系统上你每个进程可能被限制在 2-3.5G 用户层面内存限制,</span><br><span class="line"># 所以不要设置的太高.</span><br><span class="line">innodb_buffer_pool_size = 2G</span><br><span class="line"></span><br><span class="line"># InnoDB 将数据保存在一个或者多个数据文件中成为表空间.</span><br><span class="line"># 如果你只有单个逻辑驱动保存你的数据,一个单个的自增文件就足够好了.</span><br><span class="line"># 其他情况下.每个设备一个文件一般都是个好的选择.</span><br><span class="line"># 你也可以配置InnoDB来使用裸盘分区 – 请参考手册来获取更多相关内容</span><br><span class="line">innodb_data_file_path = ibdata1:10M:autoextend</span><br><span class="line"></span><br><span class="line"># 设置此选项如果你希望InnoDB表空间文件被保存在其他分区.</span><br><span class="line"># 默认保存在MySQL的datadir中.</span><br><span class="line">#innodb_data_home_dir =</span><br><span class="line"></span><br><span class="line"># 用来同步IO操作的IO线程的数量. This value is</span><br><span class="line"># 此值在Unix下被硬编码为4,但是在Windows磁盘I/O可能在一个大数值下表现的更好.</span><br><span class="line">innodb_file_io_threads = 4</span><br><span class="line"></span><br><span class="line"># 如果你发现InnoDB表空间损坏, 设置此值为一个非零值可能帮助你导出你的表.</span><br><span class="line"># 从1开始并且增加此值知道你能够成功的导出表.</span><br><span class="line">#innodb_force_recovery=1</span><br><span class="line"></span><br><span class="line"># 在InnoDb核心内的允许线程数量.</span><br><span class="line"># 最优值依赖于应用程序,硬件以及操作系统的调度方式.</span><br><span class="line"># 过高的值可能导致线程的互斥颠簸.</span><br><span class="line">innodb_thread_concurrency = 16</span><br><span class="line"></span><br><span class="line"># 如果设置为1 ,InnoDB会在每次提交后刷新(fsync)事务日志到磁盘上,</span><br><span class="line"># 这提供了完整的ACID行为.</span><br><span class="line"># 如果你愿意对事务安全折衷, 并且你正在运行一个小的食物, 你可以设置此值到0或者2来减少由事务日志引起的磁盘I/O</span><br><span class="line"># 0代表日志只大约每秒写入日志文件并且日志文件刷新到磁盘.</span><br><span class="line"># 2代表日志写入日志文件在每次提交后,但是日志文件只有大约每秒才会刷新到磁盘上.</span><br><span class="line">innodb_flush_log_at_trx_commit = 1</span><br><span class="line"></span><br><span class="line"># 加速InnoDB的关闭. 这会阻止InnoDB在关闭时做全清除以及插入缓冲合并.</span><br><span class="line"># 这可能极大增加关机时间, 但是取而代之的是InnoDB可能在下次启动时做这些操作.</span><br><span class="line">#innodb_fast_shutdown</span><br><span class="line"></span><br><span class="line"># 用来缓冲日志数据的缓冲区的大小.</span><br><span class="line"># 当此值快满时, InnoDB将必须刷新数据到磁盘上.</span><br><span class="line"># 由于基本上每秒都会刷新一次,所以没有必要将此值设置的太大(甚至对于长事务而言)</span><br><span class="line"></span><br><span class="line">innodb_log_buffer_size = 8M</span><br><span class="line"></span><br><span class="line"># 在日志组中每个日志文件的大小.转载请注明文章来源:http://www.linuxso.com/a/linuxrumen/413.html</span><br><span class="line"></span><br><span class="line"># 你应该设置日志文件总合大小到你缓冲池大小的25%~100%</span><br><span class="line"># 来避免在日志文件覆写上不必要的缓冲池刷新行为.</span><br><span class="line"># 不论如何, 请注意一个大的日志文件大小会增加恢复进程所需要的时间.</span><br><span class="line">innodb_log_file_size = 256M</span><br><span class="line"></span><br><span class="line"># 在日志组中的文件总数.</span><br><span class="line"># 通常来说2~3是比较好的.</span><br><span class="line">innodb_log_files_in_group = 3</span><br><span class="line"></span><br><span class="line"># InnoDB的日志文件所在位置. 默认是MySQL的datadir.</span><br><span class="line"># 你可以将其指定到一个独立的硬盘上或者一个RAID1卷上来提高其性能</span><br><span class="line">#innodb_log_group_home_dir</span><br><span class="line"></span><br><span class="line"># 在InnoDB缓冲池中最大允许的脏页面的比例.</span><br><span class="line"># 如果达到限额, InnoDB会开始刷新他们防止他们妨碍到干净数据页面.</span><br><span class="line"># 这是一个软限制,不被保证绝对执行.</span><br><span class="line">innodb_max_dirty_pages_pct = 90</span><br><span class="line"></span><br><span class="line"># InnoDB用来刷新日志的方法.</span><br><span class="line"># 表空间总是使用双重写入刷新方法</span><br><span class="line"># 默认值是 “fdatasync”, 另一个是 “O_DSYNC”.</span><br><span class="line">#innodb_flush_method=O_DSYNC</span><br><span class="line"></span><br><span class="line"># 在被回滚前,一个InnoDB的事务应该等待一个锁被批准多久.</span><br><span class="line"># InnoDB在其拥有的锁表中自动检测事务死锁并且回滚事务.</span><br><span class="line"># 如果你使用 LOCK TABLES 指令, 或者在同样事务中使用除了InnoDB以外的其他事务安全的存储引擎</span><br><span class="line"># 那么一个死锁可能发生而InnoDB无法注意到.</span><br><span class="line"># 这种情况下这个timeout值对于解决这种问题就非常有帮助.</span><br><span class="line">innodb_lock_wait_timeout = 120</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line"># 不要在将内存中的整个结果写入磁盘之前缓存. 在导出非常巨大的表时需要此项</span><br><span class="line">quick</span><br><span class="line"></span><br><span class="line">max_allowed_packet = 16M</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">no-auto-rehash</span><br><span class="line"></span><br><span class="line"># 仅仅允许使用键值的 UPDATEs 和 DELETEs .</span><br><span class="line">#safe-updates</span><br><span class="line"></span><br><span class="line">[isamchk]</span><br><span class="line">key_buffer = 512M</span><br><span class="line">sort_buffer_size = 512M</span><br><span class="line">read_buffer = 8M</span><br><span class="line">write_buffer = 8M</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line">key_buffer = 512M</span><br><span class="line">sort_buffer_size = 512M</span><br><span class="line">read_buffer = 8M</span><br><span class="line">write_buffer = 8M</span><br><span class="line"></span><br><span class="line">[mysqlhotcopy]</span><br><span class="line">interactive-timeout</span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line"># 增加每个进程的可打开文件数量.</span><br><span class="line"># 警告: 确认你已经将全系统限制设定的足够高!</span><br><span class="line"># 打开大量表需要将此值设b</span><br><span class="line">open-files-limit = 8192</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP的装饰器模式实现</title>
      <link href="/article/3095629145.html"/>
      <url>/article/3095629145.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>修饰模式，是面向对象编程领域中，一种动态地往一个类中添加新的行为的设计模式。就功能而言，修饰模式相比生成子类更为灵活，这样可以给某个对象而不是整个类添加一些功能。将所有的功能建立在继承体系上会导致系统中的类越来越多，而且当你又要修改他们的分支的时候，可能还会出现重复代码</p><a id="more"></a><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>扩展一个类一般可以使用继承或者组合的形式。使用继承的方式扩展时，随着基类子类的增多，以及子类的子类出现，继而出现了代码的无限制膨胀，增加了系统的复杂性。而使用装饰者模式既继承又引用，能动态扩展类的一些功能，减少了继承数量。</p><ul><li><p>装饰器模式（Decorator），可以动态地添加修改类的功能 </p></li><li><p>一个类提供了一项功能，如果要在修改并添加额外的功能，传统的编程模式，需要写一个子类继承它，并重新实现类的方法</p></li><li><p>使用装饰器模式，仅需在运行时添加一个装饰器对象即可实现，可以实现最大的灵活性。</p></li></ul><h1 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h1><p>实现一个装饰器的基类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//画图装饰器</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">DrawDecorator</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//画之前的操作</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">beforeDraw</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//画之后的操作</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">afterDraw</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现一个颜色装饰器</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ColorDrawDecorator</span> <span class="keyword">implements</span> <span class="title">DrawDecorator</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">//颜色属性</span></span><br><span class="line">    <span class="keyword">protected</span> $color;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化颜色</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($color = <span class="string">'red'</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;color = $color;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//画之前的操作</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">beforeDraw</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;div style='color: &#123;$this-&gt;color&#125;;'&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//画之后的操作</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">afterDraw</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;/div&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现画板的类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Canvas</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="comment">//保存点阵的一个数组</span></span><br><span class="line">        <span class="keyword">public</span> $data;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//保存装饰器对象</span></span><br><span class="line">        <span class="keyword">protected</span> $decorators = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化点阵</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">($width = <span class="number">20</span>, $height = <span class="number">10</span>)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $data = <span class="keyword">array</span>();</span><br><span class="line">            <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $height; $i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>($j = <span class="number">0</span>; $j &lt; $width; $j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    $data[$i][$j] = <span class="string">'*'</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;data = $data;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//注册装饰器对象</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">addDecorator</span><span class="params">(DrawDecorator $decorator)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;decorators[] = $decorator;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//画之前的操作</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">beforeDraw</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;decorators <span class="keyword">as</span> $decorator)</span><br><span class="line">            &#123;</span><br><span class="line">                $decorator-&gt;beforeDraw();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//画之后的操作</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">afterDraw</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $decorators = array_reverse(<span class="keyword">$this</span>-&gt;decorators);</span><br><span class="line">            <span class="keyword">foreach</span>($decorators <span class="keyword">as</span> $decorator)</span><br><span class="line">            &#123;</span><br><span class="line">                $decorator-&gt;afterDraw();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开始画图</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">draw</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;beforeDraw();</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;data <span class="keyword">as</span> $line)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">foreach</span>($line <span class="keyword">as</span> $char)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">echo</span> $char;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"&lt;br /&gt;\n"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;afterDraw();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//描述一个矩形的点阵</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">rect</span><span class="params">($a1, $a2, $b1, $b2)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;data <span class="keyword">as</span> $k1 =&gt; $line)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ($k1 &lt; $a1 <span class="keyword">or</span> $k1 &gt; $a2) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">foreach</span>($line <span class="keyword">as</span> $k2 =&gt; $char)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> ($k2 &lt; $b1 <span class="keyword">or</span> $k2 &gt; $b2) <span class="keyword">continue</span>;</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;data[$k1][$k2] = <span class="string">'&amp;nbsp;'</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$canvas = <span class="keyword">new</span> Canvas();</span><br><span class="line"><span class="comment">//注入装饰器对象</span></span><br><span class="line">$canvas-&gt;addDecorator(<span class="keyword">new</span> ColorDrawDecorator(<span class="string">'green'</span>));</span><br><span class="line">$canvas-&gt;init(<span class="number">40</span>, <span class="number">20</span>);</span><br><span class="line"></span><br><span class="line">$canvas-&gt;rect(<span class="number">4</span>,<span class="number">15</span>,<span class="number">9</span>,<span class="number">30</span>);</span><br><span class="line">$canvas-&gt;draw();</span><br><span class="line"><span class="comment">//同样如果你还想使用加粗，倾斜，设置自定义标题等等，就在创建一个特定的装饰器，注入到画布内就可以实现了</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP的适配器模式实现</title>
      <link href="/article/247704845.html"/>
      <url>/article/247704845.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>适配器模式在不修改现有代码的基础上，保留了架构。使用继承的适配器和使用组件的适配器各有利弊，继承的类冗余度/空间复杂度偏高，组件的调用栈/时间复杂度偏高，应该结合实际情况选择。</p><a id="more"></a><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><ul><li><p>简单来说，当你的实现和需要的接口，都无法修改的时候。</p></li><li><p>例如，你需要给甲方已有的系统做标准的兼容，标准不可修改，甲方的系统也不可修改，这个时候你就需要适配器的设计模式了。</p></li><li><p>对于web编程来说，将你现有的实现，和三方库结合起来，就需要使用适配器模式。</p></li><li><p>适配器模式是一种利用适配器将现有的实现，适配到已有接口的设计模式，最常见的例子就是变压器，将已有的5V输入的电器，通过变压器，适配到220V的电源插座。</p></li><li><p><strong>相比继承，组件可用性高，低耦合，冗余度低，因此推荐采用组件的模式来进行设计。</strong></p></li></ul><h1 id="继承方式实现"><a href="#继承方式实现" class="headerlink" title="继承方式实现"></a>继承方式实现</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//目标角色</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">ITarget</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">operation1</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">operation2</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//源角色</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">IAdaptee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">operation1</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adaptee</span> <span class="keyword">implements</span> <span class="title">IAdaptee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">operation1</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"原方法"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//类适配器角色</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adapter</span> <span class="keyword">extends</span> <span class="title">Adaptee</span> <span class="keyword">implements</span> <span class="title">ITarget</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">operation2</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"适配方法"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//客户端</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Client</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $adapter = <span class="keyword">new</span> Adapter();</span><br><span class="line">        $adapter-&gt;operation1();<span class="comment">//原方法</span></span><br><span class="line">        $adapter-&gt;operation2();<span class="comment">//适配方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="组件方式实现"><a href="#组件方式实现" class="headerlink" title="组件方式实现"></a>组件方式实现</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//目标角色</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">ITarget</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">operation1</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">operation2</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//源角色</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">IAdaptee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">operation1</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adaptee</span> <span class="keyword">implements</span> <span class="title">IAdaptee</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">operation1</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"原方法"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//适配器类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adapter</span> <span class="keyword">implements</span>  <span class="title">ITarget</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $adaptee;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($adaptee)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;adaptee = $adaptee;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">operation1</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;adaptee-&gt;operation1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">operation2</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"适配方法"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//客户端</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Client</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $adapter = <span class="keyword">new</span> Adapter(<span class="keyword">new</span> Adaptee());</span><br><span class="line">        $adapter-&gt;operation1();<span class="comment">//原方法</span></span><br><span class="line">        $adapter-&gt;operation2();<span class="comment">//适配方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP的连贯操作实现</title>
      <link href="/article/2897789060.html"/>
      <url>/article/2897789060.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>编程语言中的链式操作是利用运算符进行的连续运算（操作），它的特点是在一条语句中出现两个或者两个以上相同的操作符，如连续的赋值操作、连续的输入操作、连续的输出操作、连续的相加操作等都是链式操作的例子。</p><a id="more"></a><h1 id="核心实现类"><a href="#核心实现类" class="headerlink" title="核心实现类"></a>核心实现类</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">//数据库操作基类[PS:主要功能连贯功能实现]</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Db</span></span>&#123;</span><br><span class="line">        <span class="comment">//此属性定义要实现连贯操作的方法名</span></span><br><span class="line">        <span class="keyword">public</span> $sql = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">"field"</span> =&gt; <span class="string">""</span>,</span><br><span class="line">            <span class="string">"where"</span> =&gt; <span class="string">""</span>,</span><br><span class="line">            <span class="string">"order"</span> =&gt; <span class="string">""</span>,</span><br><span class="line">            <span class="string">"limit"</span> =&gt; <span class="string">""</span>,</span><br><span class="line">            <span class="string">"group"</span> =&gt; <span class="string">""</span>,</span><br><span class="line">            <span class="string">"having"</span> =&gt; <span class="string">""</span>,</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 连贯操作时,调用field() where() order() limit() group() having()方法且组合成sql语句</span></span><br><span class="line"><span class="comment">         * 此方法为PHP魔术方法,调用类中不存在的方法时就会自动调用此方法</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> $methodName 调用不存在的方法时,接收这个方法名称的字符串</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> $args 调用不存在的方法时,接收这个方法的参数,以数组形式接收</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($methodName,$args)</span></span>&#123;</span><br><span class="line">            <span class="comment">//把要请求的方法名,统一转为小写</span></span><br><span class="line">            $methodName=strtolower($methodName);</span><br><span class="line">            <span class="comment">//若请求方法名与成员属性数组$sql下标对应上;则将第二个参数,赋值给数组中"下标对应的元素"</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;sql[$methodName]))&#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;sql[$methodName]=$args[<span class="number">0</span>];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'调用类'</span>.get_class(<span class="keyword">$this</span>).<span class="string">'中的'</span>.$methodName.<span class="string">'()方法不存在'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//返回对象;从而可以继续调用本对象中的方法,形成连贯操作</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 用此方法拼接成一个select的sql语句;[PS:此方法终结了连贯操作,置于连贯操作的最后面]</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">select</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">//按照select语法拼接sql字符串[PS:可以在mysql命令行中执行"help select;"查看其语法构结]</span></span><br><span class="line">            $sql=<span class="string">"SELECT &#123;$this-&gt;sql['field']&#125; FROM test &#123;$this-&gt;sql['where']&#125; &#123;$this-&gt;sql['group']&#125;&#123;$this-&gt;sql['having']&#125; &#123;$this-&gt;sql['order']&#125; &#123;$this-&gt;sql['limit']&#125;"</span>;</span><br><span class="line">            <span class="keyword">echo</span> $sql;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="调用方式"><a href="#调用方式" class="headerlink" title="调用方式"></a>调用方式</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$obj=new db();</span><br><span class="line">$obj-&gt;field(&apos;name,sex,address&apos;)-&gt;where(&apos;where name=&quot;gongwen&quot;&apos;)-&gt;limit(&apos;limit 1&apos;)-&gt;select();</span><br><span class="line">//输出:SELECT name,sex,address FROM test where name=gongwen limit 1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP把 session存到memcache中</title>
      <link href="/article/3495718585.html"/>
      <url>/article/3495718585.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>企业网站用户数越来越多,同时在线人数越来越多,最大同时在线达100万之多,由于session文件是小文件存储,设想每个用户大概2K左右数据,NFS频繁读取导致IO成为瓶颈,虽然可以更改配置以分级目录的形式保持session但还是没有达到最优设计,但如果把session放在内存中,内存存取快速,就再也不用担心海量用户的压力了!</p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MemSession</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> $handler=<span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> $lifetime=<span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 初使化和开启session</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span>    Memcache    $memcache    memcache对象</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">start</span><span class="params">(Memcache $memcache)</span></span>&#123;</span><br><span class="line">             <span class="comment">//将 session.save_handler 设置为 user，而不是默认的 files</span></span><br><span class="line">             <span class="comment">//session文件保存方式，这个是必须的！除非在Php.ini文件中设置了</span></span><br><span class="line">            ini_set(<span class="string">'session.save_handler'</span>, <span class="string">'user'</span>); <span class="comment">//等价于 session_module_name('user');</span></span><br><span class="line">            <span class="keyword">self</span>::$handler=$memcache;</span><br><span class="line">            <span class="keyword">self</span>::$lifetime=ini_get(<span class="string">'session.gc_maxlifetime'</span>);</span><br><span class="line">            session_set_save_handler(</span><br><span class="line">                    <span class="keyword">array</span>(<span class="keyword">__CLASS__</span>, <span class="string">'open'</span>),</span><br><span class="line">                    <span class="keyword">array</span>(<span class="keyword">__CLASS__</span>, <span class="string">'close'</span>),</span><br><span class="line">                    <span class="keyword">array</span>(<span class="keyword">__CLASS__</span>, <span class="string">'read'</span>),</span><br><span class="line">                    <span class="keyword">array</span>(<span class="keyword">__CLASS__</span>, <span class="string">'write'</span>),</span><br><span class="line">                    <span class="keyword">array</span>(<span class="keyword">__CLASS__</span>, <span class="string">'destroy'</span>),</span><br><span class="line">                    <span class="keyword">array</span>(<span class="keyword">__CLASS__</span>, <span class="string">'gc'</span>)</span><br><span class="line">                );</span><br><span class="line">            session_start();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span><span class="params">($path, $name)</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 从SESSION中读取数据</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span>    string    $PHPSESSID    session的ID</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span>     mixed            返回session中对应的数据</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span><span class="params">($PHPSESSID)</span></span>&#123;</span><br><span class="line">            $out=<span class="keyword">self</span>::$handler-&gt;get(<span class="keyword">self</span>::session_key($PHPSESSID));</span><br><span class="line">            <span class="keyword">if</span>($out===<span class="keyword">false</span> || $out == <span class="keyword">null</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">            <span class="keyword">return</span> $out;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *向session中添加数据</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span><span class="params">($PHPSESSID, $data)</span></span>&#123;</span><br><span class="line">            $method=$data ? <span class="string">'set'</span> : <span class="string">'replace'</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>::$handler-&gt;$method(<span class="keyword">self</span>::session_key($PHPSESSID), $data, MEMCACHE_COMPRESSED, <span class="keyword">self</span>::$lifetime);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">destroy</span><span class="params">($PHPSESSID)</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>::$handler-&gt;delete(<span class="keyword">self</span>::session_key($PHPSESSID));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">gc</span><span class="params">($lifetime)</span></span>&#123;</span><br><span class="line">            <span class="comment">//无需额外回收,memcache有自己的过期回收机制</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">session_key</span><span class="params">($PHPSESSID)</span></span>&#123;</span><br><span class="line">            $session_key=TABPREFIX.$PHPSESSID;</span><br><span class="line">            <span class="keyword">return</span> $session_key;</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//使用</span></span><br><span class="line">    $mem=<span class="keyword">new</span> Memcache();</span><br><span class="line">    $mem-&gt;connect(<span class="string">'127.0.0.1'</span>, <span class="string">'11211'</span>);</span><br><span class="line">    MemSession::start($mem);</span><br><span class="line">    $_SESSION[<span class="string">'myBlog'</span>]=<span class="string">'http://www.ganktools.com'</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP的类型约束</title>
      <link href="/article/1678094766.html"/>
      <url>/article/1678094766.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>众所周知，在 强类型 语言中，类型约束 是语法上的要求，即：定义一个变量的时候，必须指定其类型，并且以后该变量也只能存储该类型数据。</p><p>而我们的PHP是弱类型语言，其特点就是无需为变量指定类型，而且在其后也可以存储任何类型，当然这也是使用PHP能快速开发的关键点之一。但是在php的高版本语法中（PHP5起），在某些特定场合，针对某些特定类型，也是可以进行语法约束的。</p><a id="more"></a><h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>自PHP5起，我们就可以在函数（方法）形参中使用类型约束了。</p><p>函数的参数可以指定的范围如下：</p><ul><li>必须为对象（在函数原型里面指定类的名字）；</li><li>接口；</li><li>数组（PHP 5.1 起）；</li><li>callable（PHP 5.4 起）。</li></ul><p>如果使用 NULL 作为参数的默认值，那么在调用函数的时候依然可以使用 NULL 作为实参。<br>如果一个类或接口指定了类型约束，则其所有的子类或实现也都如此。</p><p>类型约束不能用于标量类型如 int 或 string。Traits 也不允许。</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//如下面的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 测试函数</span></span><br><span class="line"><span class="comment">     * 第一个参数必须为 OtherClass 类的一个对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">(OtherClass $otherclass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $otherclass-&gt;var;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 另一个测试函数</span></span><br><span class="line"><span class="comment">     * 第一个参数必须为数组 </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test_array</span><span class="params">(array $input_array)</span> </span>&#123;</span><br><span class="line">        print_r($input_array);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 第一个参数必须为递归类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test_interface</span><span class="params">(Traversable $iterator)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> get_class($iterator);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 第一个参数必须为回调类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test_callable</span><span class="params">(callable $callback, $data)</span> </span>&#123;</span><br><span class="line">        call_user_func($callback, $data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// OtherClass 类定义</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OtherClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $var = <span class="string">'Hello World'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>函数调用的参数与定义的参数类型不一致时，会抛出一个可捕获的致命错误。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 两个类的对象</span></span><br><span class="line">$myclass = <span class="keyword">new</span> MyClass;</span><br><span class="line">$otherclass = <span class="keyword">new</span> OtherClass;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 致命错误：第一个参数必须是 OtherClass 类的一个对象</span></span><br><span class="line">$myclass-&gt;test(<span class="string">'hello'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 致命错误：第一个参数必须为 OtherClass 类的一个实例</span></span><br><span class="line">$foo = <span class="keyword">new</span> stdClass;</span><br><span class="line">$myclass-&gt;test($foo);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 致命错误：第一个参数不能为 null</span></span><br><span class="line">$myclass-&gt;test(<span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确：输出 Hello World </span></span><br><span class="line">$myclass-&gt;test($otherclass);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 致命错误：第一个参数必须为数组</span></span><br><span class="line">$myclass-&gt;test_array(<span class="string">'a string'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确：输出数组</span></span><br><span class="line">$myclass-&gt;test_array(<span class="keyword">array</span>(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确：输出 ArrayObject</span></span><br><span class="line">$myclass-&gt;test_interface(<span class="keyword">new</span> ArrayObject(<span class="keyword">array</span>()));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确：输出 int(1)</span></span><br><span class="line">$myclass-&gt;test_callable(<span class="string">'var_dump'</span>, <span class="number">1</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>类型约束不只是用在类的成员函数里，也能使用在函数里</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 如下面的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $var = <span class="string">'Hello World'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 测试函数</span></span><br><span class="line"><span class="comment"> * 第一个参数必须是 MyClass 类的一个对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">MyFunction</span> <span class="params">(MyClass $foo)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> $foo-&gt;var;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 正确</span></span><br><span class="line">$myclass = <span class="keyword">new</span> MyClass;</span><br><span class="line">MyFunction($myclass);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>类型约束允许 NULL 值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 接受 NULL 值 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">(stdClass $obj = NULL)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test(<span class="keyword">NULL</span>);</span><br><span class="line">test(<span class="keyword">new</span> stdClass);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>以上就是PHP类型约束的大概简介和使用方法了，在使用PHP进行开发过程中，用到它的地方可能不是太多，我们最常看见或用到类型约束的地方是在“依赖注入”的设计模式中</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP的工厂模式实现</title>
      <link href="/article/2964345999.html"/>
      <url>/article/2964345999.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文介绍了工厂设计模式，使用这种设计模式，可以让你通过一个或多个工厂的接口，创建无数新类，调用任意类的方法。由于接口严格定义了新类/产品的形态，因此在维护和拓展的时候，可以省去不少力气。</p><a id="more"></a><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>工厂模式，也是五种设计模式中唯一的类的设计模式(Class patterns)，即在类中就能实现的设计模式。<br>听起来挺抽象？对比原型设计模式，这是一种对象设计模式(Object patterns)，通过对象的__clone()方法来实现的设计模式。<br>在工厂模式中，新创建的对象/产品并不依赖于生产它的对象/工厂，新对象和调用者之间是低耦合状态。通常调用者和工厂交互，由工厂来生成新对象，新对象只和工厂有关。</p><p><strong>何时使用工厂模式：</strong></p><p>简单来说，当需求对类的个数不明确的时候，可以使用工厂模式，如：你需要创建一个在线博物馆，但你并不确切的知道究竟有多少文物，你不可能无限的增加新的文物类，同时对于损毁的文物，你不可能无限的去清理这些类。</p><p>反过来说，如果你确切的知道类的总量，那么你就没有必要使用工程模式，直接通过继承的方式就能实现好的设计。</p><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><p>我们使用鲸鱼和鲤鱼的例子，现在我们想实现一个海洋馆，目前我们并不确定究竟有多少海洋生物。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//先是一个抽象的工厂类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Factory</span> </span>&#123;</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">factoryStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;create();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//然后是两个工厂：鲸鱼工厂和鲤鱼工厂</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WhaleFactory</span> <span class="keyword">extends</span> <span class="title">Factory</span> </span>&#123;</span><br><span class="line">  <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $whale = <span class="keyword">new</span> Whale();</span><br><span class="line">    <span class="keyword">return</span> $whale-&gt;create();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CarpFactory</span> <span class="keyword">extends</span> <span class="title">Factory</span> </span>&#123;</span><br><span class="line">  <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $carp = <span class="keyword">new</span> Carp();</span><br><span class="line">    <span class="keyword">return</span> $carp-&gt;create();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//然后是抽象的动物接口：</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//然后是具体的动物类：鲸鱼类和鲤鱼类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Whale</span> <span class="keyword">implements</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> $name;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;name = <span class="string">"Whale"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;name . <span class="string">" is created.\n"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Carp</span> <span class="keyword">implements</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> $name;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;name = <span class="string">"Carp"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;name . <span class="string">" is created.\n"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//下面给出使用工厂创建鲸鱼和鲤鱼的代码</span></span><br><span class="line">$whaleFactory = <span class="keyword">new</span> WhaleFactory();</span><br><span class="line"><span class="keyword">echo</span> $whaleFactory-&gt;factoryStart();</span><br><span class="line">$carpFactory = <span class="keyword">new</span> CarpFactory();</span><br><span class="line"><span class="keyword">echo</span> $carpFactory-&gt;factoryStart();</span><br><span class="line"><span class="comment">//结果：</span></span><br><span class="line"><span class="comment">//Whale is created.</span></span><br><span class="line"><span class="comment">//Carp is created.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="进阶版实现"><a href="#进阶版实现" class="headerlink" title="进阶版实现"></a>进阶版实现</h1><p>到这里你是不是觉得，其实直接生成两个类就行了，何必搞这么复杂？别着急，好戏在后面。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//由于对象是由工厂造出来的，外部不可能直接调用或者修改类的实现，类的修改被限定在了类的对外接口上。这样的架构易于扩展。</span></span><br><span class="line"><span class="comment">//由于Interface的限制，修改类的方法被限定在了create()方法中，因此可以避免偷懒的程序员新增加的不合理函数。简单修改一下</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Whale</span> <span class="keyword">implements</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> $name;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;name = <span class="string">"Whale"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;name . <span class="string">" is created. Whale eats fish.\n"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Carp</span> <span class="keyword">implements</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> $name;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;name = <span class="string">"Carp"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;name . <span class="string">" is created. Carp eats moss.\n"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//工厂模式的灵活，在于可以只拥有一个工厂，却能生产多个类/产品。修改我们的抽象工厂，给create()方法增加animal接口：</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Factory</span> </span>&#123;</span><br><span class="line">  <span class="keyword">protected</span> <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">(Animal $animal)</span></span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">factoryStart</span><span class="params">($animal)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;create($animal);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//然后合并之前的鲸鱼工厂和鲤鱼工厂：</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnimalFactory</span> <span class="keyword">extends</span> <span class="title">Factory</span> </span>&#123;</span><br><span class="line">  <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">(Animal $animal)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $animal-&gt;create();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改使用工厂创建鲸鱼和鲤鱼的代码</span></span><br><span class="line">$animalFactory = <span class="keyword">new</span> AnimalFactory();</span><br><span class="line"><span class="keyword">echo</span> $animalFactory-&gt;factoryStart(<span class="keyword">new</span> Whale());</span><br><span class="line"><span class="keyword">echo</span> $animalFactory-&gt;factoryStart(<span class="keyword">new</span> Carp());</span><br><span class="line"><span class="comment">//结果：</span></span><br><span class="line"><span class="comment">//Whale is created. Whale eats fish.</span></span><br><span class="line"><span class="comment">//Carp is created. Carp eats moss.</span></span><br><span class="line"><span class="comment">//鲸鱼类和鲤鱼类源源不断的从一个工厂中被创建出来了。通过这种设计模式，类的创建过程统一通过一个接口来实现，接口外部并不需要关心类是如何被创建出来的，而接口内部实现也得到了很好的拓展性。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP的单例模式实现</title>
      <link href="/article/3754881030.html"/>
      <url>/article/3754881030.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>单例模式一般使用在资源共享和需要控制资源的情况下。</p><h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>单例模式的好处就在于当前进程只产生一个对象（或者叫做模块），<br>但有一点需要指出，如果单例模式的操作对象是一个资源类型，那么此时的单例模式并不是纯粹的单例模式，因为php的生命周期仅仅是页面级别的，所以他无法像Java语言那样在内存中将这个资源类型存起来，并且我们也无法借助类似redis的nosql缓存数据库，因为资源类型（类似mysql_connect的返回值）是无法被序列化（指的是资源无法转成字符串）。</p><p>即，php的单例,仅指进程中单例,不似java,在整个内存中单例，所以在PHP语言下，单例模式是有瑕疵的。</p><a id="more"></a><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><p>通过输出（output）可以看出页面执行中，数据库类（class Database）只有第一次调用的时候是真实实例化的，剩下的调用都是直接从静态变量获取该实例的，这样的话就防止了在一次生命周期中多次连接数据库了，极大的节省了资源，这就是单例模式。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Database</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        <span class="comment">//数据库连接资源</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="keyword">static</span> $_db;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//单例标识符</span></span><br><span class="line">        <span class="keyword">protected</span> <span class="keyword">static</span> $_instance;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//设可见性设置成private，防止外部进行 实例化操作</span></span><br><span class="line">        <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//外部调用的是 getInstance</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">     </span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">self</span> :: $_instance === <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">self</span>::$_instance = <span class="keyword">new</span> <span class="keyword">self</span>();</span><br><span class="line">                <span class="keyword">self</span>::$_db = mysql_connect(<span class="string">'localhost'</span>,<span class="string">'root'</span>,<span class="string">'root'</span>);</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'只有一次实例化'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">self</span>::$_instance;</span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select_db</span><span class="params">($db)</span></span>&#123;</span><br><span class="line">     </span><br><span class="line">            <span class="keyword">return</span> mysql_select_db($db,<span class="keyword">self</span>::$_db);</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">     </span><br><span class="line">        <span class="comment">//设可见性设置成private，防止外部进行 clone操作</span></span><br><span class="line">        <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span><span class="params">()</span></span>&#123;</span><br><span class="line">     </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">     </span><br><span class="line">    $db = Database::getInstance();</span><br><span class="line">    print_r($db-&gt;select_db(<span class="string">'test'</span>));</span><br><span class="line">    print_r($db-&gt;select_db(<span class="string">'test'</span>));</span><br><span class="line">    print_r($db-&gt;select_db(<span class="string">'test'</span>));</span><br><span class="line">    <span class="comment">//output:只有一次实例化111</span></span><br><span class="line">     </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP对Memcache的使用</title>
      <link href="/article/3248770788.html"/>
      <url>/article/3248770788.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>一台Memcache通常不能满足我们的需求，这就需要分布式部署。Memcached分布式部署方案通常会采用两种方式，一种是普通Hash分布，一种是一致性Hash分布。本篇将以PHP作为客户端，来分析两种方案。</p><a id="more"></a><h1 id="普通Hash分布"><a href="#普通Hash分布" class="headerlink" title="普通Hash分布"></a>普通Hash分布</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">($key=<span class="string">'name'</span>)</span></span>&#123;</span><br><span class="line">    $md5 = substr(md5($key), <span class="number">0</span>, <span class="number">8</span>);</span><br><span class="line">    $seed = <span class="number">31</span>;</span><br><span class="line">    $hash = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;<span class="number">8</span>; $i++)&#123;</span><br><span class="line">        $hash = $hash * $seed + ord($md5[$i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $hash &amp; <span class="number">0x7FFFFFFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$memcacheList = <span class="keyword">array</span>(</span><br><span class="line">        <span class="keyword">array</span>(<span class="string">'host'</span>=&gt;<span class="string">'192.168.1.2'</span>, <span class="string">'port'</span>=&gt;<span class="number">6379</span>),</span><br><span class="line">        <span class="keyword">array</span>(<span class="string">'host'</span>=&gt;<span class="string">'192.168.1.3'</span>, <span class="string">'port'</span>=&gt;<span class="number">6379</span>),</span><br><span class="line">        <span class="keyword">array</span>(<span class="string">'host'</span>=&gt;<span class="string">'192.168.1.4'</span>, <span class="string">'port'</span>=&gt;<span class="number">6379</span>),</span><br><span class="line">        <span class="keyword">array</span>(<span class="string">'host'</span>=&gt;<span class="string">'192.168.1.5'</span>, <span class="string">'port'</span>=&gt;<span class="number">6379</span>),</span><br><span class="line">);</span><br><span class="line">$key = <span class="string">'username'</span>;</span><br><span class="line">$value = <span class="string">'lane'</span>;</span><br><span class="line"><span class="comment">//根据KEY获取hash</span></span><br><span class="line">$hash = <span class="keyword">$this</span>-&gt;test($key);</span><br><span class="line">$count = count($memcacheList);</span><br><span class="line">$memcache = $memcacheList[$hash % $count];</span><br><span class="line">$mc = <span class="keyword">new</span> Memcached($memcache);</span><br><span class="line">$mc-&gt;set($key, $value);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>代码很简单，一个Hash函数，根据所需要的key，将他md5后取前8位，然后经过Hash算法返回一个整数。将这个整数对服务器总数求模。得到的就是服务器列表的编号。这种方式的缺点是服务器数量改变后，同一个key不同hash，将取不到值了。</p><h1 id="一致性Hash分布"><a href="#一致性Hash分布" class="headerlink" title="一致性Hash分布"></a>一致性Hash分布</h1><p>一致性Hash尽管也会造成数据的丢失，但是损失是最小的。<br>将2的32次方-1想象成一个圆环，服务器列表在上面排列。根据key通过hash算法求得在圆环上的位置，那么所需要的服务器的位置在key的位置前面最近的一个（顺时针）。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FlexiHash</span></span>&#123;</span><br><span class="line">    <span class="comment">//服务器列表</span></span><br><span class="line">    <span class="keyword">private</span> $serverList = <span class="keyword">array</span>();</span><br><span class="line">    <span class="comment">//是否排序</span></span><br><span class="line">    <span class="keyword">private</span> $isSort = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Description: Hash函数，将传入的key以整数形式返回</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">myHash</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">        $md5 = substr(md5($key), <span class="number">0</span>, <span class="number">8</span>);</span><br><span class="line">        $seed = <span class="number">31</span>;</span><br><span class="line">        $hash = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;<span class="number">8</span>; $i++)&#123;</span><br><span class="line">            $hash = $hash * $seed + ord($md5[$i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $hash &amp; <span class="number">0x7FFFFFFF</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Description: 添加新服务器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $server</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addServer</span><span class="params">($server)</span></span>&#123;</span><br><span class="line">        $hash = <span class="keyword">$this</span>-&gt;myHash($server);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;serverList[$hash]))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;serverList[$hash] = $server;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;isSort = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Description: 删除指定服务器</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $server</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">removeServer</span><span class="params">($server)</span></span>&#123;</span><br><span class="line">        $hash = <span class="keyword">$this</span>-&gt;myHash($server);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;serverList[$hash]))&#123;</span><br><span class="line">            <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;serverList[$hash]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;isSort = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Description: 根据要操作的KEY返回一个操作的服务器信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">lookup</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">        <span class="comment">//将指定的KEYhash出一个整数</span></span><br><span class="line">        $hash = <span class="keyword">$this</span>-&gt;myHash($key);</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;isSort !== <span class="keyword">true</span>)&#123;</span><br><span class="line">            krsort(<span class="keyword">$this</span>-&gt;serverList);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;isSort = <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;serverList <span class="keyword">as</span> $key=&gt;$server)&#123;</span><br><span class="line">            <span class="keyword">if</span>($key &lt;= $hash)&#123;</span><br><span class="line">                <span class="keyword">return</span> $server;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> array_pop(<span class="keyword">$this</span>-&gt;serverList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用方法</span></span><br><span class="line">$mc = <span class="keyword">new</span> FlexiHash();</span><br><span class="line">$mc-&gt;addServer(<span class="string">'192.168.1.2'</span>);</span><br><span class="line">$mc-&gt;addServer(<span class="string">'192.168.1.3'</span>);</span><br><span class="line">$mc-&gt;addServer(<span class="string">'192.168.1.4'</span>);</span><br><span class="line">$mc-&gt;addServer(<span class="string">'192.168.1.5'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'KEY=key1时，操作的服务器为：'</span>.$mc-&gt;lookup(<span class="string">'key1'</span>).<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'KEY=key1时，操作的服务器为：'</span>.$mc-&gt;lookup(<span class="string">'key2'</span>).<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'KEY=key1时，操作的服务器为：'</span>.$mc-&gt;lookup(<span class="string">'key3'</span>).<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'KEY=key1时，操作的服务器为：'</span>.$mc-&gt;lookup(<span class="string">'key4'</span>).<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'KEY=key1时，操作的服务器为：'</span>.$mc-&gt;lookup(<span class="string">'key5'</span>).<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Composer常用命令</title>
      <link href="/article/2869907571.html"/>
      <url>/article/2869907571.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Composer 是 PHP5以上 的一个依赖管理工具。它允许你申明项目所依赖的代码库，它会在你的项目中为你安装他们。Composer 不是一个包管理器。是的，它涉及 “packages” 和 “libraries”，但它在每个项目的基础上进行管理，在你项目的某个目录中（例如 vendor）进行安装。默认情况下它不会在全局安装任何东西。因此，这仅仅是一个依赖管理。</p><a id="more"></a><h1 id="更换国内镜像源"><a href="#更换国内镜像源" class="headerlink" title="更换国内镜像源"></a>更换国内镜像源</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config -g repo.packagist composer https://packagist.phpcomposer.com</span><br></pre></td></tr></table></figure><h1 id="require命令"><a href="#require命令" class="headerlink" title="require命令"></a>require命令</h1><p>我们可以使用 require 命令快速的安装一个依赖而不需要手动在 composer.json 里添加依赖信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require monolog/monolog</span><br></pre></td></tr></table></figure><h1 id="update命令"><a href="#update命令" class="headerlink" title="update命令"></a>update命令</h1><p>通过 update 命令，可以更新项目里所有的包，或者指定的某些包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 更新所有依赖</span><br><span class="line">$ composer update</span><br><span class="line"></span><br><span class="line"># 更新指定的包</span><br><span class="line">$ composer update monolog/monolog</span><br><span class="line"></span><br><span class="line"># 更新指定的多个包</span><br><span class="line">$ composer update monolog/monolog symfony/dependency-injection</span><br><span class="line"></span><br><span class="line"># 还可以通过通配符匹配包</span><br><span class="line">$ composer update monolog/monolog symfony/*</span><br></pre></td></tr></table></figure><h1 id="remove命令"><a href="#remove命令" class="headerlink" title="remove命令"></a>remove命令</h1><p>使用remove命令可以移除一个包及其依赖（在依赖没有被其他包使用的情况下）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer remove monolog/monolog</span><br></pre></td></tr></table></figure><h1 id="search命令"><a href="#search命令" class="headerlink" title="search命令"></a>search命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ composer search monolog</span><br><span class="line">monolog/monolog Sends your logs to files, sockets, inboxes, databases and various web services</span><br><span class="line"></span><br><span class="line"># 如果只是想匹配名称可以使用--only-name选项</span><br><span class="line">$ composer search --only-name monolog</span><br></pre></td></tr></table></figure><h1 id="show命令"><a href="#show命令" class="headerlink" title="show命令"></a>show命令</h1><p>使用 show 命令可以列出项目目前所安装的包的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 列出所有已经安装的包</span><br><span class="line">$ composer show</span><br><span class="line"></span><br><span class="line"># 可以通过通配符进行筛选</span><br><span class="line">$ composer show monolog/*</span><br><span class="line"></span><br><span class="line"># 显示具体某个包的信息</span><br><span class="line">$ composer show monolog/monolog</span><br></pre></td></tr></table></figure><h1 id="版本约束"><a href="#版本约束" class="headerlink" title="版本约束"></a>版本约束</h1><p>前面说到，我们可以指定要下载的包的版本。例如我们想要下载版本1.19的monolog。我们可以通过 composer.json 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ composer require monolog/monolog:1.19</span><br><span class="line"></span><br><span class="line"># 或者</span><br><span class="line">$ composer require monolog/monolog=1.19</span><br><span class="line"></span><br><span class="line"># 或者</span><br><span class="line">$composer require monolog/monolog 1.19</span><br><span class="line"></span><br><span class="line">//composer设置忽略版本匹配</span><br><span class="line">$ composer install --ignore-platform-reqsor</span><br><span class="line">$ composer update --ignore-platform-reqs</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下静态库和动态库编译过程</title>
      <link href="/article/3393728657.html"/>
      <url>/article/3393728657.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>1.动态库<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;动态库又称动态链接库英文为DLL，是Dynamic Link Library 的缩写形式，DLL是一个包含可由多个程序同时使用的代码和数据的库，DLL不是可执行文件。动态链接提供了一种方法，使进程可以调用不属于其可执行代码的函数。函数的可执行代码位于一个 DLL 中，该 DLL 包含一个或多个已被编译、链接并与使用它们的进程分开存储的函数。DLL 还有助于共享数据和资源。多个应用程序可同时访问内存中单个DLL 副本的内容。DLL 是一个包含可由多个程序同时使用的代码和数据的库。Windows下动态库为.dll后缀，在linux在为.so后缀。</p><p>2.静态库<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;静态库是指在我们的应用中，有一些公共代码是需要反复使用，就把这些代码编译为“库”文件；在链接步骤中，连接器将从库文件取得所需的代码，复制到生成的可执行文件中的这种库。</p><a id="more"></a><h1 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h1><blockquote><p>libtest/include/hello.h</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _HELLO_H_</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _HELLO_H_</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><blockquote><p>libtest/lib/hello.c</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"hello.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hello</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"hello world!\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>libtest/src/main.c</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"hello.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">hello();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="静态库编译过程"><a href="#静态库编译过程" class="headerlink" title="静态库编译过程"></a>静态库编译过程</h1><p>静态库是指在我们的应用中，有一些公共代码是需要反复使用，就把这些代码编译为“库”文件；在链接步骤中，连接器将从库文件取得所需的代码，复制到生成的可执行文件中的这种库。</p><h2 id="进入libtest-lib目录，执行命令"><a href="#进入libtest-lib目录，执行命令" class="headerlink" title="进入libtest/lib目录，执行命令"></a>进入libtest/lib目录，执行命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -c -I../include hello.c</span><br></pre></td></tr></table></figure><p>该命令生成目标文件hello.o，注意：参数-I添加头文件搜索目录，这里因为hello.c中有#include “hello.h”，hello.h在libtest/include目录中，这里需要指定该目录通知gcc，否则出现错误提示“找不到头文件 hello.h”。<br><strong>这一步将在libtest/lib目录中生成一个hello.o文件。</strong></p><h2 id="在libtest-lib目录，执行命令"><a href="#在libtest-lib目录，执行命令" class="headerlink" title="在libtest/lib目录，执行命令"></a>在libtest/lib目录，执行命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ar rc libhello.ahello.o</span><br></pre></td></tr></table></figure><p>该命令将hello.o添加到静态库文件libhello.a，ar命令就是用来创建、修改库的，也可以从库中提出单个模块，参数r表示在库中插入或者替换模块，c表示创建一个库<br><strong>这一步将在libtest/lib目录中生成一个libhello.a文件。</strong></p><h2 id="进入libtest-src目录，执行命令"><a href="#进入libtest-src目录，执行命令" class="headerlink" title="进入libtest/src目录，执行命令"></a>进入libtest/src目录，执行命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc main.c-I../include -L../lib -lhello -o main</span><br></pre></td></tr></table></figure><p>该 命令将编译main.c并链接静态库文件libhello.a生成可执行文件main，注意：参数-L添加库文件搜索目录，因为libhello.a在 libtest/lib目录中，这里需要指定该目录通知gcc，参数-l指定链接的库文件名称，名称不用写全名libhello.a，只用写hello即 可。<br><strong>这一步将在libtest/src目录中生成可执行文件main。</strong></p><h2 id="显示库文件中的索引表"><a href="#显示库文件中的索引表" class="headerlink" title="显示库文件中的索引表"></a>显示库文件中的索引表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nm -s libxxx.a</span><br></pre></td></tr></table></figure><h1 id="动态编译库过程"><a href="#动态编译库过程" class="headerlink" title="动态编译库过程"></a>动态编译库过程</h1><p>动态库又称动态链接库英文为DLL，是Dynamic Link Library 的缩写形式，DLL是一个包含可由多个程序同时使用的代码和数据的库，DLL不是可执行文件。动态链接提供了一种方法，使进程可以调用不属于其可执行代码的函数。函数的可执行代码位于一个 DLL 中，该 DLL 包含一个或多个已被编译、链接并与使用它们的进程分开存储的函数。DLL 还有助于共享数据和资源。多个应用程序可同时访问内存中单个DLL 副本的内容。DLL 是一个包含可由多个程序同时使用的代码和数据的库。Windows下动态库为.dll后缀，在linux在为.so后缀。</p><h2 id="进入libtest-lib目录，执行命令-1"><a href="#进入libtest-lib目录，执行命令-1" class="headerlink" title="进入libtest/lib目录，执行命令"></a>进入libtest/lib目录，执行命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc hello.c-I../include -fPIC -shared -o libhello.so</span><br></pre></td></tr></table></figure><p>这一步将在当前目录生成动态库文件libhello.so，参数-fPIC -shared固定格式，不用纠结他们什么意思。</p><h2 id="进入libtest-src目录，执行命令-1"><a href="#进入libtest-src目录，执行命令-1" class="headerlink" title="进入libtest/src目录，执行命令"></a>进入libtest/src目录，执行命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc main.c-I../include -L../lib -lhello -o main</span><br></pre></td></tr></table></figure><p>此时在当前目录中已经生成了可执行文件main，执行./main时却提示错误：./main: error while loading shared libraries: libhello.so: cannotopen shared object file: No such file or directory<br>也就是找不到动态库文件libhello.so，在网上找了答案说如果遇到这样的问题需要设置环境变量LD_LIBRARY_PATH</p><h2 id="设置环境变量LD-LIBRARY-PATH"><a href="#设置环境变量LD-LIBRARY-PATH" class="headerlink" title="设置环境变量LD_LIBRARY_PATH"></a>设置环境变量LD_LIBRARY_PATH</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=<span class="string">"../lib"</span></span><br><span class="line">gcc main.c -I../include -L../lib -lhello -o main</span><br><span class="line"><span class="comment">#然后再执行./main就没有错误了。</span></span><br></pre></td></tr></table></figure><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>环境变量LD_LIBRARY_PATH指示动态连接器可以装载动态库的路径，在链接动态库文件前设置该变量为库文件所在路径，注意：用export LD_LIBRARY_PATH=”…”方式只是临时生效的，如果要永久有效可以写入~/.bashrc文件中，跟修改PATH类 似，exportLD_LIBRARY_PATH=$LD_LIBRARY_PATH;<br>当然如果有root权限的话，也可以修改/etc/ld.so.conf文件，将要添加的动态库搜索路径写入该文件中，然后调用/sbin/ldconfig来达到同样的目的。</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> C/C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP的ArrayAccess接口使用</title>
      <link href="/article/904739967.html"/>
      <url>/article/904739967.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>PHP5 中多了一系列新接口。同时这些接口和一些实现的 Class 被归为 Standard PHP Library(SPL)。在 PHP5 中加入了很多特性，使类的重载 (Overloading) 得到进一步的加强。ArrayAccess 的作用是使你的 Class 看起来像一个数组(PHP 的数组)。这点和 C# 的 Index 特性很相似。</p><p>如果想让对象使用起来像一个PHP数组，那么我们需要实现ArrayAccess接口</p><p>ArrayAccess是一个interface，实现这个interface，必须要实现几个方法</p><a id="more"></a><h1 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span> <span class="keyword">implements</span> <span class="title">ArrayAccess</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $elements;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetExists</span><span class="params">($offset)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;elements[$offset]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetSet</span><span class="params">($offset, $value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;elements[$offset] = $value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetGet</span><span class="params">($offset)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;elements[$offset];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetUnset</span><span class="params">($offset)</span></span>&#123;</span><br><span class="line">        <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;elements[$offset]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="调用方式"><a href="#调用方式" class="headerlink" title="调用方式"></a>调用方式</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$test = <span class="keyword">new</span> Test();</span><br><span class="line">$test[<span class="string">'test'</span>] = <span class="string">'test'</span>;<span class="comment">//自动调用offsetSet</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($test[<span class="string">'test'</span>]))<span class="comment">//自动调用offsetExists</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> $test[<span class="string">'test'</span>];<span class="comment">//自动调用offsetGet</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">    <span class="keyword">unset</span>($test[<span class="string">'test'</span>]);<span class="comment">//自动调用offsetUnset</span></span><br><span class="line">    var_dump($test[<span class="string">'test'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//运行输出：</span></span><br><span class="line"><span class="comment">//test</span></span><br><span class="line"><span class="comment">//NULL</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP的Hook钩子实现</title>
      <link href="/article/4003041570.html"/>
      <url>/article/4003041570.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>钩子就像一个”陷阱”、”监听器”,当A发送一个消息到B时，当消息还未到达目的地B时，被钩子拦截调出一部分代码做处理，这部分代码也叫钩子函数或者回调函数</p><a id="more"></a><h1 id="Hook核心类"><a href="#Hook核心类" class="headerlink" title="Hook核心类"></a>Hook核心类</h1><p>这个类要放在全局引用里面，在所有需要用到插件的地方，优先加载。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line">*</span><br><span class="line">* 插件机制的实现核心类</span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line">class PluginManager</span><br><span class="line">&#123;</span><br><span class="line">    /**</span><br><span class="line">     * 监听已注册的插件</span><br><span class="line">     *</span><br><span class="line">     * @access private</span><br><span class="line">     * @var array</span><br><span class="line">     */</span><br><span class="line">    private $_listeners = array();</span><br><span class="line">     /**</span><br><span class="line">     * 构造函数</span><br><span class="line">     *</span><br><span class="line">     * @access public</span><br><span class="line">     * @return void</span><br><span class="line">     */</span><br><span class="line">    public function __construct()</span><br><span class="line">    &#123;</span><br><span class="line">        #这里$plugin数组包含我们获取已经由用户激活的插件信息</span><br><span class="line">     #为演示方便，我们假定$plugin中至少包含</span><br><span class="line">     #$plugin = array(</span><br><span class="line">        #    &apos;name&apos; =&gt; &apos;插件名称&apos;,</span><br><span class="line">        #    &apos;directory&apos;=&gt;&apos;插件安装目录&apos;</span><br><span class="line">        #);</span><br><span class="line">        $plugins = get_active_plugins();#这个函数请自行实现</span><br><span class="line">        if($plugins)</span><br><span class="line">        &#123;</span><br><span class="line">            foreach($plugins as $plugin)</span><br><span class="line">            &#123;//假定每个插件文件夹中包含一个actions.php文件，它是插件的具体实现</span><br><span class="line">                if (@file_exists(STPATH .&apos;plugins/&apos;.$plugin[&apos;directory&apos;].&apos;/actions.php&apos;))</span><br><span class="line">                &#123;</span><br><span class="line">                    include_once(STPATH .&apos;plugins/&apos;.$plugin[&apos;directory&apos;].&apos;/actions.php&apos;);</span><br><span class="line">                    $class = $plugin[&apos;name&apos;].&apos;_actions&apos;;</span><br><span class="line">                    if (class_exists($class))</span><br><span class="line">                    &#123;</span><br><span class="line">                        //初始化所有插件</span><br><span class="line">                        new $class($this);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        #此处做些日志记录方面的东西</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 注册需要监听的插件方法（钩子）</span><br><span class="line">     *</span><br><span class="line">     * @param string $hook</span><br><span class="line">     * @param object $reference</span><br><span class="line">     * @param string $method</span><br><span class="line">     */</span><br><span class="line">    function register($hook, &amp;$reference, $method)</span><br><span class="line">    &#123;</span><br><span class="line">        //获取插件要实现的方法</span><br><span class="line">        $key = get_class($reference).&apos;-&gt;&apos;.$method;</span><br><span class="line">        //将插件的引用连同方法push进监听数组中</span><br><span class="line">        $this-&gt;_listeners[$hook][$key] = array(&amp;$reference, $method);</span><br><span class="line">        #此处做些日志记录方面的东西</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 触发一个钩子</span><br><span class="line">     *</span><br><span class="line">     * @param string $hook 钩子的名称</span><br><span class="line">     * @param mixed $data 钩子的入参</span><br><span class="line">     *    @return mixed</span><br><span class="line">     */</span><br><span class="line">    function trigger($hook, $data=&apos;&apos;)</span><br><span class="line">    &#123;</span><br><span class="line">        $result = &apos;&apos;;</span><br><span class="line">        //查看要实现的钩子，是否在监听数组之中</span><br><span class="line">        if (isset($this-&gt;_listeners[$hook]) &amp;&amp; is_array($this-&gt;_listeners[$hook]) &amp;&amp; count($this-&gt;_listeners[$hook]) &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">            // 循环调用开始</span><br><span class="line">            foreach ($this-&gt;_listeners[$hook] as $listener)</span><br><span class="line">            &#123;</span><br><span class="line">                // 取出插件对象的引用和方法</span><br><span class="line">                $class =&amp; $listener[0];</span><br><span class="line">                $method = $listener[1];</span><br><span class="line">                if(method_exists($class,$method))</span><br><span class="line">                &#123;</span><br><span class="line">                    // 动态调用插件的方法</span><br><span class="line">                    $result .= $class-&gt;$method($data);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        #此处做些日志记录方面的东西</span><br><span class="line">        return $result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Hook插件实现"><a href="#Hook插件实现" class="headerlink" title="Hook插件实现"></a>Hook插件实现</h1><p>接下来是一个简单插件的实现DEMO。这是一个简单的Hello World插件，用于输出一句话。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line">* 这是一个Hello World简单插件的实现</span><br><span class="line">*/</span><br><span class="line">/**</span><br><span class="line">*需要注意的几个默认规则：</span><br><span class="line">*    1. 本插件类的文件名必须是action</span><br><span class="line">*    2. 插件类的名称必须是&#123;插件名_actions&#125;</span><br><span class="line">*/</span><br><span class="line">class DEMO_actions</span><br><span class="line">&#123;</span><br><span class="line">    //解析函数的参数是pluginManager的引用</span><br><span class="line">    function __construct(&amp;$pluginManager)</span><br><span class="line">    &#123;</span><br><span class="line">        //注册这个插件</span><br><span class="line">        //第一个参数是钩子的名称</span><br><span class="line">        //第二个参数是pluginManager的引用</span><br><span class="line">        //第三个是插件所执行的方法</span><br><span class="line">        $pluginManager-&gt;register(&apos;demo&apos;, $this, &apos;say_hello&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function say_hello()</span><br><span class="line">    &#123;</span><br><span class="line">        echo &apos;Hello World&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="调用插件"><a href="#调用插件" class="headerlink" title="调用插件"></a>调用插件</h1><p>再接下来就是插件的调用触发的地方，比如我要将say_hello放到我博客首页Index.php， 那么你在index.php中的某个位置写下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pluginManager-&gt;trigger(<span class="string">'demo'</span>,<span class="string">''</span>);</span><br></pre></td></tr></table></figure><p>第一个参数表示钩子的名字，第二个参数是插件对应方法的入口参数，由于这个例子中没有输入参数，所以为空。</p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP进程管理类</title>
      <link href="/article/3090157541.html"/>
      <url>/article/3090157541.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>PHP的进程控制支持实现了Unix方式的进程创建, 程序执行, 信号处理以及进程的中断。 进程控制不能被应用在Web服务器环境，当其被用于Web服务环境时可能会带来意外的结果。<br>PCNTL现在使用了ticks作为信号处理的回调机制，ticks在速度上远远超过了之前的处理机制。 这个变化与“用户ticks”遵循了相同的语义。您可以使用declare() 语句在程序中指定允许发生回调的位置。这使得我们对异步事件处理的开销最小化。在编译PHP时 启用pcntl将始终承担这种开销，不论您的脚本中是否真正使用了pcntl。<br><strong>Note: 此扩展在 Windows 平台上不可用。</strong></p><a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">*<span class="doctag">@author</span> DuanEnJian&lt;duanenjian@300.cn&gt; </span></span><br><span class="line"><span class="comment">*<span class="doctag">@date</span> 2016-09-12 </span></span><br><span class="line"><span class="comment">* 后台脚本控制类 </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DaemonCommand</span></span>&#123;  </span><br><span class="line">   </span><br><span class="line">    <span class="keyword">private</span> $info_dir=<span class="string">"/tmp"</span>;  </span><br><span class="line">    <span class="keyword">private</span> $pid_file=<span class="string">""</span>;  </span><br><span class="line">    <span class="keyword">private</span> $terminate=<span class="keyword">false</span>; <span class="comment">//是否中断  </span></span><br><span class="line">    <span class="keyword">private</span> $workers_count=<span class="number">0</span>;  </span><br><span class="line">    <span class="keyword">private</span> $gc_enabled=<span class="keyword">null</span>;  </span><br><span class="line">    <span class="keyword">private</span> $workers_max=<span class="number">8</span>; <span class="comment">//最多运行8个进程  </span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($is_sington=false,$user=<span class="string">'nobody'</span>,$output=<span class="string">"/dev/null"</span>)</span></span>&#123;  </span><br><span class="line">   </span><br><span class="line">            <span class="keyword">$this</span>-&gt;is_sington=$is_sington; <span class="comment">//是否单例运行，单例运行会在tmp目录下建立一个唯一的PID  </span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;user=$user;<span class="comment">//设置运行的用户 默认情况下nobody  </span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;output=$output; <span class="comment">//设置输出的地方  </span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkPcntl();  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">//检查环境是否支持pcntl支持  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkPcntl</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span> ( ! function_exists(<span class="string">'pcntl_signal_dispatch'</span>)) &#123;  </span><br><span class="line">            <span class="comment">// PHP &lt; 5.3 uses ticks to handle signals instead of pcntl_signal_dispatch  </span></span><br><span class="line">            <span class="comment">// call sighandler only every 10 ticks  </span></span><br><span class="line">            <span class="keyword">declare</span>(ticks = <span class="number">10</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">   </span><br><span class="line">        <span class="comment">// Make sure PHP has support for pcntl  </span></span><br><span class="line">        <span class="keyword">if</span> ( ! function_exists(<span class="string">'pcntl_signal'</span>)) &#123;  </span><br><span class="line">            $message = <span class="string">'PHP does not appear to be compiled with the PCNTL extension.  This is neccesary for daemonization'</span>;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;_log($message);  </span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>($message);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="comment">//信号处理  </span></span><br><span class="line">        pcntl_signal(SIGTERM, <span class="keyword">array</span>(<span class="keyword">__CLASS__</span>, <span class="string">"signalHandler"</span>),<span class="keyword">false</span>);  </span><br><span class="line">        pcntl_signal(SIGINT, <span class="keyword">array</span>(<span class="keyword">__CLASS__</span>, <span class="string">"signalHandler"</span>),<span class="keyword">false</span>);  </span><br><span class="line">        pcntl_signal(SIGQUIT, <span class="keyword">array</span>(<span class="keyword">__CLASS__</span>, <span class="string">"signalHandler"</span>),<span class="keyword">false</span>);  </span><br><span class="line">   </span><br><span class="line">        <span class="comment">// Enable PHP 5.3 garbage collection  </span></span><br><span class="line">        <span class="keyword">if</span> (function_exists(<span class="string">'gc_enable'</span>))  </span><br><span class="line">        &#123;  </span><br><span class="line">            gc_enable();  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;gc_enabled = gc_enabled();  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">    <span class="comment">// daemon化程序  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">daemonize</span><span class="params">()</span></span>&#123;  </span><br><span class="line">   </span><br><span class="line">        <span class="keyword">global</span> $stdin, $stdout, $stderr;  </span><br><span class="line">        <span class="keyword">global</span> $argv;  </span><br><span class="line">   </span><br><span class="line">        set_time_limit(<span class="number">0</span>);  </span><br><span class="line">   </span><br><span class="line">        <span class="comment">// 只允许在cli下面运行  </span></span><br><span class="line">        <span class="keyword">if</span> (php_sapi_name() != <span class="string">"cli"</span>)&#123;  </span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"only run in command line mode\n"</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">   </span><br><span class="line">        <span class="comment">// 只能单例运行  </span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;is_sington==<span class="keyword">true</span>)&#123;  </span><br><span class="line">   </span><br><span class="line">            <span class="keyword">$this</span>-&gt;pid_file = <span class="keyword">$this</span>-&gt;info_dir . <span class="string">"/"</span> .<span class="keyword">__CLASS__</span> . <span class="string">"_"</span> . substr(basename($argv[<span class="number">0</span>]), <span class="number">0</span>, <span class="number">-4</span>) . <span class="string">".pid"</span>;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkPidfile();  </span><br><span class="line">        &#125;  </span><br><span class="line">   </span><br><span class="line">        umask(<span class="number">0</span>); <span class="comment">//把文件掩码清0  </span></span><br><span class="line">   </span><br><span class="line">        <span class="keyword">if</span> (pcntl_fork() != <span class="number">0</span>)&#123; <span class="comment">//是父进程，父进程退出  </span></span><br><span class="line">            <span class="keyword">exit</span>();  </span><br><span class="line">        &#125;  </span><br><span class="line">   </span><br><span class="line">        posix_setsid();<span class="comment">//设置新会话组长，脱离终端  </span></span><br><span class="line">   </span><br><span class="line">        <span class="keyword">if</span> (pcntl_fork() != <span class="number">0</span>)&#123; <span class="comment">//是第一子进程，结束第一子进程     </span></span><br><span class="line">            <span class="keyword">exit</span>();  </span><br><span class="line">        &#125;  </span><br><span class="line">   </span><br><span class="line">        chdir(<span class="string">"/"</span>); <span class="comment">//改变工作目录  </span></span><br><span class="line">   </span><br><span class="line">        <span class="keyword">$this</span>-&gt;setUser(<span class="keyword">$this</span>-&gt;user) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"cannot change owner"</span>);  </span><br><span class="line">   </span><br><span class="line">        <span class="comment">//关闭打开的文件描述符  </span></span><br><span class="line">        fclose(STDIN);  </span><br><span class="line">        fclose(STDOUT);  </span><br><span class="line">        fclose(STDERR);  </span><br><span class="line">   </span><br><span class="line">        $stdin  = fopen(<span class="keyword">$this</span>-&gt;output, <span class="string">'r'</span>);  </span><br><span class="line">        $stdout = fopen(<span class="keyword">$this</span>-&gt;output, <span class="string">'a'</span>);  </span><br><span class="line">        $stderr = fopen(<span class="keyword">$this</span>-&gt;output, <span class="string">'a'</span>);  </span><br><span class="line">   </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;is_sington==<span class="keyword">true</span>)&#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;createPidfile();  </span><br><span class="line">        &#125;  </span><br><span class="line">   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">//--检测pid是否已经存在  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkPidfile</span><span class="params">()</span></span>&#123;  </span><br><span class="line">   </span><br><span class="line">        <span class="keyword">if</span> (!file_exists(<span class="keyword">$this</span>-&gt;pid_file))&#123;  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        $pid = file_get_contents(<span class="keyword">$this</span>-&gt;pid_file);  </span><br><span class="line">        $pid = intval($pid);  </span><br><span class="line">        <span class="keyword">if</span> ($pid &gt; <span class="number">0</span> &amp;&amp; posix_kill($pid, <span class="number">0</span>))&#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;_log(<span class="string">"the daemon process is already started"</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">else</span> &#123;  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;_log(<span class="string">"the daemon proces end abnormally, please check pidfile "</span> . <span class="keyword">$this</span>-&gt;pid_file);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">1</span>);  </span><br><span class="line">   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">//----创建pid  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createPidfile</span><span class="params">()</span></span>&#123;  </span><br><span class="line">   </span><br><span class="line">        <span class="keyword">if</span> (!is_dir(<span class="keyword">$this</span>-&gt;info_dir))&#123;  </span><br><span class="line">            mkdir(<span class="keyword">$this</span>-&gt;info_dir);  </span><br><span class="line">        &#125;  </span><br><span class="line">        $fp = fopen(<span class="keyword">$this</span>-&gt;pid_file, <span class="string">'w'</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"cannot create pid file"</span>);  </span><br><span class="line">        fwrite($fp, posix_getpid());  </span><br><span class="line">        fclose($fp);  </span><br><span class="line">        <span class="keyword">$this</span>-&gt;_log(<span class="string">"create pid file "</span> . <span class="keyword">$this</span>-&gt;pid_file);  </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">    <span class="comment">//设置运行的用户  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setUser</span><span class="params">($name)</span></span>&#123;  </span><br><span class="line">   </span><br><span class="line">        $result = <span class="keyword">false</span>;  </span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($name))&#123;  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">        $user = posix_getpwnam($name);  </span><br><span class="line">        <span class="keyword">if</span> ($user) &#123;  </span><br><span class="line">            $uid = $user[<span class="string">'uid'</span>];  </span><br><span class="line">            $gid = $user[<span class="string">'gid'</span>];  </span><br><span class="line">            $result = posix_setuid($uid);  </span><br><span class="line">            posix_setgid($gid);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">return</span> $result;  </span><br><span class="line">   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">//信号处理函数  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">signalHandler</span><span class="params">($signo)</span></span>&#123;  </span><br><span class="line">   </span><br><span class="line">        <span class="keyword">switch</span>($signo)&#123;  </span><br><span class="line">   </span><br><span class="line">            <span class="comment">//用户自定义信号  </span></span><br><span class="line">            <span class="keyword">case</span> SIGUSR1: <span class="comment">//busy  </span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;workers_count &lt; <span class="keyword">$this</span>-&gt;workers_max)&#123;  </span><br><span class="line">                $pid = pcntl_fork();  </span><br><span class="line">                <span class="keyword">if</span> ($pid &gt; <span class="number">0</span>)&#123;  </span><br><span class="line">                    <span class="keyword">$this</span>-&gt;workers_count ++;  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">            <span class="comment">//子进程结束信号  </span></span><br><span class="line">            <span class="keyword">case</span> SIGCHLD:  </span><br><span class="line">                <span class="keyword">while</span>(($pid=pcntl_waitpid(<span class="number">-1</span>, $status, WNOHANG)) &gt; <span class="number">0</span>)&#123;  </span><br><span class="line">                    <span class="keyword">$this</span>-&gt;workers_count --;  </span><br><span class="line">                &#125;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">            <span class="comment">//中断进程  </span></span><br><span class="line">            <span class="keyword">case</span> SIGTERM:  </span><br><span class="line">            <span class="keyword">case</span> SIGHUP:  </span><br><span class="line">            <span class="keyword">case</span> SIGQUIT:  </span><br><span class="line">   </span><br><span class="line">                <span class="keyword">$this</span>-&gt;terminate = <span class="keyword">true</span>;  </span><br><span class="line">            <span class="keyword">break</span>;  </span><br><span class="line">            <span class="keyword">default</span>:  </span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line">   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">    *开始开启进程 </span></span><br><span class="line"><span class="comment">    *$count 准备开启的进程数 </span></span><br><span class="line"><span class="comment">    */</span>  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">start</span><span class="params">($count=<span class="number">1</span>)</span></span>&#123;  </span><br><span class="line">   </span><br><span class="line">        <span class="keyword">$this</span>-&gt;_log(<span class="string">"daemon process is running now"</span>);  </span><br><span class="line">        pcntl_signal(SIGCHLD, <span class="keyword">array</span>(<span class="keyword">__CLASS__</span>, <span class="string">"signalHandler"</span>),<span class="keyword">false</span>); <span class="comment">// if worker die, minus children num  </span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;  </span><br><span class="line">            <span class="keyword">if</span> (function_exists(<span class="string">'pcntl_signal_dispatch'</span>))&#123;  </span><br><span class="line">   </span><br><span class="line">                pcntl_signal_dispatch();  </span><br><span class="line">            &#125;  </span><br><span class="line">   </span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;terminate)&#123;  </span><br><span class="line">                <span class="keyword">break</span>;  </span><br><span class="line">            &#125;  </span><br><span class="line">            $pid=<span class="number">-1</span>;  </span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;workers_count&lt;$count)&#123;  </span><br><span class="line">   </span><br><span class="line">                $pid=pcntl_fork();  </span><br><span class="line">            &#125;  </span><br><span class="line">   </span><br><span class="line">            <span class="keyword">if</span>($pid&gt;<span class="number">0</span>)&#123;  </span><br><span class="line">   </span><br><span class="line">                <span class="keyword">$this</span>-&gt;workers_count++;  </span><br><span class="line">   </span><br><span class="line">            &#125;<span class="keyword">elseif</span>($pid==<span class="number">0</span>)&#123;  </span><br><span class="line">   </span><br><span class="line">                <span class="comment">// 这个符号表示恢复系统对信号的默认处理  </span></span><br><span class="line">                pcntl_signal(SIGTERM, SIG_DFL);  </span><br><span class="line">                pcntl_signal(SIGCHLD, SIG_DFL);  </span><br><span class="line">                <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;jobs))&#123;  </span><br><span class="line">                    <span class="keyword">while</span>(<span class="keyword">$this</span>-&gt;jobs[<span class="string">'runtime'</span>])&#123;  </span><br><span class="line">                        <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;jobs[<span class="string">'argv'</span>]))&#123;  </span><br><span class="line">                            call_user_func(<span class="keyword">$this</span>-&gt;jobs[<span class="string">'function'</span>],<span class="keyword">$this</span>-&gt;jobs[<span class="string">'argv'</span>]);  </span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">                            call_user_func(<span class="keyword">$this</span>-&gt;jobs[<span class="string">'function'</span>]);  </span><br><span class="line">                        &#125;  </span><br><span class="line">                        <span class="keyword">$this</span>-&gt;jobs[<span class="string">'runtime'</span>]--;  </span><br><span class="line">                        sleep(<span class="number">2</span>);  </span><br><span class="line">                    &#125;  </span><br><span class="line">                    <span class="keyword">exit</span>();  </span><br><span class="line">   </span><br><span class="line">                &#125;  </span><br><span class="line">                <span class="keyword">return</span>;  </span><br><span class="line">   </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">   </span><br><span class="line">                sleep(<span class="number">2</span>);  </span><br><span class="line">            &#125;  </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">        &#125;  </span><br><span class="line">   </span><br><span class="line">        <span class="keyword">$this</span>-&gt;mainQuit();  </span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">0</span>);  </span><br><span class="line">   </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">    <span class="comment">//整个进程退出  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">mainQuit</span><span class="params">()</span></span>&#123;  </span><br><span class="line">   </span><br><span class="line">        <span class="keyword">if</span> (file_exists(<span class="keyword">$this</span>-&gt;pid_file))&#123;  </span><br><span class="line">            unlink(<span class="keyword">$this</span>-&gt;pid_file);  </span><br><span class="line">            <span class="keyword">$this</span>-&gt;_log(<span class="string">"delete pid file "</span> . <span class="keyword">$this</span>-&gt;pid_file);  </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">$this</span>-&gt;_log(<span class="string">"daemon process exit now"</span>);  </span><br><span class="line">        posix_kill(<span class="number">0</span>, SIGKILL);  </span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">0</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">    <span class="comment">// 添加工作实例，目前只支持单个job工作  </span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setJobs</span><span class="params">($jobs=array<span class="params">()</span>)</span></span>&#123;  </span><br><span class="line">   </span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($jobs[<span class="string">'argv'</span>])||<span class="keyword">empty</span>($jobs[<span class="string">'argv'</span>]))&#123;  </span><br><span class="line">   </span><br><span class="line">            $jobs[<span class="string">'argv'</span>]=<span class="string">""</span>;  </span><br><span class="line">   </span><br><span class="line">        &#125;  </span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($jobs[<span class="string">'runtime'</span>])||<span class="keyword">empty</span>($jobs[<span class="string">'runtime'</span>]))&#123;  </span><br><span class="line">   </span><br><span class="line">            $jobs[<span class="string">'runtime'</span>]=<span class="number">1</span>;  </span><br><span class="line">   </span><br><span class="line">        &#125;  </span><br><span class="line">   </span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>($jobs[<span class="string">'function'</span>])||<span class="keyword">empty</span>($jobs[<span class="string">'function'</span>]))&#123;  </span><br><span class="line">   </span><br><span class="line">            <span class="keyword">$this</span>-&gt;log(<span class="string">"你必须添加运行的函数！"</span>);  </span><br><span class="line">        &#125;  </span><br><span class="line">   </span><br><span class="line">        <span class="keyword">$this</span>-&gt;jobs=$jobs;  </span><br><span class="line">   </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">//日志处理  </span></span><br><span class="line">    <span class="keyword">private</span>  <span class="function"><span class="keyword">function</span> <span class="title">_log</span><span class="params">($message)</span></span>&#123;  </span><br><span class="line">        printf(<span class="string">"%s\t%d\t%d\t%s\n"</span>, date(<span class="string">"c"</span>), posix_getpid(), posix_getppid(), $message);  </span><br><span class="line">    &#125;  </span><br><span class="line">   </span><br><span class="line">&#125;  </span><br><span class="line">   </span><br><span class="line"><span class="comment">//调用方法1  </span></span><br><span class="line">$daemon=<span class="keyword">new</span> DaemonCommand(<span class="keyword">true</span>);  </span><br><span class="line">$daemon-&gt;daemonize();  </span><br><span class="line">$daemon-&gt;start(<span class="number">2</span>);<span class="comment">//开启2个子进程工作  </span></span><br><span class="line">work();  </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"><span class="comment">//调用方法2  </span></span><br><span class="line">$daemon=<span class="keyword">new</span> DaemonCommand(<span class="keyword">true</span>);  </span><br><span class="line">$daemon-&gt;daemonize();  </span><br><span class="line">$daemon-&gt;addJobs(<span class="keyword">array</span>(<span class="string">'function'</span>=&gt;<span class="string">'work'</span>,<span class="string">'argv'</span>=&gt;<span class="string">''</span>,<span class="string">'runtime'</span>=&gt;<span class="number">1000</span>));<span class="comment">//function 要运行的函数,argv运行函数的参数，runtime运行的次数  </span></span><br><span class="line">$daemon-&gt;start(<span class="number">2</span>);<span class="comment">//开启2个子进程工作  </span></span><br><span class="line">   </span><br><span class="line"><span class="comment">//具体功能的实现  </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">work</span><span class="params">()</span></span>&#123;  </span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"测试1"</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP实现ACL权限控制</title>
      <link href="/article/864010822.html"/>
      <url>/article/864010822.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>ACL是存在于计算机中的一张表，它使操作系统明白每个用户对特定系统对象，例如文件目录或单个文件的存取权限。每个对象拥有一个在访问控制表中定义的安全属性。这张表对于每个系统用户有拥有一个访问权限。最一般的访问权限包括读文件（包括所有目录中的文件），写一个或多个文件和执行一个文件（如果它是一个可执行文件或者是程序的时候）。Windows NT，Novell公司的Netware，Digital公司的 OpenVMS和基于UNIX系统是使用这种访问控制表的系统。而此表的实现在各个系统中却不一样。 </p><p>在Windows NT中，每个系统对象和一个访问控制表相关。每个ACL都有一个或多个访问控制入口，包括用户名或用户组的名称。对于每个用户，组或人物，他们的访问权限在表中的一个位串中记录。一般说来，系统管理员和对象的所有者创建对象的访问控制表。 </p><a id="more"></a><h1 id="数据库结构"><a href="#数据库结构" class="headerlink" title="数据库结构"></a>数据库结构</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- ACL Tables</span></span><br><span class="line"><span class="comment">-- 表的结构 `aclresources`</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`aclresources`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`aclresources`</span> (</span><br><span class="line"><span class="string">`rsid`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line"><span class="string">`access`</span> <span class="built_in">int</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="number">0</span>,</span><br><span class="line"><span class="string">`desc`</span> <span class="built_in">varchar</span>(<span class="number">240</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="string">''</span>,</span><br><span class="line"><span class="string">`created_at`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="number">1</span>,</span><br><span class="line"><span class="string">`updated_at`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="number">0</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`rsid`</span>)</span><br><span class="line">)<span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COLLATE</span>=utf8_unicode_ci;</span><br><span class="line"><span class="comment">-- 表的结构 `aclroles`</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`aclroles`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`aclroles`</span> (</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> auto_increment,</span><br><span class="line"><span class="string">`rolename`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line"><span class="string">`desc`</span> <span class="built_in">varchar</span>(<span class="number">240</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="string">''</span>,</span><br><span class="line"><span class="string">`created_at`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="number">1</span>,</span><br><span class="line"><span class="string">`updated_at`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="number">0</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line"><span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`rolename`</span> (<span class="string">`rolename`</span>)</span><br><span class="line">)<span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COLLATE</span>=utf8_unicode_ci;</span><br><span class="line"><span class="comment">-- 表的结构 `ref_aclresources_aclroles`</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`ref_aclresources_aclroles`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`ref_aclresources_aclroles`</span> (</span><br><span class="line"><span class="string">`rsid`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line"><span class="string">`role_id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`rsid`</span>,<span class="string">`role_id`</span>)</span><br><span class="line">)<span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COLLATE</span>=utf8_unicode_ci;</span><br><span class="line"><span class="comment">-- 表的结构 `ref_users_aclroles`</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`ref_users_aclroles`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`ref_users_aclroles`</span> (</span><br><span class="line"><span class="string">`user_id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> auto_increment,</span><br><span class="line"><span class="string">`role_id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> ,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`user_id`</span>,<span class="string">`role_id`</span>)</span><br><span class="line">)<span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COLLATE</span>=utf8_unicode_ci;</span><br><span class="line"><span class="comment">-- 表的结构 `users`</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="string">`users`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`users`</span> (</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> auto_increment,</span><br><span class="line"><span class="string">`email`</span> <span class="built_in">varchar</span>(<span class="number">128</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`password`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line"><span class="string">`nickname`</span> <span class="built_in">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="string">''</span>,</span><br><span class="line"><span class="string">`roles`</span> <span class="built_in">varchar</span>(<span class="number">240</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="string">''</span>,</span><br><span class="line"><span class="string">`created_at`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="number">1</span>,</span><br><span class="line"><span class="string">`updated_at`</span> <span class="built_in">int</span>(<span class="number">10</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">default</span> <span class="number">0</span>,</span><br><span class="line">PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line"><span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`user_email`</span> (<span class="string">`email`</span>)</span><br><span class="line">)<span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COLLATE</span>=utf8_unicode_ci;</span><br></pre></td></tr></table></figure><h1 id="核心实现代码"><a href="#核心实现代码" class="headerlink" title="核心实现代码"></a>核心实现代码</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 简单的 ACL 权限控制功能</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* 表定义</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* 1. 资源定义 (rsid,access,desc,created_at,updated_at)</span></span><br><span class="line"><span class="comment">* 2. 角色定义 (id,rolename,desc,created_at,updated_at)</span></span><br><span class="line"><span class="comment">* 3. 资源-角色关联 (rsid,role_id)</span></span><br><span class="line"><span class="comment">* 4. 用户-角色关联 (user_id,role_id)</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* 依赖db.php sqlobject.php</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AclBase</span> </span>&#123;</span><br><span class="line"><span class="comment">// --- ACL 访问授权 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 不允许任何人访问</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> NOBODY = <span class="number">0</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 允许任何人访问</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> EVERYONE = <span class="number">1</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 允许 拥有角色的用户访问</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> HAS_ROLE = <span class="number">2</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 允许 不带有角色的用户访问</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> NO_ROLE = <span class="number">3</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 在 资源-角色关联 定义的 角色才能访问</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">const</span> ALLOCATE_ROLES = <span class="number">4</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义相关的 表名</span></span><br><span class="line"><span class="keyword">public</span> $tbResources = <span class="string">'aclresources'</span>;</span><br><span class="line"><span class="keyword">public</span> $tbRoles = <span class="string">'aclroles'</span>;</span><br><span class="line"><span class="keyword">public</span> $tbRefResourcesRoles = <span class="string">'ref_aclresources_aclroles'</span>;</span><br><span class="line"><span class="keyword">public</span> $tbRefUsersRoles = <span class="string">'ref_users_aclroles'</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 格式化 资源的访问权限并返回</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">formatAccessValue</span><span class="params">($access)</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> $arr = <span class="keyword">array</span>(<span class="keyword">self</span>::NOBODY,<span class="keyword">self</span>::EVERYONE,<span class="keyword">self</span>::HAS_ROLE,<span class="keyword">self</span>::NO_ROLE,<span class="keyword">self</span>::ALLOCATE_ROLES);</span><br><span class="line"><span class="keyword">return</span> in_array($access,$arr) ? $access : <span class="keyword">self</span>::NOBODY;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 创建资源,返回资源记录主键</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $rsid</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> int $access</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $desc</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createResource</span><span class="params">($rsid,$access,$desc)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($rsid)) <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line"></span><br><span class="line">$resource = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'rsid'</span> =&gt; $rsid,</span><br><span class="line"><span class="string">'access'</span> =&gt; <span class="keyword">self</span>::formatAccessValue($access),</span><br><span class="line"><span class="string">'desc'</span> =&gt; $desc,</span><br><span class="line"><span class="string">'created_at'</span> =&gt; CURRENT_TIMESTAMP</span><br><span class="line">); </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> SingleTableCRUD::insert(<span class="keyword">$this</span>-&gt;tbResources,$resource);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 修改资源,返回成功状态</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> array $resource</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateResource</span><span class="params">(array $resource)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($resource[<span class="string">'rsid'</span>])) <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line"></span><br><span class="line">$resource[<span class="string">'updated_at'</span>] = CURRENT_TIMESTAMP; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> SingleTableCRUD::update(<span class="keyword">$this</span>-&gt;tbResources,$resource,<span class="string">'rsid'</span>);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 删除资源</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $rsid</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deleteResource</span><span class="params">($rsid)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($rsid)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> SingleTableCRUD::delete(<span class="keyword">$this</span>-&gt;tbResources,<span class="keyword">array</span>(<span class="string">'rsid'</span>=&gt;$rsid));</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 创建角色,返回角色记录主键</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $rolename</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $desc</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createRole</span><span class="params">($rolename,$desc)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($rolename)) <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line"></span><br><span class="line">$role = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">'rolename'</span> =&gt; $rolename,</span><br><span class="line"><span class="string">'desc'</span> =&gt; $desc,</span><br><span class="line"><span class="string">'created_at'</span> =&gt; CURRENT_TIMESTAMP</span><br><span class="line">); </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> SingleTableCRUD::insert(<span class="keyword">$this</span>-&gt;tbRoles,$role);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 修改角色,返回成功状态</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> array $role</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">updateRole</span><span class="params">(array $role)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($role[<span class="string">'id'</span>])) <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($role[<span class="string">'rolename'</span>])) <span class="keyword">unset</span>($role[<span class="string">'rolename'</span>]);</span><br><span class="line">$role[<span class="string">'updated_at'</span>] = CURRENT_TIMESTAMP; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> SingleTableCRUD::update(<span class="keyword">$this</span>-&gt;tbRoles,$role,<span class="string">'id'</span>);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 删除角色</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> int $role_id</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deleteRole</span><span class="params">($role_id)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($role_id)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> SingleTableCRUD::delete(<span class="keyword">$this</span>-&gt;tbRoles,<span class="keyword">array</span>(<span class="string">'role_id'</span>=&gt;(int) $role_id));</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 为资源指定角色,每次均先全部移除表中相关记录再插入</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> int $rsid</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> mixed $roleIds</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> boolean $setNull 当角色id不存在时,是否将资源从关联表中清空</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">allocateRolesForResource</span><span class="params">($rsid,$roleIds,$setNull=false,$defaultAccess=<span class="number">-1</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($rsid)) <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line"></span><br><span class="line">$roleIds = normalize($roleIds,<span class="string">','</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($roleIds))&#123;</span><br><span class="line"><span class="keyword">if</span> ($setNull)&#123;</span><br><span class="line">SingleTableCRUD::delete(<span class="keyword">$this</span>-&gt;tbRefResourcesRoles,<span class="keyword">array</span>(<span class="string">'rsid'</span>=&gt;$rsid)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($defaultAccess != <span class="number">-1</span>)&#123;</span><br><span class="line">$defaultAccess = <span class="keyword">self</span>::formatAccessValue($defaultAccess);</span><br><span class="line"><span class="keyword">$this</span>-&gt;updateResource(<span class="keyword">array</span>(<span class="string">'rsid'</span>=&gt;$rsid,<span class="string">'access'</span>=&gt;$defaultAccess));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">SingleTableCRUD::delete(<span class="keyword">$this</span>-&gt;tbRefResourcesRoles,<span class="keyword">array</span>(<span class="string">'rsid'</span>=&gt;$rsid)); </span><br><span class="line"></span><br><span class="line">$roleIds = array_unique($roleIds); </span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($roleIds <span class="keyword">as</span> $role_id)&#123;</span><br><span class="line">SingleTableCRUD::insert(<span class="keyword">$this</span>-&gt;tbRefResourcesRoles,<span class="keyword">array</span>(<span class="string">'rsid'</span>=&gt;$rsid,<span class="string">'role_id'</span>=&gt;(int)$role_id));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cleanRolesForResource</span><span class="params">($rsid)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($rsid)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> SingleTableCRUD::delete(<span class="keyword">$this</span>-&gt;tbRefResourcesRoles,<span class="keyword">array</span>(<span class="string">'rsid'</span>=&gt;$rsid));</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cleanResourcesForRole</span><span class="params">($role_id)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($role_id)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> SingleTableCRUD::delete(<span class="keyword">$this</span>-&gt;tbRefResourcesRoles,<span class="keyword">array</span>(<span class="string">'role_id'</span>=&gt;(int) $role_id));</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 为角色分配资源,每次均先全部移除表中相关记录再插入</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> int $role_id</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> mixed $rsids</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">allocateResourcesForRole</span><span class="params">($role_id,$rsids)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($role_id)) <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line"></span><br><span class="line">$role_id = (int) $role_id;</span><br><span class="line">$rsids = normalize($rsids,<span class="string">','</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($rsids))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">SingleTableCRUD::delete(<span class="keyword">$this</span>-&gt;tbRefResourcesRoles,<span class="keyword">array</span>(<span class="string">'role_id'</span>=&gt;$role_id)); </span><br><span class="line"></span><br><span class="line">$rsids = array_unique($rsids); </span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($rsids <span class="keyword">as</span> $rsid)&#123;</span><br><span class="line">SingleTableCRUD::insert(<span class="keyword">$this</span>-&gt;tbRefResourcesRoles,<span class="keyword">array</span>(<span class="string">'rsid'</span>=&gt;$rsid,<span class="string">'role_id'</span>=&gt;$role_id));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 为用户指派角色,每次均先全部移除表中相关记录再插入</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* 此处在用户很多的时候可能会有性能问题 ... 后面再想怎么优化</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> int $user_id</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> mixed $roleIds</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">allocateRolesForUser</span><span class="params">($user_id,$roleIds)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($user_id)) <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line"></span><br><span class="line">$user_id = (int) $user_id;</span><br><span class="line">$roleIds = normalize($roleIds,<span class="string">','</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($roleIds))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">SingleTableCRUD::delete(<span class="keyword">$this</span>-&gt;tbRefUsersRoles,<span class="keyword">array</span>(<span class="string">'user_id'</span>=&gt;$user_id)); </span><br><span class="line"></span><br><span class="line">$roleIds = array_unique($roleIds); </span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($roleIds <span class="keyword">as</span> $roleId)&#123;</span><br><span class="line">SingleTableCRUD::insert(<span class="keyword">$this</span>-&gt;tbRefUsersRoles,<span class="keyword">array</span>(<span class="string">'user_id'</span>=&gt;$user_id,<span class="string">'role_id'</span>=&gt;$role_id));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 清除用户的角色信息</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> int $user_id</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cleanRolesForUser</span><span class="params">($user_id)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($user_id)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> SingleTableCRUD::delete(<span class="keyword">$this</span>-&gt;tbRefUsersRoles,<span class="keyword">array</span>(<span class="string">'user_id'</span>=&gt;(int) $user_id));</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 清除角色的用户关联</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> int $role_id</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">cleanUsersForRole</span><span class="params">($role_id)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($role_id)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">return</span> SingleTableCRUD::delete(<span class="keyword">$this</span>-&gt;tbRefUsersRoles,<span class="keyword">array</span>(<span class="string">'role_id'</span>=&gt;(int) $role_id));</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="具体检测代码"><a href="#具体检测代码" class="headerlink" title="具体检测代码"></a>具体检测代码</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 对资源进行acl校验</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $rsid 资源标识</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> array $user 特定用户,不指定则校验当前用户</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aclVerity</span><span class="params">($rsid ,array $user = null)</span></span>&#123; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($rsid)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"><span class="keyword">if</span> (!CoreApp::$defaultAcl) &#123;</span><br><span class="line">CoreApp::$defaultAcl = <span class="keyword">new</span> AclFlat();</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">$rsRow = aclGetResource($rsid); </span><br><span class="line"></span><br><span class="line"><span class="comment">// 未定义资源的缺省访问策略</span></span><br><span class="line"><span class="keyword">if</span> (!$rsRow) <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line"></span><br><span class="line">CoreApp::writeLog($rsRow,<span class="string">'test'</span>); </span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 校验步骤如下:</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* 1. 先校验 资源本身 access 属性</span></span><br><span class="line"><span class="comment">* EVERYONE =&gt; true,NOBODY =&gt; false * 其它的属性在下面继续校验</span></span><br><span class="line"><span class="comment">* 2. 从 session(或者 用户session表)中获取角色id集合</span></span><br><span class="line"><span class="comment">* 3. 如果 用户拥有角色 则 HAS_ROLE =&gt; true , NO_ROLE =&gt; false;反之亦然</span></span><br><span class="line"><span class="comment">* 4. 如果资源 access == ALLOCATE_ROLES</span></span><br><span class="line"><span class="comment">* 1. 从缓存(或者 $tbRefResourcesRoles)中获取 资源对应的角色id集合</span></span><br><span class="line"><span class="comment">* 2. 将用户拥有的角色id集合 与 资源对应的角色id集合求交集</span></span><br><span class="line"><span class="comment">* 3. 存在交集 =&gt; true;否则 =&gt; false</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"></span><br><span class="line">$rsRow[<span class="string">'access'</span>] = AclBase::formatAccessValue($rsRow[<span class="string">'access'</span>]); </span><br><span class="line"></span><br><span class="line"><span class="comment">// 允许任何人访问</span></span><br><span class="line"><span class="keyword">if</span> (AclBase::EVERYONE == $rsRow[<span class="string">'access'</span>]) <span class="keyword">return</span> <span class="keyword">true</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 不允许任何人访问</span></span><br><span class="line"><span class="keyword">if</span> (AclBase::NOBODY == $rsRow[<span class="string">'access'</span>]) <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取用户信息</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($user)) $user = <span class="keyword">isset</span>($_SESSION[<span class="string">'SI-SysUser'</span>]) ? $_SESSION[<span class="string">'SI-SysUser'</span>] : <span class="keyword">null</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户未登录,则当成无访问权限</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($user)) <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line"></span><br><span class="line">$user[<span class="string">'roles'</span>] = <span class="keyword">empty</span>($user[<span class="string">'roles'</span>]) ? <span class="keyword">null</span> : normalize($user[<span class="string">'roles'</span>],<span class="string">';'</span>); </span><br><span class="line"></span><br><span class="line">$userHasRoles = !<span class="keyword">empty</span>($user[<span class="string">'roles'</span>]); </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 允许 不带有角色的用户访问</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">if</span> (AclBase::NO_ROLE == $rsRow[<span class="string">'access'</span>]) <span class="keyword">return</span> $userHasRoles ? <span class="keyword">false</span> : <span class="keyword">true</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 允许 带有角色的用户访问</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">if</span> (AclBase::HAS_ROLE == $rsRow[<span class="string">'access'</span>]) <span class="keyword">return</span> $userHasRoles ? <span class="keyword">true</span> : <span class="keyword">false</span>; </span><br><span class="line"></span><br><span class="line"><span class="comment">// --- 对用户进行 资源 &lt;-&gt; 角色 校验</span></span><br><span class="line"><span class="keyword">if</span> ($userHasRoles)&#123;</span><br><span class="line"><span class="keyword">foreach</span> ($user[<span class="string">'roles'</span>] <span class="keyword">as</span> $role_id)&#123;</span><br><span class="line"><span class="keyword">if</span> ( aclGetRefResourcesRoles($rsid,$role_id) )</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">dump($user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 重新生成 角色资源访问控制表</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $actTable ACL表名称</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> boolean $return 是否返回重新生成的列表</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aclRebuildACT</span><span class="params">($actTable ,$return = false)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($actTable)) <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> $globalConf;</span><br><span class="line">$rst = <span class="keyword">null</span>;</span><br><span class="line">$cacheId = <span class="keyword">null</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>($actTable)&#123;</span><br><span class="line"><span class="keyword">case</span> CoreApp::$defaultAcl-&gt;tbResources:</span><br><span class="line">$cacheId = <span class="string">'acl-resources'</span>;</span><br><span class="line">$rst = SingleTableCRUD::findAll(CoreApp::$defaultAcl-&gt;tbResources);</span><br><span class="line"><span class="comment">// 转成 哈希表结构</span></span><br><span class="line"><span class="keyword">if</span> ($rst)&#123;</span><br><span class="line">$rst = array_to_hashmap($rst,<span class="string">'rsid'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CoreApp::$defaultAcl-&gt;tbRoles:</span><br><span class="line">$cacheId = <span class="string">'acl-roles'</span>;</span><br><span class="line">$rst = SingleTableCRUD::findAll(CoreApp::$defaultAcl-&gt;tbRoles);</span><br><span class="line"><span class="comment">// 转成 哈希表结构</span></span><br><span class="line"><span class="keyword">if</span> ($rst)&#123;</span><br><span class="line">$rst = array_to_hashmap($rst,<span class="string">'id'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CoreApp::$defaultAcl-&gt;tbRefResourcesRoles:</span><br><span class="line">$cacheId = <span class="string">'acl-roles_has_resources'</span>;</span><br><span class="line">$rst = SingleTableCRUD::findAll(CoreApp::$defaultAcl-&gt;tbRefResourcesRoles);</span><br><span class="line"><span class="keyword">if</span> ($rst)&#123;</span><br><span class="line">$_ = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">foreach</span> ($rst <span class="keyword">as</span> $row) &#123;</span><br><span class="line">$ref_id = <span class="string">"&#123;$row['rsid']&#125;&lt;-|-&gt;&#123;$row['role_id']&#125;"</span>;</span><br><span class="line">$_[$ref_id] = $row;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">unset</span>($rst);</span><br><span class="line">$rst = $_;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($cacheId)</span><br><span class="line">writeCache($globalConf[<span class="string">'runtime'</span>][<span class="string">'cacheDir'</span>] ,$cacheId ,$rst ,<span class="keyword">true</span>); </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($return) <span class="keyword">return</span> $rst;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 获取 角色资源访问控制表 数据</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $actTable ACL表名称</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aclGetACT</span><span class="params">($actTable)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($actTable)) <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> $rst = <span class="keyword">array</span>(); </span><br><span class="line"></span><br><span class="line">$cacheId = <span class="keyword">null</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>($actTable)&#123;</span><br><span class="line"><span class="keyword">case</span> CoreApp::$defaultAcl-&gt;tbResources:</span><br><span class="line">$cacheId = <span class="string">'acl-resources'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CoreApp::$defaultAcl-&gt;tbRoles:</span><br><span class="line">$cacheId = <span class="string">'acl-roles'</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> CoreApp::$defaultAcl-&gt;tbRefResourcesRoles:</span><br><span class="line">$cacheId = <span class="string">'acl-roles_has_resources'</span>;</span><br><span class="line"><span class="keyword">break</span>; </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!$cacheId) <span class="keyword">return</span> <span class="keyword">null</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($rst[$cacheId])) <span class="keyword">return</span> $rst[$cacheId]; </span><br><span class="line"></span><br><span class="line"><span class="keyword">global</span> $globalConf;</span><br><span class="line"><span class="comment">// 900</span></span><br><span class="line">$rst[$cacheId] = getCache($globalConf[<span class="string">'runtime'</span>][<span class="string">'cacheDir'</span>],$cacheId,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> ( !$rst[$cacheId] )&#123;</span><br><span class="line">$rst[$cacheId] = aclRebuildACT($actTable,<span class="keyword">true</span>);</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> $rst[$cacheId];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 获取 资源 记录</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $rsid</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aclGetResource</span><span class="params">($rsid)</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> $rst = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (!$rst)&#123;</span><br><span class="line">$rst = aclGetACT(CoreApp::$defaultAcl-&gt;tbResources);</span><br><span class="line"><span class="keyword">if</span> (!$rst) $rst = <span class="keyword">array</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">isset</span>($rst[$rsid]) ? $rst[$rsid] : <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 获取 角色 记录</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> int $role_id</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aclGetRole</span><span class="params">($role_id)</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> $rst = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (!$rst)&#123;</span><br><span class="line">$rst = aclGetACT(CoreApp::$defaultAcl-&gt;tbRoles);</span><br><span class="line"><span class="keyword">if</span> (!$rst) $rst = <span class="keyword">array</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">isset</span>($rst[$role_id]) ? $rst[$role_id] : <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 获取 用户角色关联 记录,此方法可以校验资源是否可被此角色调用</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> string $rsid</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> int $role_id</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aclGetRefResourcesRoles</span><span class="params">($rsid,$role_id)</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> $rst = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (!$rst)&#123;</span><br><span class="line">$rst = aclGetACT(CoreApp::$defaultAcl-&gt;tbRefResourcesRoles);</span><br><span class="line"><span class="keyword">if</span> (!$rst) $rst = <span class="keyword">array</span>();</span><br><span class="line">&#125;</span><br><span class="line">$ref_id = <span class="string">"&#123;$rsid&#125;&lt;-|-&gt;&#123;$role_id&#125;"</span>;</span><br><span class="line">CoreApp::writeLog(<span class="keyword">isset</span>($rst[$ref_id])?$rst[$ref_id]:<span class="string">'nodata'</span>,$ref_id);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">isset</span>($rst[$ref_id]) ? $rst[$ref_id] : <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP的ORM实现</title>
      <link href="/article/4014080582.html"/>
      <url>/article/4014080582.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>对象关系映射（英语：Object Relation Mapping，简称ORM，或O/RM，或O/R mapping），是一种程序技术，用于实现面向对象编程语言里不同类型系统的数据之间的转换。从效果上说，它其实是创建了一个可在编程语言里使用的“虚拟对象数据库”。</p><a id="more"></a><h1 id="ORM说明"><a href="#ORM说明" class="headerlink" title="ORM说明"></a>ORM说明</h1><p>一般的ORM包括以下四部分</p><ul><li>一个对持久类对象进行CRUD操作的API；</li><li>一个语言或API用来规定与类和类属性相关的查询；</li><li>一个规定MAPPING METADATA的工具；</li><li>一种技术可以让ORM的实现同事务对象一起进行DIRTYCHECKING, LAZY ASSOCIATION FETCHING以及其他的优化操作。</li></ul><h1 id="代码参考"><a href="#代码参考" class="headerlink" title="代码参考"></a>代码参考</h1><hr><h2 id="核心实现类"><a href="#核心实现类" class="headerlink" title="核心实现类"></a>核心实现类</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">   <span class="keyword">protected</span> $pk = <span class="string">'id'</span>;</span><br><span class="line">   <span class="keyword">protected</span> $_ID = <span class="keyword">null</span>; </span><br><span class="line">   <span class="keyword">protected</span> $_tableName;</span><br><span class="line">   <span class="keyword">protected</span> $_arRelationMap;</span><br><span class="line">   <span class="keyword">protected</span> $_modifyMap;</span><br><span class="line">   <span class="keyword">protected</span> $is_load = <span class="keyword">false</span>;</span><br><span class="line">   <span class="keyword">protected</span> $_blForDeletion;</span><br><span class="line">   <span class="keyword">protected</span> $_DB;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__consturct</span><span class="params">($id = null)</span></span>&#123;</span><br><span class="line">       <span class="keyword">$this</span>-&gt;_DB = mysql_connect(<span class="string">'127.0.0.1'</span>,<span class="string">'root'</span>,<span class="string">''</span>) ;</span><br><span class="line">       <span class="keyword">$this</span>-&gt;_tableName = <span class="keyword">$this</span>-&gt;getTableName();</span><br><span class="line">       <span class="keyword">$this</span>-&gt;_arRelationMap = <span class="keyword">$this</span>-&gt;getRelationMap();</span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">isset</span>($id))<span class="keyword">$this</span>-&gt;_ID = $id;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getTableName</span><span class="params">()</span></span>;</span><br><span class="line">   <span class="keyword">abstract</span> <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getRelationMap</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Load</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ID))&#123;</span><br><span class="line">           $sql = <span class="string">"SELECT "</span>;</span><br><span class="line">           <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;_arRelationMap <span class="keyword">as</span> $k =&gt; $v)&#123;</span><br><span class="line">               $sql .= <span class="string">'`'</span>.$k.<span class="string">'`,'</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           $sql .= substr($sql,<span class="number">0</span>,strlen($sql)<span class="number">-1</span>);</span><br><span class="line">           $sql .= <span class="string">"FROM "</span>.<span class="keyword">$this</span>-&gt;_tableName.<span class="string">" WHERE "</span>.<span class="keyword">$this</span>-&gt;pk.<span class="string">" = "</span>.<span class="keyword">$this</span>-&gt;_ID;</span><br><span class="line">           $result =<span class="keyword">$this</span>-&gt;_DB-&gt;mysql_query($sql);</span><br><span class="line">           <span class="keyword">foreach</span>($result[<span class="number">0</span>] <span class="keyword">as</span> $k1 =&gt; $v1)&#123;</span><br><span class="line">              $member = <span class="keyword">$this</span>-&gt;_arRelationMap[$key];</span><br><span class="line">              <span class="keyword">if</span>(property_exists(<span class="keyword">$this</span>,$member))&#123;</span><br><span class="line">                 <span class="keyword">if</span>(is_numeric($member))&#123;</span><br><span class="line">                     <span class="keyword">eval</span>(<span class="string">'$this-&gt;'</span>.$member.<span class="string">' = '</span>.$value.<span class="string">';'</span>);</span><br><span class="line">                 &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                     <span class="keyword">eval</span>(<span class="string">'$this-&gt;'</span>.$member.<span class="string">' = "'</span>.$value.<span class="string">'";'</span>);</span><br><span class="line">                 &#125;</span><br><span class="line">              &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">$this</span>-&gt;is_load = <span class="keyword">true</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($method,$param)</span></span>&#123;</span><br><span class="line">      $type   = substr($method,<span class="number">0</span>,<span class="number">3</span>);</span><br><span class="line">      $member = substr($method,<span class="number">3</span>);</span><br><span class="line">      <span class="keyword">switch</span>($type)&#123;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">'get'</span>:</span><br><span class="line">             <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;getMember($member);</span><br><span class="line">             <span class="keyword">break</span>;</span><br><span class="line">         <span class="keyword">case</span> <span class="string">'set'</span>:</span><br><span class="line">             <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;setMember($member,$param[<span class="number">0</span>]);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setMember</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(property_exists(<span class="keyword">$this</span>,$key))&#123;</span><br><span class="line">          <span class="keyword">if</span>(is_numeric($val))&#123;</span><br><span class="line">             <span class="keyword">eval</span>(<span class="string">'$this-&gt;'</span>.$key.<span class="string">' = '</span>.$val.<span class="string">';'</span>);</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             <span class="keyword">eval</span>(<span class="string">'$this-&gt;'</span>.$key.<span class="string">' = "'</span>.$val.<span class="string">'";'</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">$this</span>-&gt;_modifyMap[$key] = <span class="number">1</span>;</span><br><span class="line">       &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getMember</span><span class="params">($key,$val)</span></span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;is_load)&#123;</span><br><span class="line">          <span class="keyword">$this</span>-&gt;Load();</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">if</span>(property_exists(<span class="keyword">$this</span>,$key))&#123;</span><br><span class="line">          <span class="keyword">eval</span>(<span class="string">'$res = $this-&gt;'</span>.$key.<span class="string">';'</span> );</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;$key;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_ID))&#123;</span><br><span class="line">          $sql = <span class="string">"UPDATE "</span>.<span class="keyword">$this</span>-&gt;_tableName.<span class="string">" SET "</span>;</span><br><span class="line">          <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;arRelationMap <span class="keyword">as</span> $k2 =&gt; $v2)&#123;</span><br><span class="line">              <span class="keyword">if</span>(array_key_exists( $k2, <span class="keyword">$this</span>-&gt;_modifyMap))&#123;</span><br><span class="line">                  <span class="keyword">eval</span>( <span class="string">'$val = $this-&gt;'</span>.$v2.<span class="string">';'</span>);</span><br><span class="line">                  $sql_update .=  $v2.<span class="string">" = "</span>.$val;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          $sql .= substr($sql_update,<span class="number">0</span>,strlen($sql_update));</span><br><span class="line">          $sql .= <span class="string">'WHERE '</span>.<span class="keyword">$this</span>-&gt;pk.<span class="string">' = '</span>.<span class="keyword">$this</span>-&gt;_ID;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">          $sql = <span class="string">"INSERT INTO "</span>.<span class="keyword">$this</span>-&gt;_tableName.<span class="string">" ("</span>;</span><br><span class="line">          <span class="keyword">foreach</span>(<span class="keyword">$this</span>-&gt;arRelationMap <span class="keyword">as</span> $k3 =&gt; $v3)&#123;</span><br><span class="line">              <span class="keyword">if</span>(array_key_exists( $k3,<span class="keyword">$this</span>-&gt;_modifyMap))&#123;</span><br><span class="line">                  <span class="keyword">eval</span>(<span class="string">'$val = $this-&gt;'</span>.$v3.<span class="string">';'</span>);</span><br><span class="line">                  $field  .= <span class="string">"`"</span>.$v3.<span class="string">"`,"</span>; </span><br><span class="line">                  $values .= $val;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          $fields = substr($field,<span class="number">0</span>,strlen($field)<span class="number">-1</span>);</span><br><span class="line">          $vals   = substr($values,<span class="number">0</span>,strlen($values)<span class="number">-1</span>);</span><br><span class="line">          $sql .= $fields.<span class="string">" ) VALUES ("</span>.$vals.<span class="string">")"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">echo</span> $sql;</span><br><span class="line">      <span class="comment">//$this-&gt;_DB-&gt;query($sql);</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destory</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;ID))&#123;</span><br><span class="line">         $sql = <span class="string">"DELETE FROM "</span>.<span class="keyword">$this</span>-&gt;_tableName.<span class="string">" WHERE "</span>.<span class="keyword">$this</span>-&gt;pk.<span class="string">" = "</span>.<span class="keyword">$this</span>-&gt;_ID;</span><br><span class="line">        <span class="comment">// $this-&gt;_DB_query($sql);</span></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="function"><span class="keyword">function</span> <span class="title">getTableName</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="string">"test_user"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getRelationMap</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>( </span><br><span class="line">                      <span class="string">'id'</span>       =&gt; USER_ID,</span><br><span class="line">                      <span class="string">'user_name'</span>=&gt; USER_NAME,</span><br><span class="line">                      <span class="string">'user_age'</span> =&gt; USER_AGE</span><br><span class="line">                    );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getDB</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_DB;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调用方式"><a href="#调用方式" class="headerlink" title="调用方式"></a>调用方式</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$UserIns = <span class="keyword">new</span> User();</span><br><span class="line">print_r($UserIns);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP使用Spl接口实现观察者模式</title>
      <link href="/article/2990256094.html"/>
      <url>/article/2990256094.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>SPL（Standard PHP Library）即标准 PHP 库，是 PHP 5 在面向对象上能力提升的真实写照，它由一系列内置的类、接口和函数构成。SPL 通过加入集合，迭代器，新的异常类型，文件和数据处理类等提升了 PHP 语言的生产力。它还提供了一些十分有用的特性，如本文要介绍的内置 Observer 设计模式。<br>本文介绍如何通过使用 SPL 提供的 SplSubject和 SplObserver接口以及 SplObjectStorage类，快速实现 Observer 设计模式。</p><p>观察者模式这是一种较为容易去理解的一种模式吧，它是一种事件系统，意味着这一模式允许某个类观察另一个类的状态，当被观察的类状态发生改变的时候，观察类可以收到通知并且做出相应的动作。比如键盘，我一敲击，系统就收到通知并进行相应的回应。</p><a id="more"></a><h1 id="接口介绍"><a href="#接口介绍" class="headerlink" title="接口介绍"></a>接口介绍</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">SplSubject</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attach</span><span class="params">(SplObserver $observer)</span></span>;<span class="comment">//添加（注册）一个观察者</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detach</span><span class="params">(SplObserver $observer)</span></span>;<span class="comment">//删除一个观察者</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">notify</span><span class="params">()</span></span>;<span class="comment">//当状态发生改变时，通知所有观察者</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">SplObserver</span></span>&#123; </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">(SplSubject $subject)</span></span>;<span class="comment">//在目标发生改变时接收目标发送的通知；当关注的目标调用其 notify()时被调用</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="核心代码1"><a href="#核心代码1" class="headerlink" title="核心代码1"></a>核心代码1</h1><p>为什么使用 SplObjectStorage 类SplObjectStorage类实现了以对象为键的映射（map）或对象的集合（如果忽略作为键的对象所对应的数据）这种数据结构。这个类的实例很像一个数组，但是它所存放的对象都是唯一的。这个特点就为快速实现 Observer 设计模式贡献了不少力量，因为我们不希望同一个观察者被注册多次。该类的另一个特点是，可以直接从中删除指定的对象，而不需要遍历或搜索整个集合。</p><p>SplObjectStorage类的实例之所以能够只存储唯一的对象，是因为其 SplObjectStorage::attach()方法的实现中先判断了指定的对象是否已经被存储</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">SplSubject</span> </span>&#123; </span><br><span class="line">    <span class="keyword">private</span> $email; </span><br><span class="line">    <span class="keyword">private</span> $username; </span><br><span class="line">    <span class="keyword">private</span> $mobile; </span><br><span class="line">    <span class="keyword">private</span> $password; </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> SplObjectStorage </span></span><br><span class="line"><span class="comment">     */</span> </span><br><span class="line">    <span class="keyword">private</span> $observers = <span class="keyword">NULL</span>; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($email, $username, $mobile, $password)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;email = $email; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;username = $username; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;mobile = $mobile; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password; </span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;observers = <span class="keyword">new</span> SplObjectStorage(); </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attach</span><span class="params">(SplObserver $observer)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;observers-&gt;attach($observer); </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detach</span><span class="params">(SplObserver $observer)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;observers-&gt;detach($observer);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">notify</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        $userInfo = <span class="keyword">array</span>( </span><br><span class="line">            <span class="string">'username'</span> =&gt; <span class="keyword">$this</span>-&gt;username, </span><br><span class="line">            <span class="string">'password'</span> =&gt; <span class="keyword">$this</span>-&gt;password, </span><br><span class="line">            <span class="string">'email'</span> =&gt; <span class="keyword">$this</span>-&gt;email, </span><br><span class="line">            <span class="string">'mobile'</span> =&gt; <span class="keyword">$this</span>-&gt;mobile, </span><br><span class="line">        ); </span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;observers <span class="keyword">as</span> $observer) &#123; </span><br><span class="line">            $observer-&gt;update(<span class="keyword">$this</span>, $userInfo); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>, PHP_EOL; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;notify(); </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">changePassword</span><span class="params">($newPassword)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>, PHP_EOL; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $newPassword; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;notify(); </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">resetPassword</span><span class="params">()</span> </span>&#123; </span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__METHOD__</span>, PHP_EOL; </span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = mt_rand(<span class="number">100000</span>, <span class="number">999999</span>); </span><br><span class="line">        <span class="keyword">$this</span>-&gt;notify(); </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="核心代码2"><a href="#核心代码2" class="headerlink" title="核心代码2"></a>核心代码2</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">EmailSender</span> <span class="keyword">implements</span> <span class="title">SplObserver</span> </span>&#123; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">(SplSubject $subject)</span> </span>&#123; </span><br><span class="line">        <span class="keyword">if</span> (func_num_args() === <span class="number">2</span>) &#123; </span><br><span class="line">            $userInfo = func_get_arg(<span class="number">1</span>); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"向 &#123;$userInfo['email']&#125; 发送电子邮件成功。内容是：你好 &#123;$userInfo['username']&#125;"</span> . </span><br><span class="line">            <span class="string">"你的新密码是 &#123;$userInfo['password']&#125;，请妥善保管"</span>, PHP_EOL; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h1 id="测试脚本"><a href="#测试脚本" class="headerlink" title="测试脚本"></a>测试脚本</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"> header(<span class="string">'Content-Type: text/plain'</span>); </span><br><span class="line"></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">__autoload</span><span class="params">($class_name)</span> </span>&#123; </span><br><span class="line">    <span class="keyword">require_once</span> <span class="string">"$class_name.php"</span>; </span><br><span class="line"> &#125; </span><br><span class="line"></span><br><span class="line"> $email_sender = <span class="keyword">new</span> EmailSender(); </span><br><span class="line"> $mobile_sender = <span class="keyword">new</span> MobileSender(); </span><br><span class="line"> $web_sender = <span class="keyword">new</span> WebsiteSender(); </span><br><span class="line"></span><br><span class="line"> $user = <span class="keyword">new</span> User(<span class="string">'user1@domain.com'</span>, <span class="string">'张三'</span>, <span class="string">'13610002000'</span>, <span class="string">'123456'</span>); </span><br><span class="line"></span><br><span class="line"> <span class="comment">// 创建用户时通过 Email 和手机短信通知用户</span></span><br><span class="line"> $user-&gt;attach($email_sender); </span><br><span class="line"> $user-&gt;attach($mobile_sender); </span><br><span class="line"> $user-&gt;create($user); </span><br><span class="line"> <span class="keyword">echo</span> PHP_EOL; </span><br><span class="line"></span><br><span class="line"> <span class="comment">// 用户忘记密码后重置密码，还需要通过站内小纸条通知用户</span></span><br><span class="line"> $user-&gt;attach($web_sender); </span><br><span class="line"> $user-&gt;resetPassword(); </span><br><span class="line"> <span class="keyword">echo</span> PHP_EOL; </span><br><span class="line"></span><br><span class="line"> <span class="comment">// 用户变更了密码，但是不要给他的手机发短信</span></span><br><span class="line"> $user-&gt;detach($mobile_sender); </span><br><span class="line"> $user-&gt;changePassword(<span class="string">'654321'</span>); </span><br><span class="line"> <span class="keyword">echo</span> PHP_EOL;</span><br></pre></td></tr></table></figure><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> User::create </span><br><span class="line">向 user1@domain.com 发送电子邮件成功。内容是：你好张三你的新密码是 <span class="number">123456</span>，请妥善保管</span><br><span class="line">向 <span class="number">13610002000</span> 发送短消息成功。内容是：你好张三你的新密码是 <span class="number">123456</span>，请妥善保管</span><br><span class="line"></span><br><span class="line"> User::resetPassword </span><br><span class="line">向 user1@domain.com 发送电子邮件成功。内容是：你好张三你的新密码是 <span class="number">363989</span>，请妥善保管</span><br><span class="line">向 <span class="number">13610002000</span> 发送短消息成功。内容是：你好张三你的新密码是 <span class="number">363989</span>，请妥善保管</span><br><span class="line">这是 <span class="number">1</span> 封站内小纸条。你好张三，你的新密码是 <span class="number">363989</span>，请妥善保管</span><br><span class="line"></span><br><span class="line"> User::changePassword </span><br><span class="line">向 user1@domain.com 发送电子邮件成功。内容是：你好张三你的新密码是 <span class="number">654321</span>，请妥善保管</span><br><span class="line">这是 <span class="number">1</span> 封站内小纸条。你好张三，你的新密码是 <span class="number">654321</span>，请妥善保管</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> SPL标准库 </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP的二进制封包(pack/unpack)</title>
      <link href="/article/706730064.html"/>
      <url>/article/706730064.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>通过 TCP/IP 协议传输数据经常会用二进制数据包的形式，在 PHP 中可使用 pack() 和 unpack() 函数进行二进制封包和解包，通过 socket 建立 TCP 连接，并将数据包传输出去。</p><a id="more"></a><h1 id="字节序"><a href="#字节序" class="headerlink" title="字节序"></a>字节序</h1><p>在不同的计算机体系结构中，对于数据(比特、字节、字)等的存储和传输机制有所不同，因而引发了计算机领域中一个潜在但是又很重要的问题，即通信双方交流的信息单元应该以什么样的顺序进行传送。如果达不成一致的规则，计算机的通信与存储将会无法进行。目前在各种体系的计算机中通常采用的字节存储机制主要有两种：大端(Big-endian)和小端(Little-endian)。这里所说的大端和小端即是字节序。<strong>网络字节序是指大端序。TCP/IP都是采用网络字节序的方式</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">IsBigEndian</span><span class="params">()</span></span>&#123;</span><br><span class="line">$bin = pack(<span class="string">"L"</span>, <span class="number">0x12345678</span>);</span><br><span class="line">$hex = bin2hex($bin);</span><br><span class="line"><span class="keyword">if</span> (ord(pack(<span class="string">"H2"</span>, $hex)) === <span class="number">0x78</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">TRUE</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (IsBigEndian())&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"大端序"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"小端序"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试</span></span><br><span class="line"><span class="comment">//php -f pack.php</span></span><br><span class="line"><span class="comment">//小端序</span></span><br></pre></td></tr></table></figure><h1 id="Pack参数说明"><a href="#Pack参数说明" class="headerlink" title="Pack参数说明"></a>Pack参数说明</h1><table><thead><tr><th>Code</th><th align="center">Description</th></tr></thead><tbody><tr><td>a</td><td align="center">将字符串空白以 NULL 字符填满</td></tr><tr><td>A</td><td align="center">将字符串空白以 SPACE 字符 (空格) 填满</td></tr><tr><td>h</td><td align="center">16进制字符串，低位在前以半字节为单位</td></tr><tr><td>H</td><td align="center">16进制字符串，高位在前以半字节为单位</td></tr><tr><td>c</td><td align="center">有符号字符</td></tr><tr><td>C</td><td align="center">无符号字符</td></tr><tr><td>s</td><td align="center">有符号短整数 (16位，主机字节序)</td></tr><tr><td>S</td><td align="center">无符号短整数 (16位，主机字节序)</td></tr><tr><td>n</td><td align="center">无符号短整数 (16位, 大端字节序)</td></tr><tr><td>v</td><td align="center">无符号短整数 (16位, 小端字节序)</td></tr><tr><td>i</td><td align="center">有符号整数 (依赖机器大小及字节序)</td></tr><tr><td>I</td><td align="center">无符号整数 (依赖机器大小及字节序)</td></tr><tr><td>l</td><td align="center">有符号长整数 (32位，主机字节序)</td></tr><tr><td>L</td><td align="center">无符号长整数 (32位，主机字节序)</td></tr><tr><td>N</td><td align="center">无符号长整数 (32位, 大端字节序)</td></tr><tr><td>V</td><td align="center">无符号长整数 (32位, 小端字节序)</td></tr><tr><td>f</td><td align="center">单精度浮点数 (依计算机的范围)</td></tr><tr><td>d</td><td align="center">双精度浮点数 (依计算机的范围)</td></tr><tr><td>x</td><td align="center">空字节</td></tr><tr><td>X</td><td align="center">倒回一位</td></tr><tr><td>@</td><td align="center">填入 NULL 字符到绝对位置</td></tr><tr><td># 使用例子</td><td align="center"></td></tr><tr><td>比如现在要通过PHP发送数据包到服务器来登录。在仅需要提供用户名(最多30个字节)和密码(md5之后固定为32字节)的情况下，可以构造如下数据包(当然这事先需要跟服务器协商好数据包的规范，本例以网络字节序通信)</td><td align="center"></td></tr></tbody></table><h2 id="包结构"><a href="#包结构" class="headerlink" title="包结构"></a>包结构</h2><table><thead><tr><th>字段</th><th align="center">字节数</th><th align="right">说明</th></tr></thead><tbody><tr><td>包头</td><td align="center">定长</td><td align="right">每一个通信消息必须包含的内容</td></tr><tr><td>包体</td><td align="center">不定长</td><td align="right">根据每个通信消息的不同产生变化</td></tr><tr><td>## 包头详细内容</td><td align="center"></td><td align="right"></td></tr><tr><td>字段</td><td align="center">字节数</td><td align="right">类型</td></tr><tr><td>————-</td><td align="center">:————-:</td><td align="right">————-:</td></tr><tr><td>pkg_len</td><td align="center">2</td><td align="right">ushort</td></tr><tr><td>version</td><td align="center">1</td><td align="right">uchar</td></tr><tr><td>command_id</td><td align="center">2</td><td align="right">ushort</td></tr><tr><td>result</td><td align="center">2</td><td align="right">short</td></tr><tr><td>## Pack打包</td><td align="center"></td><td align="right"></td></tr><tr><td>包头是定长的，通过计算可知包头占7个字节，并且包头在包体之前。比如用户test需要登录，密码是123456</td><td align="center"></td><td align="right"></td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$version    = <span class="number">1</span>; <span class="comment">//协议版本</span></span><br><span class="line">$result     = <span class="number">0</span>; </span><br><span class="line">$command_id = <span class="number">1001</span>; <span class="comment">//消息ID</span></span><br><span class="line">$username   = <span class="string">"test"</span>; <span class="comment">//用户账号</span></span><br><span class="line">$password   = md5(<span class="string">"123456"</span>); <span class="comment">//用户密码</span></span><br><span class="line"><span class="comment">// 构造包体</span></span><br><span class="line">$bin_body   = pack(<span class="string">"a30a32"</span>, $username, $password);</span><br><span class="line"><span class="comment">// 包体长度</span></span><br><span class="line">$body_len   = strlen($bin_body);</span><br><span class="line">$bin_head   = pack(<span class="string">"nCns"</span>, $body_len, $version, $command_id, $result);</span><br><span class="line">$bin_data   = $bin_head . $bin_body;</span><br><span class="line"><span class="comment">// 发送数据</span></span><br><span class="line">socket_write($socket, $bin_data, strlen($bin_data));</span><br><span class="line">socket_close($socket);</span><br></pre></td></tr></table></figure><p>以上的代码中，pack(“a30a32”, $username, $password);a30表示30个a，您当然可以连续写30个a，但我想您不会这么傻。如果是a*的话，则表示任意多个a。通过服务器端的输出来看，PHP发送了30个字节过去，服务器端也接收了30个字节，但因为填充的\0是空字符，所以您不会看到有什么不一样的地方,a32同理</p><h2 id="unpack解包"><a href="#unpack解包" class="headerlink" title="unpack解包"></a>unpack解包</h2><p>unpack是用来解包经过pack打包的数据包，如果成功，则返回数组。其中格式化字符和执行pack时一一对应，但是需要额外的指定一个key，用作返回数组的key。多个字段用/分隔。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$bin = @pack(<span class="string">"a9SS"</span>, <span class="string">"test"</span>, <span class="number">20</span>, <span class="number">1</span>);</span><br><span class="line">$data = @unpack(<span class="string">"a9name/sage/Sgender"</span>, $bin);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (is_array($data))</span><br><span class="line">&#123;</span><br><span class="line">print_r($data);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//测试</span></span><br><span class="line">$ php  -f pack.php</span><br><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [name] =&gt; test</span><br><span class="line">    [age] =&gt; <span class="number">20</span></span><br><span class="line">    [gender] =&gt; <span class="number">1</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://my.oschina.net/goal/blog/195749" target="_blank" rel="noopener">PHP: 深入pack/unpack</a><br><a href="https://my.oschina.net/goal/blog/202378" target="_blank" rel="noopener">PHP: chr和pack、unpack那些事</a><br><a href="https://my.oschina.net/goal/blog/202381" target="_blank" rel="noopener">PHP: pack/unpack补遗</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP依赖注入实现和应用场景</title>
      <link href="/article/2814158988.html"/>
      <url>/article/2814158988.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>早在2004年，Martin Fowler就提出了“哪些方面的控制被反转了？”这个问题。他总结出是依赖对象的获得被反转了。基于这个结论，他为控制反转创造了一个更好的名字：依赖注入。许多非凡的应用（比HelloWorld.java更加优美，更加复杂）都是由两个或是更多的类通过彼此的合作来实现业务逻辑，这使得每个对象都需要与其合作的对象（也就是它所依赖的对象）的引用。如果这个获取过程要靠自身实现，那么如你所见，这将导致代码高度耦合并且难以测试。</p><a id="more"></a><h1 id="依赖倒置原则"><a href="#依赖倒置原则" class="headerlink" title="依赖倒置原则"></a>依赖倒置原则</h1><p>依赖倒置原则（Dependence Inversion Principle）是程序要依赖于抽象接口，不要依赖于具体实现。简单的说就是要求对抽象进行编程，不要对实现进行编程，这样就降低了客户与实现模块间的耦合。</p><p><strong>A.高层次的模块不应该依赖于低层次的模块，他们都应该依赖于抽象。</strong></p><p><strong>B.抽象不应该依赖于具体实现，具体实现应该依赖于抽象。</strong></p><h1 id="实现方式1"><a href="#实现方式1" class="headerlink" title="实现方式1"></a>实现方式1</h1><p><strong>实现一个轻量级的依赖注入容器</strong></p><hr><p>首先我们创建一个类，看起来是这样的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Di</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $_service = [];</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span><span class="params">($name, $definition)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_service[$name] = $definition;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_service[$name])) &#123;</span><br><span class="line">            $definition = <span class="keyword">$this</span>-&gt;service[$name];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"Service '"</span> . name . <span class="string">"' wasn't found in the dependency injection container"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_object($definition)) &#123;</span><br><span class="line">            $instance = call_user_func($definition);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们已经有了一个简单的类，包含一个属性和两个方法。假设我们现在有两个类，redisDB和cache，redisDB提供一个redis数据库的操作，cache负责缓存功能的实现并且依赖于redisDB。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">redisDB</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $_di;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $_options;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($options = null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_options = $options;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setDI</span><span class="params">($di)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_di = $di;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">($key, $lifetime)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// code</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">($key, $value, $lifetime)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// code</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// code</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个类中我们简单实现了redis的查询、保存和删除。你可能会有疑问，另外一个方法setDi是做什么的。待我继续为你讲解。另一个类和当前这个类结构很像：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cache</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $_di;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $_options;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> $_connect;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($options = null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_options = $options;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setDI</span><span class="params">($di)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_di = $di;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">_connect</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $options = <span class="keyword">$this</span>-&gt;_options;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($options[<span class="string">'connect'</span>])) &#123;</span><br><span class="line">            $service = $options[<span class="string">'connect'</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $service = <span class="string">'redis'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_di-&gt;get($service);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($key, $lifetime)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $connect = <span class="keyword">$this</span>-&gt;_connect;</span><br><span class="line">        <span class="keyword">if</span> (!is_object($connect)) &#123;</span><br><span class="line">            $connect = <span class="keyword">$this</span>-&gt;_connect()</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_connect = $connect;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// code</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">return</span> $connect-&gt;find($key, $lifetime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">($key, $value, $lifetime)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $connect = <span class="keyword">$this</span>-&gt;_connect;</span><br><span class="line">        <span class="keyword">if</span> (!is_object($connect)) &#123;</span><br><span class="line">            $connect = <span class="keyword">$this</span>-&gt;_connect()</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_connect = $connect;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// code</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">return</span> $connect-&gt;save($key, $lifetime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">($key)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $connect = <span class="keyword">$this</span>-&gt;_connect;</span><br><span class="line">        <span class="keyword">if</span> (!is_object($connect)) &#123;</span><br><span class="line">            $connect = <span class="keyword">$this</span>-&gt;_connect()</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_connect = $connect;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// code</span></span><br><span class="line">        ...</span><br><span class="line">        $connect-&gt;delete($key, $lifetime);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们就当已经实现了redisDB和cache这两个组件，具体的细节这里就先不做讨论了，来看看如何使用使用吧。首先需要将两个组件注入到容器中：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $di = <span class="keyword">new</span> Di();</span><br><span class="line">    $di-&gt;set(<span class="string">'redis'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">         <span class="keyword">return</span> <span class="keyword">new</span> redisDB([</span><br><span class="line">             <span class="string">'host'</span> =&gt; <span class="string">'127.0.0.1'</span>,</span><br><span class="line">             <span class="string">'port'</span> =&gt; <span class="number">6379</span></span><br><span class="line">         ]);</span><br><span class="line">    &#125;);</span><br><span class="line">    $di-&gt;set(<span class="string">'cache'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> <span class="title">use</span> <span class="params">($di)</span> </span>&#123;</span><br><span class="line">        $cache = <span class="keyword">new</span> cache([</span><br><span class="line">            <span class="string">'connect'</span> =&gt; <span class="string">'redis'</span></span><br><span class="line">        ]);</span><br><span class="line">        $cache-&gt;setDi($di);</span><br><span class="line">        <span class="keyword">return</span> $cache;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 然后在任何你想使用cache的地方</span></span><br><span class="line">    $cache = $di-&gt;get(<span class="string">'cache'</span>);</span><br><span class="line">    $cache-&gt;get(<span class="string">'key'</span>); <span class="comment">// 获取缓存数据</span></span><br><span class="line">    $cache-&gt;save(<span class="string">'key'</span>, <span class="string">'value'</span>, <span class="string">'lifetime'</span>); <span class="comment">// 保存数据</span></span><br><span class="line">    $cache-&gt;delete(<span class="string">'key'</span>); <span class="comment">// 删除数据</span></span><br></pre></td></tr></table></figure><p>到这里你可能会觉得这样以来反而有点繁琐了。cache和redisDB的结构如此之像，完全可以把redis写到cache中而没必要单独分离出来？但是你想过没有，有些数据及时性没那么高而且数量比较大，用redis有点不合适，mongodb是更好的选择；有些数据更新频率更慢，对查询速度也没要求，直接写入文件保存到硬盘可能更为合适；再或者，你的客户觉得redis运维难度有点大，让你给他换成memcache… 这就是为什么把它分离出来了。然后，继续改进代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">BackendInterface</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">($key, $lifetime)</span></span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">($key, $value, $lifetime)</span></span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">($key)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">redisDB</span> <span class="keyword">implements</span> <span class="title">BackendInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">($key, $lifetime)</span> </span>&#123; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">($key, $value, $lifetime)</span> </span>&#123; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">($key)</span> </span>&#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mongoDB</span> <span class="keyword">implements</span> <span class="title">BackendInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">($key, $lifetime)</span> </span>&#123; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">($key, $value, $lifetime)</span> </span>&#123; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">($key)</span> </span>&#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">file</span> <span class="keyword">implements</span> <span class="title">BackendInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">($key, $lifetime)</span> </span>&#123; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">($key, $value, $lifetime)</span> </span>&#123; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">($key)</span> </span>&#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$di = <span class="keyword">new</span> Di();</span><br><span class="line"><span class="comment">//  redis</span></span><br><span class="line">$di-&gt;set(<span class="string">'redis'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> redisDB([</span><br><span class="line">         <span class="string">'host'</span> =&gt; <span class="string">'127.0.0.1'</span>,</span><br><span class="line">         <span class="string">'port'</span> =&gt; <span class="number">6379</span></span><br><span class="line">     ]);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// mongodb</span></span><br><span class="line">$di-&gt;set(<span class="string">'mongo'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> mongoDB([</span><br><span class="line">         <span class="string">'host'</span> =&gt; <span class="string">'127.0.0.1'</span>,</span><br><span class="line">         <span class="string">'port'</span> =&gt; <span class="number">12707</span></span><br><span class="line">     ]);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// file</span></span><br><span class="line">$di-&gt;set(<span class="string">'file'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> file([</span><br><span class="line">         <span class="string">'path'</span> =&gt; <span class="string">'path'</span></span><br><span class="line">     ]);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// save at redis</span></span><br><span class="line">$di-&gt;set(<span class="string">'fastCache'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> <span class="title">use</span> <span class="params">($di)</span> </span>&#123;</span><br><span class="line">     $cache = <span class="keyword">new</span> cache([</span><br><span class="line">         <span class="string">'connect'</span> =&gt; <span class="string">'redis'</span></span><br><span class="line">     ]);</span><br><span class="line">     $cache-&gt;setDi($di);</span><br><span class="line">     <span class="keyword">return</span> $cache;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// save at mongodb</span></span><br><span class="line">$di-&gt;set(<span class="string">'cache'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> <span class="title">use</span> <span class="params">($di)</span> </span>&#123;</span><br><span class="line">     $cache = <span class="keyword">new</span> cache([</span><br><span class="line">         <span class="string">'connect'</span> =&gt; <span class="string">'mongo'</span></span><br><span class="line">     ]);</span><br><span class="line">     $cache-&gt;setDi($di);</span><br><span class="line">     <span class="keyword">return</span> $cache;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// save at file</span></span><br><span class="line">$di-&gt;set(<span class="string">'slowCache'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> <span class="title">use</span> <span class="params">($di)</span> </span>&#123;</span><br><span class="line">     $cache = <span class="keyword">new</span> cache([</span><br><span class="line">         <span class="string">'connect'</span> =&gt; <span class="string">'file'</span></span><br><span class="line">     ]);</span><br><span class="line">     $cache-&gt;setDi($di);</span><br><span class="line">     <span class="keyword">return</span> $cache;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 然后在任何你想使用cache的地方 </span></span><br><span class="line">$cache = $di-&gt;get(<span class="string">'cache'</span>);</span><br></pre></td></tr></table></figure><p>我们新增加了一个接口BackendInterface，规定了redisDB，mongoDB，file这三个类必须实现这个接口所要求的功能，至于其他锦上添花的功能，随你怎么发挥。而cache的代码，好像没有变，因为cache不需要关心数据是怎么存入数据库或者文件中。而cache的调用者，也不需要关心cache具体是怎么实现的，只要根据接口实现相应的方法就行了。多人协作你会更加受益，你们只需要商定好接口，然后分别实现就行了。</p><p>这就是依赖注入的魅力所在了，虽然看似如此简单。</p><p>以上代码还可以继续改进，直到你认为无可挑剔为止。比如，redis服务在一个请求中可能会调用多次，而每次调用都会重新创建，这将有损性能。只需扩展一下DI容器就好增加一个参数或增加一个方法，随你。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Di</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $_service = [];</span><br><span class="line">    <span class="keyword">protected</span> $_sharedService = [];</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span><span class="params">($name, $definition, $shared = false)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($shared) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_sharedService[$name] = $definition;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_service[$name] = $definition;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_service[$name])) &#123;</span><br><span class="line">            $definition = <span class="keyword">$this</span>-&gt;service[$name];</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_sharedService[$name]) &#123;</span><br><span class="line">             $definition = <span class="keyword">$this</span>-&gt;_sharedService[$name];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"Service '"</span> . name . <span class="string">"' wasn't found in the dependency injection container"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">```    </span><br><span class="line">这样以来，如果某个服务在一次请求中要调用多次，你就可以将shared属性设置为<span class="keyword">true</span>，以减少不必要的浪费。如果你觉得每次在注入时都要setDi有点繁琐，想让他自动setDi，那可以这么做：</span><br><span class="line"></span><br><span class="line">```php</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">DiAwareInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setDI</span><span class="params">($di)</span></span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getDI</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Di</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> $service;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span><span class="params">($name, $definition)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;service[$name] = $definition;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($name)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ...</span><br><span class="line">        <span class="keyword">if</span> (is_object($definition)) &#123;</span><br><span class="line">            $instance = call_user_func($definition);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果实现了DiAwareInterface这个接口，自动注入</span></span><br><span class="line">        <span class="keyword">if</span> (is_object($instance)) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($instance <span class="keyword">instanceof</span> DiAwareInterface) &#123;</span><br><span class="line">                $instance-&gt;setDI(<span class="keyword">$this</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $instance;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">redisDB</span> <span class="keyword">implements</span> <span class="title">BackendInterface</span>, <span class="title">DiAwareInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">find</span><span class="params">($key, $lifetime)</span> </span>&#123; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">save</span><span class="params">($key, $value, $lifetime)</span> </span>&#123; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">($key)</span> </span>&#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//然后，就可以这样：</span></span><br><span class="line"></span><br><span class="line">$di-&gt;set(<span class="string">'cache'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> cache([</span><br><span class="line">        <span class="string">'connect'</span> =&gt; <span class="string">'mongo'</span></span><br><span class="line">    ]);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>我们现在所实现的这个DI容器还很简陋，还不支持复杂的注入，你可以继续完善它。</p><h1 id="实现方式2"><a href="#实现方式2" class="headerlink" title="实现方式2"></a>实现方式2</h1><p><strong>实现如何不考虑加载顺序</strong>，在实现前就要明白要是不考虑加载顺序就意味着让程序自动进行加载自动进行实例化。类要实例化，只要保证完整的传递给’__construct’函数所必须的参数就OK了，在类中如果要引用其他类，也必须在构造函数中注入，否则调用时仍然会发生错误。那么我们需要一个类，来保存类实例化所需要的参数，依赖的其他类或者对象以及各个类实例化后的引用</p><hr><p>该类命名为盒子 ‘Container.class.php’, 其内容如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*    依赖注入类</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Container</span></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *<span class="doctag">@var</span> array 存储各个类的定义  以类的名称为键</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> $_definitions = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *<span class="doctag">@var</span> array 存储各个类实例化需要的参数 以类的名称为键</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> $_params = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    *<span class="doctag">@var</span> array 存储各个类实例化的引用</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> $_reflections = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@var</span> array 各个类依赖的类</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">private</span> $_dependencies = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 设置依赖</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> string $class 类、方法 名称</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> mixed $defination 类、方法的定义</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> array $params 类、方法初始化需要的参数</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span><span class="params">($class, $defination = array<span class="params">()</span>, $params = array<span class="params">()</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_params[$class] = $params;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_definitions[$class] = <span class="keyword">$this</span>-&gt;initDefinition($class, $defination);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取实例</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> string $class 类、方法 名称</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> array $params 实例化需要的参数</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> array $properties 为实例配置的属性</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($class, $params = array<span class="params">()</span>, $properties = array<span class="params">()</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_definitions[$class]))</span><br><span class="line">        &#123;<span class="comment">//如果重来没有声明过 则直接创建</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;bulid($class, $params, $properties);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $defination = <span class="keyword">$this</span>-&gt;_definitions[$class];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(is_callable($defination, <span class="keyword">true</span>))</span><br><span class="line">        &#123;<span class="comment">//如果声明是函数</span></span><br><span class="line">            $params = <span class="keyword">$this</span>-&gt;parseDependencies(<span class="keyword">$this</span>-&gt;mergeParams($class, $params));</span><br><span class="line">            $obj = call_user_func($defination, <span class="keyword">$this</span>, $params, $properties);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span>(is_array($defination))</span><br><span class="line">        &#123;</span><br><span class="line">            $originalClass = $defination[<span class="string">'class'</span>];</span><br><span class="line">            <span class="keyword">unset</span>($definition[<span class="string">'class'</span>]);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//difinition中除了'class'元素外 其他的都当做实例的属性处理</span></span><br><span class="line">            $properties = array_merge((<span class="keyword">array</span>)$definition, $properties);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//合并该类、函数声明时的参数</span></span><br><span class="line">            $params = <span class="keyword">$this</span>-&gt;mergeParams($class, $params);</span><br><span class="line">            <span class="keyword">if</span>($originalClass === $class)</span><br><span class="line">            &#123;<span class="comment">//如果声明中的class的名称和关键字的名称相同 则直接生成对象</span></span><br><span class="line">                $obj = <span class="keyword">$this</span>-&gt;bulid($class, $params, $properties);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;<span class="comment">//如果不同则有可能为别名 则从容器中获取</span></span><br><span class="line">                $obj = <span class="keyword">$this</span>-&gt;get($originalClass, $params, $properties);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span>(is_object($defination))</span><br><span class="line">        &#123;<span class="comment">//如果是个对象 直接返回</span></span><br><span class="line">            <span class="keyword">return</span> $defination;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>($class . <span class="string">' 声明错误!'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 合并参数</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> string $class 类、函数 名称</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> array $params 参数</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">mergeParams</span><span class="params">($class, $params = array<span class="params">()</span>)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;_params[$class]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> $params;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($params))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;_params[$class];</span><br><span class="line">        <span class="keyword">foreach</span>($params <span class="keyword">as</span> $key =&gt; $value) </span><br><span class="line">        &#123;</span><br><span class="line">            $result[$key] = $value;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 初始化声明</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> string $class 类、函数 名称</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> array $defination 类、函数的定义</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">initDefinition</span><span class="params">($class, $defination)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($defination))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">'class'</span> =&gt; $class);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(is_string($defination))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">'class'</span> =&gt; $defination);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(is_callable($defination) || is_object($defination))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> $defination;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(is_array($defination))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>($defination[<span class="string">'class'</span>]))</span><br><span class="line">            &#123;</span><br><span class="line">                $definition[<span class="string">'class'</span>] = $class;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> $defination;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>($class. <span class="string">' 声明错误'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 创建类实例、函数</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> string $class 类、函数 名称</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> array $params 初始化时的参数</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> array $properties 属性</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">bulid</span><span class="params">($class, $params, $properties)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>($reflection, $dependencies) = <span class="keyword">$this</span>-&gt;getDependencies($class);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ((<span class="keyword">array</span>)$params <span class="keyword">as</span> $index =&gt; $param) </span><br><span class="line">        &#123;<span class="comment">//依赖不仅有对象的依赖 还有普通参数的依赖</span></span><br><span class="line">            $dependencies[$index] = $param;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $dependencies = <span class="keyword">$this</span>-&gt;parseDependencies($dependencies, $reflection);</span><br><span class="line"></span><br><span class="line">        $obj = $reflection-&gt;newInstanceArgs($dependencies);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">empty</span>($properties))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> $obj;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ((<span class="keyword">array</span>)$properties <span class="keyword">as</span> $name =&gt; $value) </span><br><span class="line">        &#123;</span><br><span class="line">            $obj-&gt;$name = $value;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取依赖</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> string $class 类、函数 名称</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getDependencies</span><span class="params">($class)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_reflections[$class]))</span><br><span class="line">        &#123;<span class="comment">//如果已经实例化过 直接从缓存中获取</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">array</span>(<span class="keyword">$this</span>-&gt;_reflections[$class], <span class="keyword">$this</span>-&gt;_dependencies[$class]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $dependencies = <span class="keyword">array</span>();</span><br><span class="line">        $ref = <span class="keyword">new</span> ReflectionClass($class);<span class="comment">//获取对象的实例</span></span><br><span class="line">        $constructor = $ref-&gt;getConstructor();<span class="comment">//获取对象的构造方法</span></span><br><span class="line">        <span class="keyword">if</span>($constructor !== <span class="keyword">null</span>)</span><br><span class="line">        &#123;<span class="comment">//如果构造方法有参数</span></span><br><span class="line">            <span class="keyword">foreach</span>($constructor-&gt;getParameters() <span class="keyword">as</span> $param) </span><br><span class="line">            &#123;<span class="comment">//获取构造方法的参数</span></span><br><span class="line">                <span class="keyword">if</span>($param-&gt;isDefaultValueAvailable())</span><br><span class="line">                &#123;<span class="comment">//如果是默认 直接取默认值</span></span><br><span class="line">                    $dependencies[] = $param-&gt;getDefaultValue();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;<span class="comment">//将构造函数中的参数实例化</span></span><br><span class="line">                    $temp = $param-&gt;getClass();</span><br><span class="line">                    $temp = ($temp === <span class="keyword">null</span> ? <span class="keyword">null</span> : $temp-&gt;getName());</span><br><span class="line">                    $temp = Instance::getInstance($temp);<span class="comment">//这里使用Instance 类标示需要实例化 并且存储类的名字</span></span><br><span class="line">                    $dependencies[] = $temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_reflections[$class] = $ref;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_dependencies[$class] = $dependencies;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>($ref, $dependencies);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 解析依赖</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> array $dependencies 依赖数组</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> array $reflection 实例</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> array $dependencies</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">parseDependencies</span><span class="params">($dependencies, $reflection = null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> ((<span class="keyword">array</span>)$dependencies <span class="keyword">as</span> $index =&gt; $dependency) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>($dependency <span class="keyword">instanceof</span> Instance)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ($dependency-&gt;id !== <span class="keyword">null</span>) </span><br><span class="line">                &#123;</span><br><span class="line">                    $dependencies[$index] = <span class="keyword">$this</span>-&gt;get($dependency-&gt;id);</span><br><span class="line">                &#125; </span><br><span class="line">                <span class="keyword">elseif</span>($reflection !== <span class="keyword">null</span>) </span><br><span class="line">                &#123;</span><br><span class="line">                    $parameters = $reflection-&gt;getConstructor()-&gt;getParameters();</span><br><span class="line">                    $name = $parameters[$index]-&gt;getName();</span><br><span class="line">                    $class = $reflection-&gt;getName();</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'实例化类 '</span> . $class . <span class="string">' 时缺少必要参数:'</span> . $name);</span><br><span class="line">                &#125;   </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $dependencies;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是’Instance’类的内容，该类主要用于记录类的名称，标示是否需要获取实例</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Instance</span></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> 类唯一标示</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> $id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造函数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $id 类唯一ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;id = $id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取类的实例</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $id 类唯一ID</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Object Instance</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span><span class="params">($id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">self</span>($id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们在’Container.class.php’中还是实现了为类的实例动态添加属性的功能，若要动态添加属性，需使用魔术方法’__set’来实现，因此所有使用依赖加载的类需要实现该方法，那么我们先定义一个基础类 ‘Base.class.php’,内容如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 魔术方法</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> string $name</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> string $value</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> void</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span><span class="params">($name, $value)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;&#123;$name&#125; = $value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们来实现’A,B,C’类，A类的实例 依赖于 B类的实例，B类的实例依赖于C类的实例</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//A.class.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">extends</span> <span class="title">Base</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $instanceB;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(B $instanceB)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;instanceB = $instanceB;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;instanceB-&gt;test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//B.class.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span>  <span class="keyword">extends</span> <span class="title">Base</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $instanceC;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">(C $instanceC)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;instanceC = $instanceC;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;instanceC-&gt;test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//C.class.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C</span>  <span class="keyword">extends</span> <span class="title">Base</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'this is C!'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后我们在’index.php’中获取’A’的实例，要实现自动加载，需要使用SPL类库的’spl_autoload_register’方法，代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">autoload</span><span class="params">($className)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">include_once</span> $className . <span class="string">'.class.php'</span>;</span><br><span class="line">&#125;</span><br><span class="line">spl_autoload_register(<span class="string">'autoload'</span>, <span class="keyword">true</span>, <span class="keyword">true</span>);</span><br><span class="line">$container = <span class="keyword">new</span> Container;</span><br><span class="line"></span><br><span class="line">$a = $container-&gt;get(<span class="string">'A'</span>);</span><br><span class="line">$a-&gt;test();<span class="comment">//输出 'this is C!'</span></span><br></pre></td></tr></table></figure><p>上面的例子看起来是不是很爽，根本都不需要考虑’B’,’C’ (当然，这里B，C 除了要使用相应类的实例外，没有其他参数，如果有其他参数，必须显要调用’$container-&gt;set(xx)’方法进行注册，为其制定实例化必要的参数)。有细心同学可能会思考，比如我在先获取了’A’的实例，我在另外一个地方也要获取’A’的实例，但是这个地方’A’的实例需要其中某个属性不一样，我怎么做到？</p><p>你可以看到’Container’ 类的 ‘get’ 方法有其他两个参数，’$params’ 和 ‘$properties’ ， 这个’$properties’ 即可实现刚刚的需求，这都依赖’__set’魔术方法，当然这里你不仅可以注册类，也可以注册方法或者对象，只是注册方法时要使用回调函数，例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$container-&gt;set(<span class="string">'foo'</span>, <span class="function"><span class="keyword">function</span><span class="params">($container, $params, $config)</span></span>&#123;</span><br><span class="line">    print_r($params);</span><br><span class="line">    print_r($config);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$container-&gt;get(<span class="string">'foo'</span>, <span class="keyword">array</span>(<span class="string">'name'</span> =&gt; <span class="string">'foo'</span>), <span class="keyword">array</span>(<span class="string">'key'</span> =&gt; <span class="string">'test'</span>));</span><br></pre></td></tr></table></figure><p>还可以注册一个对象的实例，例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">mytest</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'this is a test'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$container-&gt;set(<span class="string">'testObj'</span>, <span class="keyword">new</span> Test());</span><br><span class="line"></span><br><span class="line">$test = $container-&gt;get(<span class="string">'testObj'</span>);</span><br><span class="line">$test-&gt;mytest();</span><br></pre></td></tr></table></figure><p>以上自动加载，依赖控制的大体思想就是将类所要引用的实例通过构造函数注入到其内部，在获取类的实例的时候通过PHP内建的反射解析构造函数的参数对所需要的类进行加载，然后进行实例化，并进行缓存以便在下次获取时直接从内存取得</p><h1 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Server</span>\<span class="title">PromotionExtend</span>\<span class="title">Lib</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DI</span> <span class="keyword">implements</span> \<span class="title">ArrayAccess</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> $_instance;</span><br><span class="line">    <span class="keyword">protected</span> $_service = [];</span><br><span class="line">    <span class="keyword">protected</span> $_sharedService = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//单例方法,用于访问实例的公共的静态方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!(<span class="keyword">self</span>::$_instance <span class="keyword">instanceof</span> <span class="keyword">self</span>))&#123;</span><br><span class="line">            <span class="keyword">self</span>::$_instance = <span class="keyword">new</span> <span class="keyword">self</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>::$_instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span><span class="params">()</span></span>&#123;</span><br><span class="line">        trigger_error(<span class="string">'Clone is not allow!'</span>,E_USER_ERROR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取服务</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed|null|object</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($name)</span></span>&#123;</span><br><span class="line">        <span class="comment">//先从已经实例化的列表中查找</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_service[$name]))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_service[$name];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//检测有没有注册该服务</span></span><br><span class="line">        <span class="keyword">if</span>( ! <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_sharedService[$name]))&#123;</span><br><span class="line">            trigger_error(<span class="string">"Service &#123;$name&#125; Not Find !!!\n"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $concrete = <span class="keyword">$this</span>-&gt;_sharedService[$name][<span class="string">'class'</span>];<span class="comment">//对象具体注册内容</span></span><br><span class="line">        $params = <span class="keyword">$this</span>-&gt;_sharedService[$name][<span class="string">'params'</span>];<span class="comment">//配置</span></span><br><span class="line">        $obj = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//匿名函数方式</span></span><br><span class="line">        <span class="keyword">if</span>($concrete <span class="keyword">instanceof</span> \Closure)&#123;</span><br><span class="line">            $obj = call_user_func_array($concrete,$params);</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(is_string($concrete))&#123;<span class="comment">//字符串方式</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">empty</span>($params))&#123;</span><br><span class="line">                $obj = <span class="keyword">new</span> $concrete;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//带参数的类实例化，使用反射</span></span><br><span class="line">                $class = <span class="keyword">new</span> \ReflectionClass($concrete);</span><br><span class="line">                $obj = $class-&gt;newInstanceArgs($params);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果是共享服务，则写入_instances列表，下次直接取回</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;_sharedService[$name][<span class="string">'shared'</span>] == <span class="keyword">true</span> &amp;&amp; $obj)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_service[$name] = $obj;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 检测是否已经绑定</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">has</span><span class="params">($name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_sharedService[$name]) <span class="keyword">or</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_service[$name]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 卸载服务</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">remove</span><span class="params">($name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;_sharedService[$name],<span class="keyword">$this</span>-&gt;_service[$name]);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置服务</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $class</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">set</span><span class="params">($name, $class, $params = array<span class="params">()</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;registerService($name, $class, $params);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置共享服务</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $class</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $params</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setShared</span><span class="params">($name, $class, $params = array<span class="params">()</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;registerService($name, $class, $params, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册服务</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $class</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $params</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bool|false $shared</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">registerService</span><span class="params">($name, $class, $params = array<span class="params">()</span>, $shared = false)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;remove($name);</span><br><span class="line">        <span class="keyword">if</span>( ! ($class <span class="keyword">instanceof</span> \Closure) &amp;&amp; is_object($class))&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_service[$name] = $class;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_sharedService[$name] = <span class="keyword">array</span>(<span class="string">'class'</span>=&gt;$class,<span class="string">'shared'</span>=&gt;$shared,<span class="string">'params'</span>=&gt;$params);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ArrayAccess接口,检测服务是否存在</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $offset</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetExists</span><span class="params">($offset)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;has($offset);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ArrayAccess接口,以$di[$name]方式获取服务</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $offset</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed|null|object</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetGet</span><span class="params">($offset)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get($offset);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ArrayAccess接口,以$di[$name]=$value方式注册服务，非共享</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $offset</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetSet</span><span class="params">($offset, $value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;set($offset,$value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * ArrayAccess接口,以unset($di[$name])方式卸载服务</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $offset</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetUnset</span><span class="params">($offset)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;remove($offset);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//使用</span></span><br><span class="line">class DiTest()&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $di = Di::getInstance();</span><br><span class="line">        <span class="comment">//直接实例化注册(不建议)</span></span><br><span class="line">        $redis = <span class="keyword">new</span> Redis($config[<span class="string">'redis'</span>][<span class="string">'test'</span>]);</span><br><span class="line">        $di-&gt;setShared(<span class="string">'redis'</span>, $redis);</span><br><span class="line">        <span class="comment">//或</span></span><br><span class="line">        <span class="comment">//以数组方式注入服务，实例化非共享</span></span><br><span class="line">        $di[<span class="string">'redis'</span>] = $redis;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">/*------------------------------------------------*/</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//延迟实例化注册</span></span><br><span class="line">        $di-&gt;setShard(<span class="string">'redis'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> <span class="title">use</span><span class="params">(config)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Redis($config[<span class="string">'redis'</span>][<span class="string">'test'</span>]);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//或</span></span><br><span class="line">        $di-&gt;setShard(<span class="string">'redis'</span>, <span class="string">'Redis'</span>, $config[<span class="string">'redis'</span>][<span class="string">'test'</span>]);</span><br><span class="line">        <span class="comment">//或</span></span><br><span class="line">        $di[<span class="string">'redis'</span>] = <span class="function"><span class="keyword">function</span><span class="params">()</span> <span class="title">use</span> <span class="params">($config)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Redis($config[<span class="string">'redis'</span>][<span class="string">'test'</span>]);</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP之spl_autoload_register使用说明</title>
      <link href="/article/3799683601.html"/>
      <url>/article/3799683601.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>spl_autoload_register — 注册给定的函数作为 <strong>autoload 的实现<br>将函数注册到SPL __autoload函数队列中。如果该队列中的函数尚未激活，则激活它们。<br>如果在你的程序中已经实现了</strong>autoload()函数，它必须显式注册到<strong>autoload()队列中。因为spl_autoload_register()函数会将Zend Engine中的</strong>autoload()函数取代为spl_autoload()或spl_autoload_call()。</p><p>如果需要多条 autoload 函数，spl_autoload_register() 满足了此类需求。 它实际上创建了 autoload 函数的队列，按定义时的顺序逐个执行。相比之下， __autoload() 只可以定义一次。<br><strong>(PHP 5 &gt;= 5.1.2, PHP 7)</strong></p><a id="more"></a><h1 id="核心实代码"><a href="#核心实代码" class="headerlink" title="核心实代码"></a>核心实代码</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">autoload</span> </span></span><br><span class="line"><span class="class"></span>&#123; </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">load</span><span class="params">( $class name )</span> </span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    $filename = <span class="string">"/home/user/class/"</span>.$classname.<span class="string">"class.php"</span>;</span><br><span class="line">    <span class="keyword">if</span> (file_exists($filename )) &#123; </span><br><span class="line">      <span class="keyword">require_once</span> $filename ; </span><br><span class="line">    &#125; </span><br><span class="line">  &#125; </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__autoload</span><span class="params">( $class name )</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">// 这个是默认的 autoload 方法</span></span><br><span class="line">    $filename = <span class="string">"/home/user/class/"</span>.$classname.<span class="string">"class.php"</span>;</span><br><span class="line">    <span class="keyword">if</span> (file_exists($filename )) &#123; </span><br><span class="line">      <span class="keyword">require_once</span> $filename ; </span><br><span class="line">  &#125; </span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="comment">// 注册一个 autoloader </span></span><br><span class="line">spl_autoload_register( <span class="string">'autoload::load'</span> ); </span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* __autoload 方法在 spl_autoload_register 后会失效，因为 autoload_func 函数指针已指向 spl_autoload 方法 </span></span><br><span class="line"><span class="comment">* 可以通过下面的方法来把 _autoload 方法加入 autoload_functions list </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line">spl_autoload_register( <span class="string">'__autoload'</span> ); </span><br><span class="line"> <span class="comment">// 注：下面的类看上去没有定义，但其实系统根据sql_autoload_register提供的路径会自动去/home/user// /class/*.class.php下搜索foo.class.php文件，如果没找到才报错。 </span></span><br><span class="line">$foo = <span class="keyword">new</span> foo(); </span><br><span class="line">$foo -&gt;bar(); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP的RSA加密解密</title>
      <link href="/article/1262273877.html"/>
      <url>/article/1262273877.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>php服务端与客户端交互、提供开放api时，通常需要对敏感的部分api数据传输进行数据加密，这时候rsa非对称加密就能派上用处了，下面通过一个例子来说明如何用php来实现数据的加密解密</p><a id="more"></a><h1 id="生成公钥、私钥"><a href="#生成公钥、私钥" class="headerlink" title="生成公钥、私钥"></a>生成公钥、私钥</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openssl genrsa -out rsa_private_key.pem 1024</span><br><span class="line">openssl pkcs8 -topk8 -inform PEM -<span class="keyword">in</span> rsa_private_key.pem -outform PEM -nocrypt -out private_key.pem</span><br><span class="line">openssl rsa -<span class="keyword">in</span> rsa_private_key.pem -pubout -out rsa_public_key.pem</span><br></pre></td></tr></table></figure><h1 id="PHP进行加密解密"><a href="#PHP进行加密解密" class="headerlink" title="PHP进行加密解密"></a>PHP进行加密解密</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* 密钥文件的路径 </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line">$privateKeyFilePath = <span class="string">'rsa_private_key.pem'</span>;  </span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* 公钥文件的路径 </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line">$publicKeyFilePath = <span class="string">'rsa_public_key.pem'</span>;  </span><br><span class="line">  </span><br><span class="line">extension_loaded(<span class="string">'openssl'</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'php需要openssl扩展支持'</span>);  </span><br><span class="line">  </span><br><span class="line">(file_exists($privateKeyFilePath) &amp;&amp; file_exists($publicKeyFilePath))  </span><br><span class="line"><span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'密钥或者公钥的文件路径不正确'</span>);  </span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* 生成Resource类型的密钥，如果密钥文件内容被破坏，openssl_pkey_get_private函数返回false </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line">$privateKey = openssl_pkey_get_private(file_get_contents($privateKeyFilePath));  </span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* 生成Resource类型的公钥，如果公钥文件内容被破坏，openssl_pkey_get_public函数返回false </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line">$publicKey = openssl_pkey_get_public(file_get_contents($publicKeyFilePath));  </span><br><span class="line">  </span><br><span class="line">($privateKey &amp;&amp; $publicKey) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'密钥或者公钥不可用'</span>);  </span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* 原数据 </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line">$originalData = <span class="string">'我的帐号是:shiki,密码是:matata'</span>;  </span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* 加密以后的数据，用于在网路上传输 </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line">$encryptData = <span class="string">''</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">'原数据为:'</span>, $originalData, PHP_EOL;  </span><br><span class="line">  </span><br><span class="line"><span class="comment">///////////////////////////////用私钥加密////////////////////////  </span></span><br><span class="line"><span class="keyword">if</span> (openssl_private_encrypt($originalData, $encryptData, $privateKey)) &#123;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">/** </span></span><br><span class="line"><span class="comment">     * 加密后 可以base64_encode后方便在网址中传输 或者打印  否则打印为乱码 </span></span><br><span class="line"><span class="comment">     */</span>  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'加密成功，加密后数据(base64_encode后)为:'</span>, base64_encode($encryptData), PHP_EOL;  </span><br><span class="line">  </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'加密失败'</span>);  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="comment">///////////////////////////////用公钥解密////////////////////////  </span></span><br><span class="line">  </span><br><span class="line"><span class="comment">/** </span></span><br><span class="line"><span class="comment">* 解密以后的数据 </span></span><br><span class="line"><span class="comment">*/</span>  </span><br><span class="line">$decryptData =<span class="string">''</span>;  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span> (openssl_public_decrypt($encryptData, $decryptData, $publicKey)) &#123;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'解密成功，解密后数据为:'</span>, $decryptData, PHP_EOL;  </span><br><span class="line">  </span><br><span class="line">&#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'解密成功'</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Crontab定时任务设置</title>
      <link href="/article/123452189.html"/>
      <url>/article/123452189.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# /sbin/service crond start</span><br><span class="line">正在启动 crond：                                           [确定]</span><br><span class="line">[root@localhost ~]# crontab -l</span><br><span class="line">#每五分钟更新一次</span><br><span class="line">*/5 * * * * curl &quot;www.xxxx.com?update_cache.html&quot;</span><br><span class="line">*/5 * * * * curl &quot;www.xxxx.com?update_cache.html&quot;</span><br><span class="line">*/5 * * * * curl &quot;www.xxxx.com?update_cache.html&quot;</span><br><span class="line">#每天晚上23:59更新一次</span><br><span class="line">59 23 * * * curl &quot;www.xxxx.com?update_cache.html&quot;</span><br><span class="line">#每年1月1号23:59分执行</span><br><span class="line">59 23 1 1 * curl &quot;www.xxxx.com?update_cache.html&quot;</span><br><span class="line">查看定时器执行状态</span><br><span class="line">tail -f /var/log/cron</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
